Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CLASS
    CONTINUE
    IMPORT
    LNEND
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> assignment
Rule 5     statement -> assignment_update
Rule 6     statement -> function_declaration
Rule 7     statement -> return_statement
Rule 8     statement -> function_call
Rule 9     statement -> if_statement
Rule 10    statement -> for_in_statement
Rule 11    function_call -> ID LPAREN RPAREN
Rule 12    function_call -> ID LPAREN parameters RPAREN
Rule 13    array_declaration -> LBRACKET array_elements RBRACKET
Rule 14    array_elements -> expression
Rule 15    array_elements -> expression COMMA array_elements
Rule 16    if_statement -> IF expression LBRACE statement_body RBRACE
Rule 17    if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
Rule 18    for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE
Rule 19    id_list -> ID
Rule 20    id_list -> ID COMMA id_list
Rule 21    assignment -> ID ASSIGN expression
Rule 22    assignment -> type_attr ID ASSIGN expression
Rule 23    assignment -> CONST ID ASSIGN expression
Rule 24    assignment -> CONST type_attr ID ASSIGN expression
Rule 25    assignment_type -> ASSIGN
Rule 26    assignment_type -> PLUSEQUAL
Rule 27    assignment_type -> MINUSEQUAL
Rule 28    assignment_update -> ID assignment_type expression
Rule 29    assignment_update -> ID ADD
Rule 30    assignment_update -> ID SUB
Rule 31    expression -> expression PLUS expression
Rule 32    expression -> expression MINUS expression
Rule 33    expression -> expression MULT expression
Rule 34    expression -> expression DIV expression
Rule 35    expression -> expression EXP expression
Rule 36    expression -> expression EQUALS expression
Rule 37    expression -> expression GREATER expression
Rule 38    expression -> expression LESS expression
Rule 39    expression -> expression GEQUAL expression
Rule 40    expression -> expression LEQUAL expression
Rule 41    expression -> expression NEQUAL expression
Rule 42    expression -> NUMBER
Rule 43    expression -> STRING
Rule 44    expression -> FLOAT
Rule 45    expression -> BOOL
Rule 46    expression -> NULL
Rule 47    expression -> ID
Rule 48    expression -> function_call
Rule 49    expression -> array_declaration
Rule 50    expression -> MINUS expression
Rule 51    return_statement -> RETURN expression
Rule 52    type_attr -> INTattr
Rule 53    type_attr -> FLOATattr
Rule 54    type_attr -> STRINGattr
Rule 55    type_attr -> BOOLattr
Rule 56    type_attr -> NULL
Rule 57    function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE
Rule 58    function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
Rule 59    function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
Rule 60    function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
Rule 61    statement_body -> statement_list
Rule 62    statement_body -> return_statement
Rule 63    value -> NUMBER
Rule 64    value -> STRING
Rule 65    value -> FLOAT
Rule 66    value -> ID
Rule 67    value -> function_call
Rule 68    value -> NULL
Rule 69    value -> BOOL
Rule 70    parameters -> ID
Rule 71    parameters -> ID COMMA parameters
Rule 72    parameters -> value
Rule 73    parameters -> value COMMA parameters
Rule 74    func_parameters -> ID
Rule 75    func_parameters -> ID COMMA func_parameters
Rule 76    func_parameters -> type_attr ID
Rule 77    func_parameters -> type_attr ID COMMA func_parameters

Terminals, with rules where they appear

ADD                  : 29
ASSIGN               : 21 22 23 24 25
BOOL                 : 45 69
BOOLattr             : 55
BREAK                : 
CLASS                : 
COMMA                : 15 20 71 73 75 77
CONST                : 23 24
CONTINUE             : 
DEF                  : 57 58 59 60
DIV                  : 34
ELSE                 : 17
EQUALS               : 36
EXP                  : 35
FLOAT                : 44 65
FLOATattr            : 53
FOR                  : 18
GEQUAL               : 39
GREATER              : 37
ID                   : 11 12 18 19 20 21 22 23 24 28 29 30 47 57 58 59 60 66 70 71 74 75 76 77
IF                   : 16 17
IMPORT               : 
IN                   : 18
INTattr              : 52
LBRACE               : 16 17 17 18 57 58 59 60
LBRACKET             : 13
LEQUAL               : 40
LESS                 : 38
LNEND                : 
LPAREN               : 11 12 57 58 59 60
MINUS                : 32 50
MINUSEQUAL           : 27
MULT                 : 33
NEQUAL               : 41
NULL                 : 46 56 68
NUMBER               : 42 63
PLUS                 : 31
PLUSEQUAL            : 26
RBRACE               : 16 17 17 18 57 58 59 60
RBRACKET             : 13
RETURN               : 51
RPAREN               : 11 12 57 58 59 60
STRING               : 43 64
STRINGattr           : 54
SUB                  : 30
WHILE                : 
error                : 

Nonterminals, with rules where they appear

array_declaration    : 49
array_elements       : 13 15
assignment           : 4
assignment_type      : 28
assignment_update    : 5
expression           : 14 15 16 17 21 22 23 24 28 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 50 51
for_in_statement     : 10
func_parameters      : 58 60 75 77
function_call        : 8 48 67
function_declaration : 6
id_list              : 18 20
if_statement         : 9
parameters           : 12 71 73
program              : 0
return_statement     : 7 62
statement            : 2 3
statement_body       : 16 17 17 18 57 58 59 60
statement_list       : 1 3 61
type_attr            : 22 24 59 60 76 77
value                : 72 73

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . assignment_update
    (6) statement -> . function_declaration
    (7) statement -> . return_statement
    (8) statement -> . function_call
    (9) statement -> . if_statement
    (10) statement -> . for_in_statement
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . type_attr ID ASSIGN expression
    (23) assignment -> . CONST ID ASSIGN expression
    (24) assignment -> . CONST type_attr ID ASSIGN expression
    (28) assignment_update -> . ID assignment_type expression
    (29) assignment_update -> . ID ADD
    (30) assignment_update -> . ID SUB
    (57) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (59) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (51) return_statement -> . RETURN expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (16) if_statement -> . IF expression LBRACE statement_body RBRACE
    (17) if_statement -> . IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (18) for_in_statement -> . FOR id_list IN ID LBRACE statement_body RBRACE
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    assignment_update              shift and go to state 5
    function_declaration           shift and go to state 6
    return_statement               shift and go to state 7
    function_call                  shift and go to state 8
    if_statement                   shift and go to state 9
    for_in_statement               shift and go to state 10
    type_attr                      shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . assignment_update
    (6) statement -> . function_declaration
    (7) statement -> . return_statement
    (8) statement -> . function_call
    (9) statement -> . if_statement
    (10) statement -> . for_in_statement
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . type_attr ID ASSIGN expression
    (23) assignment -> . CONST ID ASSIGN expression
    (24) assignment -> . CONST type_attr ID ASSIGN expression
    (28) assignment_update -> . ID assignment_type expression
    (29) assignment_update -> . ID ADD
    (30) assignment_update -> . ID SUB
    (57) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (59) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (51) return_statement -> . RETURN expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (16) if_statement -> . IF expression LBRACE statement_body RBRACE
    (17) if_statement -> . IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (18) for_in_statement -> . FOR id_list IN ID LBRACE statement_body RBRACE
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    $end            reduce using rule 1 (program -> statement_list .)
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    statement                      shift and go to state 23
    assignment                     shift and go to state 4
    assignment_update              shift and go to state 5
    function_declaration           shift and go to state 6
    return_statement               shift and go to state 7
    function_call                  shift and go to state 8
    if_statement                   shift and go to state 9
    for_in_statement               shift and go to state 10
    type_attr                      shift and go to state 12

state 3

    (2) statement_list -> statement .

    ID              reduce using rule 2 (statement_list -> statement .)
    CONST           reduce using rule 2 (statement_list -> statement .)
    DEF             reduce using rule 2 (statement_list -> statement .)
    RETURN          reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    FOR             reduce using rule 2 (statement_list -> statement .)
    INTattr         reduce using rule 2 (statement_list -> statement .)
    FLOATattr       reduce using rule 2 (statement_list -> statement .)
    STRINGattr      reduce using rule 2 (statement_list -> statement .)
    BOOLattr        reduce using rule 2 (statement_list -> statement .)
    NULL            reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> assignment .

    ID              reduce using rule 4 (statement -> assignment .)
    CONST           reduce using rule 4 (statement -> assignment .)
    DEF             reduce using rule 4 (statement -> assignment .)
    RETURN          reduce using rule 4 (statement -> assignment .)
    IF              reduce using rule 4 (statement -> assignment .)
    FOR             reduce using rule 4 (statement -> assignment .)
    INTattr         reduce using rule 4 (statement -> assignment .)
    FLOATattr       reduce using rule 4 (statement -> assignment .)
    STRINGattr      reduce using rule 4 (statement -> assignment .)
    BOOLattr        reduce using rule 4 (statement -> assignment .)
    NULL            reduce using rule 4 (statement -> assignment .)
    $end            reduce using rule 4 (statement -> assignment .)
    RBRACE          reduce using rule 4 (statement -> assignment .)


state 5

    (5) statement -> assignment_update .

    ID              reduce using rule 5 (statement -> assignment_update .)
    CONST           reduce using rule 5 (statement -> assignment_update .)
    DEF             reduce using rule 5 (statement -> assignment_update .)
    RETURN          reduce using rule 5 (statement -> assignment_update .)
    IF              reduce using rule 5 (statement -> assignment_update .)
    FOR             reduce using rule 5 (statement -> assignment_update .)
    INTattr         reduce using rule 5 (statement -> assignment_update .)
    FLOATattr       reduce using rule 5 (statement -> assignment_update .)
    STRINGattr      reduce using rule 5 (statement -> assignment_update .)
    BOOLattr        reduce using rule 5 (statement -> assignment_update .)
    NULL            reduce using rule 5 (statement -> assignment_update .)
    $end            reduce using rule 5 (statement -> assignment_update .)
    RBRACE          reduce using rule 5 (statement -> assignment_update .)


state 6

    (6) statement -> function_declaration .

    ID              reduce using rule 6 (statement -> function_declaration .)
    CONST           reduce using rule 6 (statement -> function_declaration .)
    DEF             reduce using rule 6 (statement -> function_declaration .)
    RETURN          reduce using rule 6 (statement -> function_declaration .)
    IF              reduce using rule 6 (statement -> function_declaration .)
    FOR             reduce using rule 6 (statement -> function_declaration .)
    INTattr         reduce using rule 6 (statement -> function_declaration .)
    FLOATattr       reduce using rule 6 (statement -> function_declaration .)
    STRINGattr      reduce using rule 6 (statement -> function_declaration .)
    BOOLattr        reduce using rule 6 (statement -> function_declaration .)
    NULL            reduce using rule 6 (statement -> function_declaration .)
    $end            reduce using rule 6 (statement -> function_declaration .)
    RBRACE          reduce using rule 6 (statement -> function_declaration .)


state 7

    (7) statement -> return_statement .

    ID              reduce using rule 7 (statement -> return_statement .)
    CONST           reduce using rule 7 (statement -> return_statement .)
    DEF             reduce using rule 7 (statement -> return_statement .)
    RETURN          reduce using rule 7 (statement -> return_statement .)
    IF              reduce using rule 7 (statement -> return_statement .)
    FOR             reduce using rule 7 (statement -> return_statement .)
    INTattr         reduce using rule 7 (statement -> return_statement .)
    FLOATattr       reduce using rule 7 (statement -> return_statement .)
    STRINGattr      reduce using rule 7 (statement -> return_statement .)
    BOOLattr        reduce using rule 7 (statement -> return_statement .)
    NULL            reduce using rule 7 (statement -> return_statement .)
    $end            reduce using rule 7 (statement -> return_statement .)
    RBRACE          reduce using rule 7 (statement -> return_statement .)


state 8

    (8) statement -> function_call .

    ID              reduce using rule 8 (statement -> function_call .)
    CONST           reduce using rule 8 (statement -> function_call .)
    DEF             reduce using rule 8 (statement -> function_call .)
    RETURN          reduce using rule 8 (statement -> function_call .)
    IF              reduce using rule 8 (statement -> function_call .)
    FOR             reduce using rule 8 (statement -> function_call .)
    INTattr         reduce using rule 8 (statement -> function_call .)
    FLOATattr       reduce using rule 8 (statement -> function_call .)
    STRINGattr      reduce using rule 8 (statement -> function_call .)
    BOOLattr        reduce using rule 8 (statement -> function_call .)
    NULL            reduce using rule 8 (statement -> function_call .)
    $end            reduce using rule 8 (statement -> function_call .)
    RBRACE          reduce using rule 8 (statement -> function_call .)


state 9

    (9) statement -> if_statement .

    ID              reduce using rule 9 (statement -> if_statement .)
    CONST           reduce using rule 9 (statement -> if_statement .)
    DEF             reduce using rule 9 (statement -> if_statement .)
    RETURN          reduce using rule 9 (statement -> if_statement .)
    IF              reduce using rule 9 (statement -> if_statement .)
    FOR             reduce using rule 9 (statement -> if_statement .)
    INTattr         reduce using rule 9 (statement -> if_statement .)
    FLOATattr       reduce using rule 9 (statement -> if_statement .)
    STRINGattr      reduce using rule 9 (statement -> if_statement .)
    BOOLattr        reduce using rule 9 (statement -> if_statement .)
    NULL            reduce using rule 9 (statement -> if_statement .)
    $end            reduce using rule 9 (statement -> if_statement .)
    RBRACE          reduce using rule 9 (statement -> if_statement .)


state 10

    (10) statement -> for_in_statement .

    ID              reduce using rule 10 (statement -> for_in_statement .)
    CONST           reduce using rule 10 (statement -> for_in_statement .)
    DEF             reduce using rule 10 (statement -> for_in_statement .)
    RETURN          reduce using rule 10 (statement -> for_in_statement .)
    IF              reduce using rule 10 (statement -> for_in_statement .)
    FOR             reduce using rule 10 (statement -> for_in_statement .)
    INTattr         reduce using rule 10 (statement -> for_in_statement .)
    FLOATattr       reduce using rule 10 (statement -> for_in_statement .)
    STRINGattr      reduce using rule 10 (statement -> for_in_statement .)
    BOOLattr        reduce using rule 10 (statement -> for_in_statement .)
    NULL            reduce using rule 10 (statement -> for_in_statement .)
    $end            reduce using rule 10 (statement -> for_in_statement .)
    RBRACE          reduce using rule 10 (statement -> for_in_statement .)


state 11

    (21) assignment -> ID . ASSIGN expression
    (28) assignment_update -> ID . assignment_type expression
    (29) assignment_update -> ID . ADD
    (30) assignment_update -> ID . SUB
    (11) function_call -> ID . LPAREN RPAREN
    (12) function_call -> ID . LPAREN parameters RPAREN
    (25) assignment_type -> . ASSIGN
    (26) assignment_type -> . PLUSEQUAL
    (27) assignment_type -> . MINUSEQUAL

    ASSIGN          shift and go to state 24
    ADD             shift and go to state 26
    SUB             shift and go to state 27
    LPAREN          shift and go to state 28
    PLUSEQUAL       shift and go to state 29
    MINUSEQUAL      shift and go to state 30

    assignment_type                shift and go to state 25

state 12

    (22) assignment -> type_attr . ID ASSIGN expression

    ID              shift and go to state 31


state 13

    (23) assignment -> CONST . ID ASSIGN expression
    (24) assignment -> CONST . type_attr ID ASSIGN expression
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    ID              shift and go to state 32
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    type_attr                      shift and go to state 33

state 14

    (57) function_declaration -> DEF . ID LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> DEF . ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (59) function_declaration -> DEF . type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> DEF . type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    ID              shift and go to state 34
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    type_attr                      shift and go to state 35

state 15

    (51) return_statement -> RETURN . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 36
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 16

    (16) if_statement -> IF . expression LBRACE statement_body RBRACE
    (17) if_statement -> IF . expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 47
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 17

    (18) for_in_statement -> FOR . id_list IN ID LBRACE statement_body RBRACE
    (19) id_list -> . ID
    (20) id_list -> . ID COMMA id_list

    ID              shift and go to state 49

    id_list                        shift and go to state 48

state 18

    (52) type_attr -> INTattr .

    ID              reduce using rule 52 (type_attr -> INTattr .)


state 19

    (53) type_attr -> FLOATattr .

    ID              reduce using rule 53 (type_attr -> FLOATattr .)


state 20

    (54) type_attr -> STRINGattr .

    ID              reduce using rule 54 (type_attr -> STRINGattr .)


state 21

    (55) type_attr -> BOOLattr .

    ID              reduce using rule 55 (type_attr -> BOOLattr .)


state 22

    (56) type_attr -> NULL .

    ID              reduce using rule 56 (type_attr -> NULL .)


state 23

    (3) statement_list -> statement_list statement .

    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    CONST           reduce using rule 3 (statement_list -> statement_list statement .)
    DEF             reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    FOR             reduce using rule 3 (statement_list -> statement_list statement .)
    INTattr         reduce using rule 3 (statement_list -> statement_list statement .)
    FLOATattr       reduce using rule 3 (statement_list -> statement_list statement .)
    STRINGattr      reduce using rule 3 (statement_list -> statement_list statement .)
    BOOLattr        reduce using rule 3 (statement_list -> statement_list statement .)
    NULL            reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)


state 24

    (21) assignment -> ID ASSIGN . expression
    (25) assignment_type -> ASSIGN .
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

  ! NUMBER          [ reduce using rule 25 (assignment_type -> ASSIGN .) ]
  ! STRING          [ reduce using rule 25 (assignment_type -> ASSIGN .) ]
  ! FLOAT           [ reduce using rule 25 (assignment_type -> ASSIGN .) ]
  ! BOOL            [ reduce using rule 25 (assignment_type -> ASSIGN .) ]
  ! NULL            [ reduce using rule 25 (assignment_type -> ASSIGN .) ]
  ! ID              [ reduce using rule 25 (assignment_type -> ASSIGN .) ]
  ! MINUS           [ reduce using rule 25 (assignment_type -> ASSIGN .) ]
  ! LBRACKET        [ reduce using rule 25 (assignment_type -> ASSIGN .) ]

    expression                     shift and go to state 50
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 25

    (28) assignment_update -> ID assignment_type . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 51
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 26

    (29) assignment_update -> ID ADD .

    ID              reduce using rule 29 (assignment_update -> ID ADD .)
    CONST           reduce using rule 29 (assignment_update -> ID ADD .)
    DEF             reduce using rule 29 (assignment_update -> ID ADD .)
    RETURN          reduce using rule 29 (assignment_update -> ID ADD .)
    IF              reduce using rule 29 (assignment_update -> ID ADD .)
    FOR             reduce using rule 29 (assignment_update -> ID ADD .)
    INTattr         reduce using rule 29 (assignment_update -> ID ADD .)
    FLOATattr       reduce using rule 29 (assignment_update -> ID ADD .)
    STRINGattr      reduce using rule 29 (assignment_update -> ID ADD .)
    BOOLattr        reduce using rule 29 (assignment_update -> ID ADD .)
    NULL            reduce using rule 29 (assignment_update -> ID ADD .)
    $end            reduce using rule 29 (assignment_update -> ID ADD .)
    RBRACE          reduce using rule 29 (assignment_update -> ID ADD .)


state 27

    (30) assignment_update -> ID SUB .

    ID              reduce using rule 30 (assignment_update -> ID SUB .)
    CONST           reduce using rule 30 (assignment_update -> ID SUB .)
    DEF             reduce using rule 30 (assignment_update -> ID SUB .)
    RETURN          reduce using rule 30 (assignment_update -> ID SUB .)
    IF              reduce using rule 30 (assignment_update -> ID SUB .)
    FOR             reduce using rule 30 (assignment_update -> ID SUB .)
    INTattr         reduce using rule 30 (assignment_update -> ID SUB .)
    FLOATattr       reduce using rule 30 (assignment_update -> ID SUB .)
    STRINGattr      reduce using rule 30 (assignment_update -> ID SUB .)
    BOOLattr        reduce using rule 30 (assignment_update -> ID SUB .)
    NULL            reduce using rule 30 (assignment_update -> ID SUB .)
    $end            reduce using rule 30 (assignment_update -> ID SUB .)
    RBRACE          reduce using rule 30 (assignment_update -> ID SUB .)


state 28

    (11) function_call -> ID LPAREN . RPAREN
    (12) function_call -> ID LPAREN . parameters RPAREN
    (70) parameters -> . ID
    (71) parameters -> . ID COMMA parameters
    (72) parameters -> . value
    (73) parameters -> . value COMMA parameters
    (63) value -> . NUMBER
    (64) value -> . STRING
    (65) value -> . FLOAT
    (66) value -> . ID
    (67) value -> . function_call
    (68) value -> . NULL
    (69) value -> . BOOL
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN

    RPAREN          shift and go to state 53
    ID              shift and go to state 52
    NUMBER          shift and go to state 56
    STRING          shift and go to state 57
    FLOAT           shift and go to state 58
    NULL            shift and go to state 60
    BOOL            shift and go to state 61

    parameters                     shift and go to state 54
    value                          shift and go to state 55
    function_call                  shift and go to state 59

state 29

    (26) assignment_type -> PLUSEQUAL .

    NUMBER          reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    STRING          reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    FLOAT           reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    BOOL            reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    NULL            reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    ID              reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    MINUS           reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    LBRACKET        reduce using rule 26 (assignment_type -> PLUSEQUAL .)


state 30

    (27) assignment_type -> MINUSEQUAL .

    NUMBER          reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    STRING          reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    FLOAT           reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    BOOL            reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    NULL            reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    ID              reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    MINUS           reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    LBRACKET        reduce using rule 27 (assignment_type -> MINUSEQUAL .)


state 31

    (22) assignment -> type_attr ID . ASSIGN expression

    ASSIGN          shift and go to state 62


state 32

    (23) assignment -> CONST ID . ASSIGN expression

    ASSIGN          shift and go to state 63


state 33

    (24) assignment -> CONST type_attr . ID ASSIGN expression

    ID              shift and go to state 64


state 34

    (57) function_declaration -> DEF ID . LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> DEF ID . LPAREN func_parameters RPAREN LBRACE statement_body RBRACE

    LPAREN          shift and go to state 65


state 35

    (59) function_declaration -> DEF type_attr . ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> DEF type_attr . ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE

    ID              shift and go to state 66


state 36

    (51) return_statement -> RETURN expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    ID              reduce using rule 51 (return_statement -> RETURN expression .)
    CONST           reduce using rule 51 (return_statement -> RETURN expression .)
    DEF             reduce using rule 51 (return_statement -> RETURN expression .)
    RETURN          reduce using rule 51 (return_statement -> RETURN expression .)
    IF              reduce using rule 51 (return_statement -> RETURN expression .)
    FOR             reduce using rule 51 (return_statement -> RETURN expression .)
    INTattr         reduce using rule 51 (return_statement -> RETURN expression .)
    FLOATattr       reduce using rule 51 (return_statement -> RETURN expression .)
    STRINGattr      reduce using rule 51 (return_statement -> RETURN expression .)
    BOOLattr        reduce using rule 51 (return_statement -> RETURN expression .)
    NULL            reduce using rule 51 (return_statement -> RETURN expression .)
    $end            reduce using rule 51 (return_statement -> RETURN expression .)
    RBRACE          reduce using rule 51 (return_statement -> RETURN expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77


state 37

    (50) expression -> MINUS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 78
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 38

    (42) expression -> NUMBER .

    PLUS            reduce using rule 42 (expression -> NUMBER .)
    MINUS           reduce using rule 42 (expression -> NUMBER .)
    MULT            reduce using rule 42 (expression -> NUMBER .)
    DIV             reduce using rule 42 (expression -> NUMBER .)
    EXP             reduce using rule 42 (expression -> NUMBER .)
    EQUALS          reduce using rule 42 (expression -> NUMBER .)
    GREATER         reduce using rule 42 (expression -> NUMBER .)
    LESS            reduce using rule 42 (expression -> NUMBER .)
    GEQUAL          reduce using rule 42 (expression -> NUMBER .)
    LEQUAL          reduce using rule 42 (expression -> NUMBER .)
    NEQUAL          reduce using rule 42 (expression -> NUMBER .)
    ID              reduce using rule 42 (expression -> NUMBER .)
    CONST           reduce using rule 42 (expression -> NUMBER .)
    DEF             reduce using rule 42 (expression -> NUMBER .)
    RETURN          reduce using rule 42 (expression -> NUMBER .)
    IF              reduce using rule 42 (expression -> NUMBER .)
    FOR             reduce using rule 42 (expression -> NUMBER .)
    INTattr         reduce using rule 42 (expression -> NUMBER .)
    FLOATattr       reduce using rule 42 (expression -> NUMBER .)
    STRINGattr      reduce using rule 42 (expression -> NUMBER .)
    BOOLattr        reduce using rule 42 (expression -> NUMBER .)
    NULL            reduce using rule 42 (expression -> NUMBER .)
    $end            reduce using rule 42 (expression -> NUMBER .)
    RBRACE          reduce using rule 42 (expression -> NUMBER .)
    LBRACE          reduce using rule 42 (expression -> NUMBER .)
    COMMA           reduce using rule 42 (expression -> NUMBER .)
    RBRACKET        reduce using rule 42 (expression -> NUMBER .)


state 39

    (43) expression -> STRING .

    PLUS            reduce using rule 43 (expression -> STRING .)
    MINUS           reduce using rule 43 (expression -> STRING .)
    MULT            reduce using rule 43 (expression -> STRING .)
    DIV             reduce using rule 43 (expression -> STRING .)
    EXP             reduce using rule 43 (expression -> STRING .)
    EQUALS          reduce using rule 43 (expression -> STRING .)
    GREATER         reduce using rule 43 (expression -> STRING .)
    LESS            reduce using rule 43 (expression -> STRING .)
    GEQUAL          reduce using rule 43 (expression -> STRING .)
    LEQUAL          reduce using rule 43 (expression -> STRING .)
    NEQUAL          reduce using rule 43 (expression -> STRING .)
    ID              reduce using rule 43 (expression -> STRING .)
    CONST           reduce using rule 43 (expression -> STRING .)
    DEF             reduce using rule 43 (expression -> STRING .)
    RETURN          reduce using rule 43 (expression -> STRING .)
    IF              reduce using rule 43 (expression -> STRING .)
    FOR             reduce using rule 43 (expression -> STRING .)
    INTattr         reduce using rule 43 (expression -> STRING .)
    FLOATattr       reduce using rule 43 (expression -> STRING .)
    STRINGattr      reduce using rule 43 (expression -> STRING .)
    BOOLattr        reduce using rule 43 (expression -> STRING .)
    NULL            reduce using rule 43 (expression -> STRING .)
    $end            reduce using rule 43 (expression -> STRING .)
    RBRACE          reduce using rule 43 (expression -> STRING .)
    LBRACE          reduce using rule 43 (expression -> STRING .)
    COMMA           reduce using rule 43 (expression -> STRING .)
    RBRACKET        reduce using rule 43 (expression -> STRING .)


state 40

    (44) expression -> FLOAT .

    PLUS            reduce using rule 44 (expression -> FLOAT .)
    MINUS           reduce using rule 44 (expression -> FLOAT .)
    MULT            reduce using rule 44 (expression -> FLOAT .)
    DIV             reduce using rule 44 (expression -> FLOAT .)
    EXP             reduce using rule 44 (expression -> FLOAT .)
    EQUALS          reduce using rule 44 (expression -> FLOAT .)
    GREATER         reduce using rule 44 (expression -> FLOAT .)
    LESS            reduce using rule 44 (expression -> FLOAT .)
    GEQUAL          reduce using rule 44 (expression -> FLOAT .)
    LEQUAL          reduce using rule 44 (expression -> FLOAT .)
    NEQUAL          reduce using rule 44 (expression -> FLOAT .)
    ID              reduce using rule 44 (expression -> FLOAT .)
    CONST           reduce using rule 44 (expression -> FLOAT .)
    DEF             reduce using rule 44 (expression -> FLOAT .)
    RETURN          reduce using rule 44 (expression -> FLOAT .)
    IF              reduce using rule 44 (expression -> FLOAT .)
    FOR             reduce using rule 44 (expression -> FLOAT .)
    INTattr         reduce using rule 44 (expression -> FLOAT .)
    FLOATattr       reduce using rule 44 (expression -> FLOAT .)
    STRINGattr      reduce using rule 44 (expression -> FLOAT .)
    BOOLattr        reduce using rule 44 (expression -> FLOAT .)
    NULL            reduce using rule 44 (expression -> FLOAT .)
    $end            reduce using rule 44 (expression -> FLOAT .)
    RBRACE          reduce using rule 44 (expression -> FLOAT .)
    LBRACE          reduce using rule 44 (expression -> FLOAT .)
    COMMA           reduce using rule 44 (expression -> FLOAT .)
    RBRACKET        reduce using rule 44 (expression -> FLOAT .)


state 41

    (45) expression -> BOOL .

    PLUS            reduce using rule 45 (expression -> BOOL .)
    MINUS           reduce using rule 45 (expression -> BOOL .)
    MULT            reduce using rule 45 (expression -> BOOL .)
    DIV             reduce using rule 45 (expression -> BOOL .)
    EXP             reduce using rule 45 (expression -> BOOL .)
    EQUALS          reduce using rule 45 (expression -> BOOL .)
    GREATER         reduce using rule 45 (expression -> BOOL .)
    LESS            reduce using rule 45 (expression -> BOOL .)
    GEQUAL          reduce using rule 45 (expression -> BOOL .)
    LEQUAL          reduce using rule 45 (expression -> BOOL .)
    NEQUAL          reduce using rule 45 (expression -> BOOL .)
    ID              reduce using rule 45 (expression -> BOOL .)
    CONST           reduce using rule 45 (expression -> BOOL .)
    DEF             reduce using rule 45 (expression -> BOOL .)
    RETURN          reduce using rule 45 (expression -> BOOL .)
    IF              reduce using rule 45 (expression -> BOOL .)
    FOR             reduce using rule 45 (expression -> BOOL .)
    INTattr         reduce using rule 45 (expression -> BOOL .)
    FLOATattr       reduce using rule 45 (expression -> BOOL .)
    STRINGattr      reduce using rule 45 (expression -> BOOL .)
    BOOLattr        reduce using rule 45 (expression -> BOOL .)
    NULL            reduce using rule 45 (expression -> BOOL .)
    $end            reduce using rule 45 (expression -> BOOL .)
    RBRACE          reduce using rule 45 (expression -> BOOL .)
    LBRACE          reduce using rule 45 (expression -> BOOL .)
    COMMA           reduce using rule 45 (expression -> BOOL .)
    RBRACKET        reduce using rule 45 (expression -> BOOL .)


state 42

    (46) expression -> NULL .

    PLUS            reduce using rule 46 (expression -> NULL .)
    MINUS           reduce using rule 46 (expression -> NULL .)
    MULT            reduce using rule 46 (expression -> NULL .)
    DIV             reduce using rule 46 (expression -> NULL .)
    EXP             reduce using rule 46 (expression -> NULL .)
    EQUALS          reduce using rule 46 (expression -> NULL .)
    GREATER         reduce using rule 46 (expression -> NULL .)
    LESS            reduce using rule 46 (expression -> NULL .)
    GEQUAL          reduce using rule 46 (expression -> NULL .)
    LEQUAL          reduce using rule 46 (expression -> NULL .)
    NEQUAL          reduce using rule 46 (expression -> NULL .)
    ID              reduce using rule 46 (expression -> NULL .)
    CONST           reduce using rule 46 (expression -> NULL .)
    DEF             reduce using rule 46 (expression -> NULL .)
    RETURN          reduce using rule 46 (expression -> NULL .)
    IF              reduce using rule 46 (expression -> NULL .)
    FOR             reduce using rule 46 (expression -> NULL .)
    INTattr         reduce using rule 46 (expression -> NULL .)
    FLOATattr       reduce using rule 46 (expression -> NULL .)
    STRINGattr      reduce using rule 46 (expression -> NULL .)
    BOOLattr        reduce using rule 46 (expression -> NULL .)
    NULL            reduce using rule 46 (expression -> NULL .)
    $end            reduce using rule 46 (expression -> NULL .)
    RBRACE          reduce using rule 46 (expression -> NULL .)
    LBRACE          reduce using rule 46 (expression -> NULL .)
    COMMA           reduce using rule 46 (expression -> NULL .)
    RBRACKET        reduce using rule 46 (expression -> NULL .)


state 43

    (47) expression -> ID .
    (11) function_call -> ID . LPAREN RPAREN
    (12) function_call -> ID . LPAREN parameters RPAREN

    PLUS            reduce using rule 47 (expression -> ID .)
    MINUS           reduce using rule 47 (expression -> ID .)
    MULT            reduce using rule 47 (expression -> ID .)
    DIV             reduce using rule 47 (expression -> ID .)
    EXP             reduce using rule 47 (expression -> ID .)
    EQUALS          reduce using rule 47 (expression -> ID .)
    GREATER         reduce using rule 47 (expression -> ID .)
    LESS            reduce using rule 47 (expression -> ID .)
    GEQUAL          reduce using rule 47 (expression -> ID .)
    LEQUAL          reduce using rule 47 (expression -> ID .)
    NEQUAL          reduce using rule 47 (expression -> ID .)
    ID              reduce using rule 47 (expression -> ID .)
    CONST           reduce using rule 47 (expression -> ID .)
    DEF             reduce using rule 47 (expression -> ID .)
    RETURN          reduce using rule 47 (expression -> ID .)
    IF              reduce using rule 47 (expression -> ID .)
    FOR             reduce using rule 47 (expression -> ID .)
    INTattr         reduce using rule 47 (expression -> ID .)
    FLOATattr       reduce using rule 47 (expression -> ID .)
    STRINGattr      reduce using rule 47 (expression -> ID .)
    BOOLattr        reduce using rule 47 (expression -> ID .)
    NULL            reduce using rule 47 (expression -> ID .)
    $end            reduce using rule 47 (expression -> ID .)
    RBRACE          reduce using rule 47 (expression -> ID .)
    LBRACE          reduce using rule 47 (expression -> ID .)
    COMMA           reduce using rule 47 (expression -> ID .)
    RBRACKET        reduce using rule 47 (expression -> ID .)
    LPAREN          shift and go to state 28


state 44

    (48) expression -> function_call .

    PLUS            reduce using rule 48 (expression -> function_call .)
    MINUS           reduce using rule 48 (expression -> function_call .)
    MULT            reduce using rule 48 (expression -> function_call .)
    DIV             reduce using rule 48 (expression -> function_call .)
    EXP             reduce using rule 48 (expression -> function_call .)
    EQUALS          reduce using rule 48 (expression -> function_call .)
    GREATER         reduce using rule 48 (expression -> function_call .)
    LESS            reduce using rule 48 (expression -> function_call .)
    GEQUAL          reduce using rule 48 (expression -> function_call .)
    LEQUAL          reduce using rule 48 (expression -> function_call .)
    NEQUAL          reduce using rule 48 (expression -> function_call .)
    ID              reduce using rule 48 (expression -> function_call .)
    CONST           reduce using rule 48 (expression -> function_call .)
    DEF             reduce using rule 48 (expression -> function_call .)
    RETURN          reduce using rule 48 (expression -> function_call .)
    IF              reduce using rule 48 (expression -> function_call .)
    FOR             reduce using rule 48 (expression -> function_call .)
    INTattr         reduce using rule 48 (expression -> function_call .)
    FLOATattr       reduce using rule 48 (expression -> function_call .)
    STRINGattr      reduce using rule 48 (expression -> function_call .)
    BOOLattr        reduce using rule 48 (expression -> function_call .)
    NULL            reduce using rule 48 (expression -> function_call .)
    $end            reduce using rule 48 (expression -> function_call .)
    RBRACE          reduce using rule 48 (expression -> function_call .)
    LBRACE          reduce using rule 48 (expression -> function_call .)
    COMMA           reduce using rule 48 (expression -> function_call .)
    RBRACKET        reduce using rule 48 (expression -> function_call .)


state 45

    (49) expression -> array_declaration .

    PLUS            reduce using rule 49 (expression -> array_declaration .)
    MINUS           reduce using rule 49 (expression -> array_declaration .)
    MULT            reduce using rule 49 (expression -> array_declaration .)
    DIV             reduce using rule 49 (expression -> array_declaration .)
    EXP             reduce using rule 49 (expression -> array_declaration .)
    EQUALS          reduce using rule 49 (expression -> array_declaration .)
    GREATER         reduce using rule 49 (expression -> array_declaration .)
    LESS            reduce using rule 49 (expression -> array_declaration .)
    GEQUAL          reduce using rule 49 (expression -> array_declaration .)
    LEQUAL          reduce using rule 49 (expression -> array_declaration .)
    NEQUAL          reduce using rule 49 (expression -> array_declaration .)
    ID              reduce using rule 49 (expression -> array_declaration .)
    CONST           reduce using rule 49 (expression -> array_declaration .)
    DEF             reduce using rule 49 (expression -> array_declaration .)
    RETURN          reduce using rule 49 (expression -> array_declaration .)
    IF              reduce using rule 49 (expression -> array_declaration .)
    FOR             reduce using rule 49 (expression -> array_declaration .)
    INTattr         reduce using rule 49 (expression -> array_declaration .)
    FLOATattr       reduce using rule 49 (expression -> array_declaration .)
    STRINGattr      reduce using rule 49 (expression -> array_declaration .)
    BOOLattr        reduce using rule 49 (expression -> array_declaration .)
    NULL            reduce using rule 49 (expression -> array_declaration .)
    $end            reduce using rule 49 (expression -> array_declaration .)
    RBRACE          reduce using rule 49 (expression -> array_declaration .)
    LBRACE          reduce using rule 49 (expression -> array_declaration .)
    COMMA           reduce using rule 49 (expression -> array_declaration .)
    RBRACKET        reduce using rule 49 (expression -> array_declaration .)


state 46

    (13) array_declaration -> LBRACKET . array_elements RBRACKET
    (14) array_elements -> . expression
    (15) array_elements -> . expression COMMA array_elements
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    array_elements                 shift and go to state 79
    expression                     shift and go to state 80
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 47

    (16) if_statement -> IF expression . LBRACE statement_body RBRACE
    (17) if_statement -> IF expression . LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    LBRACE          shift and go to state 81
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77


state 48

    (18) for_in_statement -> FOR id_list . IN ID LBRACE statement_body RBRACE

    IN              shift and go to state 82


state 49

    (19) id_list -> ID .
    (20) id_list -> ID . COMMA id_list

    IN              reduce using rule 19 (id_list -> ID .)
    COMMA           shift and go to state 83


state 50

    (21) assignment -> ID ASSIGN expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    ID              reduce using rule 21 (assignment -> ID ASSIGN expression .)
    CONST           reduce using rule 21 (assignment -> ID ASSIGN expression .)
    DEF             reduce using rule 21 (assignment -> ID ASSIGN expression .)
    RETURN          reduce using rule 21 (assignment -> ID ASSIGN expression .)
    IF              reduce using rule 21 (assignment -> ID ASSIGN expression .)
    FOR             reduce using rule 21 (assignment -> ID ASSIGN expression .)
    INTattr         reduce using rule 21 (assignment -> ID ASSIGN expression .)
    FLOATattr       reduce using rule 21 (assignment -> ID ASSIGN expression .)
    STRINGattr      reduce using rule 21 (assignment -> ID ASSIGN expression .)
    BOOLattr        reduce using rule 21 (assignment -> ID ASSIGN expression .)
    NULL            reduce using rule 21 (assignment -> ID ASSIGN expression .)
    $end            reduce using rule 21 (assignment -> ID ASSIGN expression .)
    RBRACE          reduce using rule 21 (assignment -> ID ASSIGN expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77


state 51

    (28) assignment_update -> ID assignment_type expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    ID              reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    CONST           reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    DEF             reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    RETURN          reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    IF              reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    FOR             reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    INTattr         reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    FLOATattr       reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    STRINGattr      reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    BOOLattr        reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    NULL            reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    $end            reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    RBRACE          reduce using rule 28 (assignment_update -> ID assignment_type expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77


state 52

    (70) parameters -> ID .
    (71) parameters -> ID . COMMA parameters
    (66) value -> ID .
    (11) function_call -> ID . LPAREN RPAREN
    (12) function_call -> ID . LPAREN parameters RPAREN

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 66 (value -> ID .)
    COMMA           shift and go to state 84
    RPAREN          reduce using rule 66 (value -> ID .)
    LPAREN          shift and go to state 28

  ! RPAREN          [ reduce using rule 70 (parameters -> ID .) ]
  ! COMMA           [ reduce using rule 66 (value -> ID .) ]


state 53

    (11) function_call -> ID LPAREN RPAREN .

    ID              reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    CONST           reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    DEF             reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    IF              reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    FOR             reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    INTattr         reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    FLOATattr       reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    STRINGattr      reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    BOOLattr        reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    NULL            reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    $end            reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    MULT            reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    DIV             reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    EXP             reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    EQUALS          reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    GREATER         reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    LESS            reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    GEQUAL          reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    LEQUAL          reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    NEQUAL          reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    LBRACE          reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 11 (function_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 11 (function_call -> ID LPAREN RPAREN .)


state 54

    (12) function_call -> ID LPAREN parameters . RPAREN

    RPAREN          shift and go to state 85


state 55

    (72) parameters -> value .
    (73) parameters -> value . COMMA parameters

    RPAREN          reduce using rule 72 (parameters -> value .)
    COMMA           shift and go to state 86


state 56

    (63) value -> NUMBER .

    COMMA           reduce using rule 63 (value -> NUMBER .)
    RPAREN          reduce using rule 63 (value -> NUMBER .)


state 57

    (64) value -> STRING .

    COMMA           reduce using rule 64 (value -> STRING .)
    RPAREN          reduce using rule 64 (value -> STRING .)


state 58

    (65) value -> FLOAT .

    COMMA           reduce using rule 65 (value -> FLOAT .)
    RPAREN          reduce using rule 65 (value -> FLOAT .)


state 59

    (67) value -> function_call .

    COMMA           reduce using rule 67 (value -> function_call .)
    RPAREN          reduce using rule 67 (value -> function_call .)


state 60

    (68) value -> NULL .

    COMMA           reduce using rule 68 (value -> NULL .)
    RPAREN          reduce using rule 68 (value -> NULL .)


state 61

    (69) value -> BOOL .

    COMMA           reduce using rule 69 (value -> BOOL .)
    RPAREN          reduce using rule 69 (value -> BOOL .)


state 62

    (22) assignment -> type_attr ID ASSIGN . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 87
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 63

    (23) assignment -> CONST ID ASSIGN . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 88
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 64

    (24) assignment -> CONST type_attr ID . ASSIGN expression

    ASSIGN          shift and go to state 89


state 65

    (57) function_declaration -> DEF ID LPAREN . RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> DEF ID LPAREN . func_parameters RPAREN LBRACE statement_body RBRACE
    (74) func_parameters -> . ID
    (75) func_parameters -> . ID COMMA func_parameters
    (76) func_parameters -> . type_attr ID
    (77) func_parameters -> . type_attr ID COMMA func_parameters
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    RPAREN          shift and go to state 91
    ID              shift and go to state 90
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    func_parameters                shift and go to state 92
    type_attr                      shift and go to state 93

state 66

    (59) function_declaration -> DEF type_attr ID . LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> DEF type_attr ID . LPAREN func_parameters RPAREN LBRACE statement_body RBRACE

    LPAREN          shift and go to state 94


state 67

    (31) expression -> expression PLUS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 95
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 68

    (32) expression -> expression MINUS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 96
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 69

    (33) expression -> expression MULT . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 97
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 70

    (34) expression -> expression DIV . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 98
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 71

    (35) expression -> expression EXP . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 99
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 72

    (36) expression -> expression EQUALS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 100
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 73

    (37) expression -> expression GREATER . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 101
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 74

    (38) expression -> expression LESS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 102
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 75

    (39) expression -> expression GEQUAL . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 103
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 76

    (40) expression -> expression LEQUAL . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 104
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 77

    (41) expression -> expression NEQUAL . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 105
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 78

    (50) expression -> MINUS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 50 (expression -> MINUS expression .)
    MINUS           reduce using rule 50 (expression -> MINUS expression .)
    MULT            reduce using rule 50 (expression -> MINUS expression .)
    DIV             reduce using rule 50 (expression -> MINUS expression .)
    EXP             reduce using rule 50 (expression -> MINUS expression .)
    EQUALS          reduce using rule 50 (expression -> MINUS expression .)
    GREATER         reduce using rule 50 (expression -> MINUS expression .)
    LESS            reduce using rule 50 (expression -> MINUS expression .)
    GEQUAL          reduce using rule 50 (expression -> MINUS expression .)
    LEQUAL          reduce using rule 50 (expression -> MINUS expression .)
    NEQUAL          reduce using rule 50 (expression -> MINUS expression .)
    ID              reduce using rule 50 (expression -> MINUS expression .)
    CONST           reduce using rule 50 (expression -> MINUS expression .)
    DEF             reduce using rule 50 (expression -> MINUS expression .)
    RETURN          reduce using rule 50 (expression -> MINUS expression .)
    IF              reduce using rule 50 (expression -> MINUS expression .)
    FOR             reduce using rule 50 (expression -> MINUS expression .)
    INTattr         reduce using rule 50 (expression -> MINUS expression .)
    FLOATattr       reduce using rule 50 (expression -> MINUS expression .)
    STRINGattr      reduce using rule 50 (expression -> MINUS expression .)
    BOOLattr        reduce using rule 50 (expression -> MINUS expression .)
    NULL            reduce using rule 50 (expression -> MINUS expression .)
    $end            reduce using rule 50 (expression -> MINUS expression .)
    RBRACE          reduce using rule 50 (expression -> MINUS expression .)
    LBRACE          reduce using rule 50 (expression -> MINUS expression .)
    COMMA           reduce using rule 50 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 50 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! MULT            [ shift and go to state 69 ]
  ! DIV             [ shift and go to state 70 ]
  ! EXP             [ shift and go to state 71 ]
  ! EQUALS          [ shift and go to state 72 ]
  ! GREATER         [ shift and go to state 73 ]
  ! LESS            [ shift and go to state 74 ]
  ! GEQUAL          [ shift and go to state 75 ]
  ! LEQUAL          [ shift and go to state 76 ]
  ! NEQUAL          [ shift and go to state 77 ]


state 79

    (13) array_declaration -> LBRACKET array_elements . RBRACKET

    RBRACKET        shift and go to state 106


state 80

    (14) array_elements -> expression .
    (15) array_elements -> expression . COMMA array_elements
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    RBRACKET        reduce using rule 14 (array_elements -> expression .)
    COMMA           shift and go to state 107
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77


state 81

    (16) if_statement -> IF expression LBRACE . statement_body RBRACE
    (17) if_statement -> IF expression LBRACE . statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (61) statement_body -> . statement_list
    (62) statement_body -> . return_statement
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (51) return_statement -> . RETURN expression
    (4) statement -> . assignment
    (5) statement -> . assignment_update
    (6) statement -> . function_declaration
    (7) statement -> . return_statement
    (8) statement -> . function_call
    (9) statement -> . if_statement
    (10) statement -> . for_in_statement
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . type_attr ID ASSIGN expression
    (23) assignment -> . CONST ID ASSIGN expression
    (24) assignment -> . CONST type_attr ID ASSIGN expression
    (28) assignment_update -> . ID assignment_type expression
    (29) assignment_update -> . ID ADD
    (30) assignment_update -> . ID SUB
    (57) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (59) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (16) if_statement -> . IF expression LBRACE statement_body RBRACE
    (17) if_statement -> . IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (18) for_in_statement -> . FOR id_list IN ID LBRACE statement_body RBRACE
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    RETURN          shift and go to state 15
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    IF              shift and go to state 16
    FOR             shift and go to state 17
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    statement_body                 shift and go to state 108
    statement_list                 shift and go to state 109
    return_statement               shift and go to state 110
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    assignment_update              shift and go to state 5
    function_declaration           shift and go to state 6
    function_call                  shift and go to state 8
    if_statement                   shift and go to state 9
    for_in_statement               shift and go to state 10
    type_attr                      shift and go to state 12

state 82

    (18) for_in_statement -> FOR id_list IN . ID LBRACE statement_body RBRACE

    ID              shift and go to state 111


state 83

    (20) id_list -> ID COMMA . id_list
    (19) id_list -> . ID
    (20) id_list -> . ID COMMA id_list

    ID              shift and go to state 49

    id_list                        shift and go to state 112

state 84

    (71) parameters -> ID COMMA . parameters
    (70) parameters -> . ID
    (71) parameters -> . ID COMMA parameters
    (72) parameters -> . value
    (73) parameters -> . value COMMA parameters
    (63) value -> . NUMBER
    (64) value -> . STRING
    (65) value -> . FLOAT
    (66) value -> . ID
    (67) value -> . function_call
    (68) value -> . NULL
    (69) value -> . BOOL
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN

    ID              shift and go to state 52
    NUMBER          shift and go to state 56
    STRING          shift and go to state 57
    FLOAT           shift and go to state 58
    NULL            shift and go to state 60
    BOOL            shift and go to state 61

    parameters                     shift and go to state 113
    value                          shift and go to state 55
    function_call                  shift and go to state 59

state 85

    (12) function_call -> ID LPAREN parameters RPAREN .

    ID              reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    CONST           reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    DEF             reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    RETURN          reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    IF              reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    FOR             reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    INTattr         reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    FLOATattr       reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    STRINGattr      reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    BOOLattr        reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    NULL            reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    $end            reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    PLUS            reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    MINUS           reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    MULT            reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    DIV             reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    EXP             reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    EQUALS          reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    GREATER         reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    LESS            reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    GEQUAL          reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    LEQUAL          reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    NEQUAL          reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    RBRACE          reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    LBRACE          reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    COMMA           reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    RPAREN          reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)
    RBRACKET        reduce using rule 12 (function_call -> ID LPAREN parameters RPAREN .)


state 86

    (73) parameters -> value COMMA . parameters
    (70) parameters -> . ID
    (71) parameters -> . ID COMMA parameters
    (72) parameters -> . value
    (73) parameters -> . value COMMA parameters
    (63) value -> . NUMBER
    (64) value -> . STRING
    (65) value -> . FLOAT
    (66) value -> . ID
    (67) value -> . function_call
    (68) value -> . NULL
    (69) value -> . BOOL
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN

    ID              shift and go to state 52
    NUMBER          shift and go to state 56
    STRING          shift and go to state 57
    FLOAT           shift and go to state 58
    NULL            shift and go to state 60
    BOOL            shift and go to state 61

    value                          shift and go to state 55
    parameters                     shift and go to state 114
    function_call                  shift and go to state 59

state 87

    (22) assignment -> type_attr ID ASSIGN expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    ID              reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    CONST           reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    DEF             reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    RETURN          reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    IF              reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    FOR             reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    INTattr         reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    FLOATattr       reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    STRINGattr      reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    BOOLattr        reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    NULL            reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    $end            reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    RBRACE          reduce using rule 22 (assignment -> type_attr ID ASSIGN expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77


state 88

    (23) assignment -> CONST ID ASSIGN expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    ID              reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    CONST           reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    DEF             reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    RETURN          reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    IF              reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    FOR             reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    INTattr         reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    FLOATattr       reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    STRINGattr      reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    BOOLattr        reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    NULL            reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    $end            reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    RBRACE          reduce using rule 23 (assignment -> CONST ID ASSIGN expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77


state 89

    (24) assignment -> CONST type_attr ID ASSIGN . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 115
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 90

    (74) func_parameters -> ID .
    (75) func_parameters -> ID . COMMA func_parameters

    RPAREN          reduce using rule 74 (func_parameters -> ID .)
    COMMA           shift and go to state 116


state 91

    (57) function_declaration -> DEF ID LPAREN RPAREN . LBRACE statement_body RBRACE

    LBRACE          shift and go to state 117


state 92

    (58) function_declaration -> DEF ID LPAREN func_parameters . RPAREN LBRACE statement_body RBRACE

    RPAREN          shift and go to state 118


state 93

    (76) func_parameters -> type_attr . ID
    (77) func_parameters -> type_attr . ID COMMA func_parameters

    ID              shift and go to state 119


state 94

    (59) function_declaration -> DEF type_attr ID LPAREN . RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> DEF type_attr ID LPAREN . func_parameters RPAREN LBRACE statement_body RBRACE
    (74) func_parameters -> . ID
    (75) func_parameters -> . ID COMMA func_parameters
    (76) func_parameters -> . type_attr ID
    (77) func_parameters -> . type_attr ID COMMA func_parameters
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    RPAREN          shift and go to state 120
    ID              shift and go to state 90
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    type_attr                      shift and go to state 93
    func_parameters                shift and go to state 121

state 95

    (31) expression -> expression PLUS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 31 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 31 (expression -> expression PLUS expression .)
    EXP             reduce using rule 31 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 31 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 31 (expression -> expression PLUS expression .)
    LESS            reduce using rule 31 (expression -> expression PLUS expression .)
    GEQUAL          reduce using rule 31 (expression -> expression PLUS expression .)
    LEQUAL          reduce using rule 31 (expression -> expression PLUS expression .)
    NEQUAL          reduce using rule 31 (expression -> expression PLUS expression .)
    ID              reduce using rule 31 (expression -> expression PLUS expression .)
    CONST           reduce using rule 31 (expression -> expression PLUS expression .)
    DEF             reduce using rule 31 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 31 (expression -> expression PLUS expression .)
    IF              reduce using rule 31 (expression -> expression PLUS expression .)
    FOR             reduce using rule 31 (expression -> expression PLUS expression .)
    INTattr         reduce using rule 31 (expression -> expression PLUS expression .)
    FLOATattr       reduce using rule 31 (expression -> expression PLUS expression .)
    STRINGattr      reduce using rule 31 (expression -> expression PLUS expression .)
    BOOLattr        reduce using rule 31 (expression -> expression PLUS expression .)
    NULL            reduce using rule 31 (expression -> expression PLUS expression .)
    $end            reduce using rule 31 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 31 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 31 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 31 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 31 (expression -> expression PLUS expression .)
    MULT            shift and go to state 69
    DIV             shift and go to state 70

  ! MULT            [ reduce using rule 31 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 31 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! EXP             [ shift and go to state 71 ]
  ! EQUALS          [ shift and go to state 72 ]
  ! GREATER         [ shift and go to state 73 ]
  ! LESS            [ shift and go to state 74 ]
  ! GEQUAL          [ shift and go to state 75 ]
  ! LEQUAL          [ shift and go to state 76 ]
  ! NEQUAL          [ shift and go to state 77 ]


state 96

    (32) expression -> expression MINUS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 32 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 32 (expression -> expression MINUS expression .)
    EXP             reduce using rule 32 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 32 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 32 (expression -> expression MINUS expression .)
    LESS            reduce using rule 32 (expression -> expression MINUS expression .)
    GEQUAL          reduce using rule 32 (expression -> expression MINUS expression .)
    LEQUAL          reduce using rule 32 (expression -> expression MINUS expression .)
    NEQUAL          reduce using rule 32 (expression -> expression MINUS expression .)
    ID              reduce using rule 32 (expression -> expression MINUS expression .)
    CONST           reduce using rule 32 (expression -> expression MINUS expression .)
    DEF             reduce using rule 32 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 32 (expression -> expression MINUS expression .)
    IF              reduce using rule 32 (expression -> expression MINUS expression .)
    FOR             reduce using rule 32 (expression -> expression MINUS expression .)
    INTattr         reduce using rule 32 (expression -> expression MINUS expression .)
    FLOATattr       reduce using rule 32 (expression -> expression MINUS expression .)
    STRINGattr      reduce using rule 32 (expression -> expression MINUS expression .)
    BOOLattr        reduce using rule 32 (expression -> expression MINUS expression .)
    NULL            reduce using rule 32 (expression -> expression MINUS expression .)
    $end            reduce using rule 32 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 32 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 32 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 32 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 32 (expression -> expression MINUS expression .)
    MULT            shift and go to state 69
    DIV             shift and go to state 70

  ! MULT            [ reduce using rule 32 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 32 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! EXP             [ shift and go to state 71 ]
  ! EQUALS          [ shift and go to state 72 ]
  ! GREATER         [ shift and go to state 73 ]
  ! LESS            [ shift and go to state 74 ]
  ! GEQUAL          [ shift and go to state 75 ]
  ! LEQUAL          [ shift and go to state 76 ]
  ! NEQUAL          [ shift and go to state 77 ]


state 97

    (33) expression -> expression MULT expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 33 (expression -> expression MULT expression .)
    MINUS           reduce using rule 33 (expression -> expression MULT expression .)
    MULT            reduce using rule 33 (expression -> expression MULT expression .)
    DIV             reduce using rule 33 (expression -> expression MULT expression .)
    EXP             reduce using rule 33 (expression -> expression MULT expression .)
    EQUALS          reduce using rule 33 (expression -> expression MULT expression .)
    GREATER         reduce using rule 33 (expression -> expression MULT expression .)
    LESS            reduce using rule 33 (expression -> expression MULT expression .)
    GEQUAL          reduce using rule 33 (expression -> expression MULT expression .)
    LEQUAL          reduce using rule 33 (expression -> expression MULT expression .)
    NEQUAL          reduce using rule 33 (expression -> expression MULT expression .)
    ID              reduce using rule 33 (expression -> expression MULT expression .)
    CONST           reduce using rule 33 (expression -> expression MULT expression .)
    DEF             reduce using rule 33 (expression -> expression MULT expression .)
    RETURN          reduce using rule 33 (expression -> expression MULT expression .)
    IF              reduce using rule 33 (expression -> expression MULT expression .)
    FOR             reduce using rule 33 (expression -> expression MULT expression .)
    INTattr         reduce using rule 33 (expression -> expression MULT expression .)
    FLOATattr       reduce using rule 33 (expression -> expression MULT expression .)
    STRINGattr      reduce using rule 33 (expression -> expression MULT expression .)
    BOOLattr        reduce using rule 33 (expression -> expression MULT expression .)
    NULL            reduce using rule 33 (expression -> expression MULT expression .)
    $end            reduce using rule 33 (expression -> expression MULT expression .)
    RBRACE          reduce using rule 33 (expression -> expression MULT expression .)
    LBRACE          reduce using rule 33 (expression -> expression MULT expression .)
    COMMA           reduce using rule 33 (expression -> expression MULT expression .)
    RBRACKET        reduce using rule 33 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! MULT            [ shift and go to state 69 ]
  ! DIV             [ shift and go to state 70 ]
  ! EXP             [ shift and go to state 71 ]
  ! EQUALS          [ shift and go to state 72 ]
  ! GREATER         [ shift and go to state 73 ]
  ! LESS            [ shift and go to state 74 ]
  ! GEQUAL          [ shift and go to state 75 ]
  ! LEQUAL          [ shift and go to state 76 ]
  ! NEQUAL          [ shift and go to state 77 ]


state 98

    (34) expression -> expression DIV expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 34 (expression -> expression DIV expression .)
    MINUS           reduce using rule 34 (expression -> expression DIV expression .)
    MULT            reduce using rule 34 (expression -> expression DIV expression .)
    DIV             reduce using rule 34 (expression -> expression DIV expression .)
    EXP             reduce using rule 34 (expression -> expression DIV expression .)
    EQUALS          reduce using rule 34 (expression -> expression DIV expression .)
    GREATER         reduce using rule 34 (expression -> expression DIV expression .)
    LESS            reduce using rule 34 (expression -> expression DIV expression .)
    GEQUAL          reduce using rule 34 (expression -> expression DIV expression .)
    LEQUAL          reduce using rule 34 (expression -> expression DIV expression .)
    NEQUAL          reduce using rule 34 (expression -> expression DIV expression .)
    ID              reduce using rule 34 (expression -> expression DIV expression .)
    CONST           reduce using rule 34 (expression -> expression DIV expression .)
    DEF             reduce using rule 34 (expression -> expression DIV expression .)
    RETURN          reduce using rule 34 (expression -> expression DIV expression .)
    IF              reduce using rule 34 (expression -> expression DIV expression .)
    FOR             reduce using rule 34 (expression -> expression DIV expression .)
    INTattr         reduce using rule 34 (expression -> expression DIV expression .)
    FLOATattr       reduce using rule 34 (expression -> expression DIV expression .)
    STRINGattr      reduce using rule 34 (expression -> expression DIV expression .)
    BOOLattr        reduce using rule 34 (expression -> expression DIV expression .)
    NULL            reduce using rule 34 (expression -> expression DIV expression .)
    $end            reduce using rule 34 (expression -> expression DIV expression .)
    RBRACE          reduce using rule 34 (expression -> expression DIV expression .)
    LBRACE          reduce using rule 34 (expression -> expression DIV expression .)
    COMMA           reduce using rule 34 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 34 (expression -> expression DIV expression .)

  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! MULT            [ shift and go to state 69 ]
  ! DIV             [ shift and go to state 70 ]
  ! EXP             [ shift and go to state 71 ]
  ! EQUALS          [ shift and go to state 72 ]
  ! GREATER         [ shift and go to state 73 ]
  ! LESS            [ shift and go to state 74 ]
  ! GEQUAL          [ shift and go to state 75 ]
  ! LEQUAL          [ shift and go to state 76 ]
  ! NEQUAL          [ shift and go to state 77 ]


state 99

    (35) expression -> expression EXP expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 35 (expression -> expression EXP expression .)
    CONST           reduce using rule 35 (expression -> expression EXP expression .)
    DEF             reduce using rule 35 (expression -> expression EXP expression .)
    RETURN          reduce using rule 35 (expression -> expression EXP expression .)
    IF              reduce using rule 35 (expression -> expression EXP expression .)
    FOR             reduce using rule 35 (expression -> expression EXP expression .)
    INTattr         reduce using rule 35 (expression -> expression EXP expression .)
    FLOATattr       reduce using rule 35 (expression -> expression EXP expression .)
    STRINGattr      reduce using rule 35 (expression -> expression EXP expression .)
    BOOLattr        reduce using rule 35 (expression -> expression EXP expression .)
    NULL            reduce using rule 35 (expression -> expression EXP expression .)
    $end            reduce using rule 35 (expression -> expression EXP expression .)
    RBRACE          reduce using rule 35 (expression -> expression EXP expression .)
    LBRACE          reduce using rule 35 (expression -> expression EXP expression .)
    COMMA           reduce using rule 35 (expression -> expression EXP expression .)
    RBRACKET        reduce using rule 35 (expression -> expression EXP expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77

  ! PLUS            [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! MULT            [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! DIV             [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! EXP             [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! EQUALS          [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! GREATER         [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! LESS            [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! GEQUAL          [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! LEQUAL          [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! NEQUAL          [ reduce using rule 35 (expression -> expression EXP expression .) ]


state 100

    (36) expression -> expression EQUALS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 36 (expression -> expression EQUALS expression .)
    CONST           reduce using rule 36 (expression -> expression EQUALS expression .)
    DEF             reduce using rule 36 (expression -> expression EQUALS expression .)
    RETURN          reduce using rule 36 (expression -> expression EQUALS expression .)
    IF              reduce using rule 36 (expression -> expression EQUALS expression .)
    FOR             reduce using rule 36 (expression -> expression EQUALS expression .)
    INTattr         reduce using rule 36 (expression -> expression EQUALS expression .)
    FLOATattr       reduce using rule 36 (expression -> expression EQUALS expression .)
    STRINGattr      reduce using rule 36 (expression -> expression EQUALS expression .)
    BOOLattr        reduce using rule 36 (expression -> expression EQUALS expression .)
    NULL            reduce using rule 36 (expression -> expression EQUALS expression .)
    $end            reduce using rule 36 (expression -> expression EQUALS expression .)
    RBRACE          reduce using rule 36 (expression -> expression EQUALS expression .)
    LBRACE          reduce using rule 36 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 36 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 36 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77

  ! PLUS            [ reduce using rule 36 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression EQUALS expression .) ]
  ! MULT            [ reduce using rule 36 (expression -> expression EQUALS expression .) ]
  ! DIV             [ reduce using rule 36 (expression -> expression EQUALS expression .) ]
  ! EXP             [ reduce using rule 36 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 36 (expression -> expression EQUALS expression .) ]
  ! GREATER         [ reduce using rule 36 (expression -> expression EQUALS expression .) ]
  ! LESS            [ reduce using rule 36 (expression -> expression EQUALS expression .) ]
  ! GEQUAL          [ reduce using rule 36 (expression -> expression EQUALS expression .) ]
  ! LEQUAL          [ reduce using rule 36 (expression -> expression EQUALS expression .) ]
  ! NEQUAL          [ reduce using rule 36 (expression -> expression EQUALS expression .) ]


state 101

    (37) expression -> expression GREATER expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 37 (expression -> expression GREATER expression .)
    CONST           reduce using rule 37 (expression -> expression GREATER expression .)
    DEF             reduce using rule 37 (expression -> expression GREATER expression .)
    RETURN          reduce using rule 37 (expression -> expression GREATER expression .)
    IF              reduce using rule 37 (expression -> expression GREATER expression .)
    FOR             reduce using rule 37 (expression -> expression GREATER expression .)
    INTattr         reduce using rule 37 (expression -> expression GREATER expression .)
    FLOATattr       reduce using rule 37 (expression -> expression GREATER expression .)
    STRINGattr      reduce using rule 37 (expression -> expression GREATER expression .)
    BOOLattr        reduce using rule 37 (expression -> expression GREATER expression .)
    NULL            reduce using rule 37 (expression -> expression GREATER expression .)
    $end            reduce using rule 37 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 37 (expression -> expression GREATER expression .)
    LBRACE          reduce using rule 37 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 37 (expression -> expression GREATER expression .)
    RBRACKET        reduce using rule 37 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77

  ! PLUS            [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! MULT            [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! DIV             [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! EXP             [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! EQUALS          [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! GEQUAL          [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! LEQUAL          [ reduce using rule 37 (expression -> expression GREATER expression .) ]
  ! NEQUAL          [ reduce using rule 37 (expression -> expression GREATER expression .) ]


state 102

    (38) expression -> expression LESS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 38 (expression -> expression LESS expression .)
    CONST           reduce using rule 38 (expression -> expression LESS expression .)
    DEF             reduce using rule 38 (expression -> expression LESS expression .)
    RETURN          reduce using rule 38 (expression -> expression LESS expression .)
    IF              reduce using rule 38 (expression -> expression LESS expression .)
    FOR             reduce using rule 38 (expression -> expression LESS expression .)
    INTattr         reduce using rule 38 (expression -> expression LESS expression .)
    FLOATattr       reduce using rule 38 (expression -> expression LESS expression .)
    STRINGattr      reduce using rule 38 (expression -> expression LESS expression .)
    BOOLattr        reduce using rule 38 (expression -> expression LESS expression .)
    NULL            reduce using rule 38 (expression -> expression LESS expression .)
    $end            reduce using rule 38 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 38 (expression -> expression LESS expression .)
    LBRACE          reduce using rule 38 (expression -> expression LESS expression .)
    COMMA           reduce using rule 38 (expression -> expression LESS expression .)
    RBRACKET        reduce using rule 38 (expression -> expression LESS expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77

  ! PLUS            [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! MULT            [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! DIV             [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! EXP             [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! EQUALS          [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! GREATER         [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! LESS            [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! GEQUAL          [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! LEQUAL          [ reduce using rule 38 (expression -> expression LESS expression .) ]
  ! NEQUAL          [ reduce using rule 38 (expression -> expression LESS expression .) ]


state 103

    (39) expression -> expression GEQUAL expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 39 (expression -> expression GEQUAL expression .)
    CONST           reduce using rule 39 (expression -> expression GEQUAL expression .)
    DEF             reduce using rule 39 (expression -> expression GEQUAL expression .)
    RETURN          reduce using rule 39 (expression -> expression GEQUAL expression .)
    IF              reduce using rule 39 (expression -> expression GEQUAL expression .)
    FOR             reduce using rule 39 (expression -> expression GEQUAL expression .)
    INTattr         reduce using rule 39 (expression -> expression GEQUAL expression .)
    FLOATattr       reduce using rule 39 (expression -> expression GEQUAL expression .)
    STRINGattr      reduce using rule 39 (expression -> expression GEQUAL expression .)
    BOOLattr        reduce using rule 39 (expression -> expression GEQUAL expression .)
    NULL            reduce using rule 39 (expression -> expression GEQUAL expression .)
    $end            reduce using rule 39 (expression -> expression GEQUAL expression .)
    RBRACE          reduce using rule 39 (expression -> expression GEQUAL expression .)
    LBRACE          reduce using rule 39 (expression -> expression GEQUAL expression .)
    COMMA           reduce using rule 39 (expression -> expression GEQUAL expression .)
    RBRACKET        reduce using rule 39 (expression -> expression GEQUAL expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77

  ! PLUS            [ reduce using rule 39 (expression -> expression GEQUAL expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression GEQUAL expression .) ]
  ! MULT            [ reduce using rule 39 (expression -> expression GEQUAL expression .) ]
  ! DIV             [ reduce using rule 39 (expression -> expression GEQUAL expression .) ]
  ! EXP             [ reduce using rule 39 (expression -> expression GEQUAL expression .) ]
  ! EQUALS          [ reduce using rule 39 (expression -> expression GEQUAL expression .) ]
  ! GREATER         [ reduce using rule 39 (expression -> expression GEQUAL expression .) ]
  ! LESS            [ reduce using rule 39 (expression -> expression GEQUAL expression .) ]
  ! GEQUAL          [ reduce using rule 39 (expression -> expression GEQUAL expression .) ]
  ! LEQUAL          [ reduce using rule 39 (expression -> expression GEQUAL expression .) ]
  ! NEQUAL          [ reduce using rule 39 (expression -> expression GEQUAL expression .) ]


state 104

    (40) expression -> expression LEQUAL expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 40 (expression -> expression LEQUAL expression .)
    CONST           reduce using rule 40 (expression -> expression LEQUAL expression .)
    DEF             reduce using rule 40 (expression -> expression LEQUAL expression .)
    RETURN          reduce using rule 40 (expression -> expression LEQUAL expression .)
    IF              reduce using rule 40 (expression -> expression LEQUAL expression .)
    FOR             reduce using rule 40 (expression -> expression LEQUAL expression .)
    INTattr         reduce using rule 40 (expression -> expression LEQUAL expression .)
    FLOATattr       reduce using rule 40 (expression -> expression LEQUAL expression .)
    STRINGattr      reduce using rule 40 (expression -> expression LEQUAL expression .)
    BOOLattr        reduce using rule 40 (expression -> expression LEQUAL expression .)
    NULL            reduce using rule 40 (expression -> expression LEQUAL expression .)
    $end            reduce using rule 40 (expression -> expression LEQUAL expression .)
    RBRACE          reduce using rule 40 (expression -> expression LEQUAL expression .)
    LBRACE          reduce using rule 40 (expression -> expression LEQUAL expression .)
    COMMA           reduce using rule 40 (expression -> expression LEQUAL expression .)
    RBRACKET        reduce using rule 40 (expression -> expression LEQUAL expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77

  ! PLUS            [ reduce using rule 40 (expression -> expression LEQUAL expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression LEQUAL expression .) ]
  ! MULT            [ reduce using rule 40 (expression -> expression LEQUAL expression .) ]
  ! DIV             [ reduce using rule 40 (expression -> expression LEQUAL expression .) ]
  ! EXP             [ reduce using rule 40 (expression -> expression LEQUAL expression .) ]
  ! EQUALS          [ reduce using rule 40 (expression -> expression LEQUAL expression .) ]
  ! GREATER         [ reduce using rule 40 (expression -> expression LEQUAL expression .) ]
  ! LESS            [ reduce using rule 40 (expression -> expression LEQUAL expression .) ]
  ! GEQUAL          [ reduce using rule 40 (expression -> expression LEQUAL expression .) ]
  ! LEQUAL          [ reduce using rule 40 (expression -> expression LEQUAL expression .) ]
  ! NEQUAL          [ reduce using rule 40 (expression -> expression LEQUAL expression .) ]


state 105

    (41) expression -> expression NEQUAL expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 41 (expression -> expression NEQUAL expression .)
    CONST           reduce using rule 41 (expression -> expression NEQUAL expression .)
    DEF             reduce using rule 41 (expression -> expression NEQUAL expression .)
    RETURN          reduce using rule 41 (expression -> expression NEQUAL expression .)
    IF              reduce using rule 41 (expression -> expression NEQUAL expression .)
    FOR             reduce using rule 41 (expression -> expression NEQUAL expression .)
    INTattr         reduce using rule 41 (expression -> expression NEQUAL expression .)
    FLOATattr       reduce using rule 41 (expression -> expression NEQUAL expression .)
    STRINGattr      reduce using rule 41 (expression -> expression NEQUAL expression .)
    BOOLattr        reduce using rule 41 (expression -> expression NEQUAL expression .)
    NULL            reduce using rule 41 (expression -> expression NEQUAL expression .)
    $end            reduce using rule 41 (expression -> expression NEQUAL expression .)
    RBRACE          reduce using rule 41 (expression -> expression NEQUAL expression .)
    LBRACE          reduce using rule 41 (expression -> expression NEQUAL expression .)
    COMMA           reduce using rule 41 (expression -> expression NEQUAL expression .)
    RBRACKET        reduce using rule 41 (expression -> expression NEQUAL expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77

  ! PLUS            [ reduce using rule 41 (expression -> expression NEQUAL expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression NEQUAL expression .) ]
  ! MULT            [ reduce using rule 41 (expression -> expression NEQUAL expression .) ]
  ! DIV             [ reduce using rule 41 (expression -> expression NEQUAL expression .) ]
  ! EXP             [ reduce using rule 41 (expression -> expression NEQUAL expression .) ]
  ! EQUALS          [ reduce using rule 41 (expression -> expression NEQUAL expression .) ]
  ! GREATER         [ reduce using rule 41 (expression -> expression NEQUAL expression .) ]
  ! LESS            [ reduce using rule 41 (expression -> expression NEQUAL expression .) ]
  ! GEQUAL          [ reduce using rule 41 (expression -> expression NEQUAL expression .) ]
  ! LEQUAL          [ reduce using rule 41 (expression -> expression NEQUAL expression .) ]
  ! NEQUAL          [ reduce using rule 41 (expression -> expression NEQUAL expression .) ]


state 106

    (13) array_declaration -> LBRACKET array_elements RBRACKET .

    PLUS            reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    MINUS           reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    MULT            reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    DIV             reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    EXP             reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    EQUALS          reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    GREATER         reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    LESS            reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    GEQUAL          reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    LEQUAL          reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    NEQUAL          reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    ID              reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    CONST           reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    DEF             reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    RETURN          reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    IF              reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    FOR             reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    INTattr         reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    FLOATattr       reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    STRINGattr      reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    BOOLattr        reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    NULL            reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    $end            reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    RBRACE          reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    LBRACE          reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    COMMA           reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)
    RBRACKET        reduce using rule 13 (array_declaration -> LBRACKET array_elements RBRACKET .)


state 107

    (15) array_elements -> expression COMMA . array_elements
    (14) array_elements -> . expression
    (15) array_elements -> . expression COMMA array_elements
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIV expression
    (35) expression -> . expression EXP expression
    (36) expression -> . expression EQUALS expression
    (37) expression -> . expression GREATER expression
    (38) expression -> . expression LESS expression
    (39) expression -> . expression GEQUAL expression
    (40) expression -> . expression LEQUAL expression
    (41) expression -> . expression NEQUAL expression
    (42) expression -> . NUMBER
    (43) expression -> . STRING
    (44) expression -> . FLOAT
    (45) expression -> . BOOL
    (46) expression -> . NULL
    (47) expression -> . ID
    (48) expression -> . function_call
    (49) expression -> . array_declaration
    (50) expression -> . MINUS expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (13) array_declaration -> . LBRACKET array_elements RBRACKET

    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 37
    LBRACKET        shift and go to state 46

    expression                     shift and go to state 80
    array_elements                 shift and go to state 122
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 108

    (16) if_statement -> IF expression LBRACE statement_body . RBRACE
    (17) if_statement -> IF expression LBRACE statement_body . RBRACE ELSE LBRACE statement_body RBRACE

    RBRACE          shift and go to state 123


state 109

    (61) statement_body -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . assignment_update
    (6) statement -> . function_declaration
    (7) statement -> . return_statement
    (8) statement -> . function_call
    (9) statement -> . if_statement
    (10) statement -> . for_in_statement
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . type_attr ID ASSIGN expression
    (23) assignment -> . CONST ID ASSIGN expression
    (24) assignment -> . CONST type_attr ID ASSIGN expression
    (28) assignment_update -> . ID assignment_type expression
    (29) assignment_update -> . ID ADD
    (30) assignment_update -> . ID SUB
    (57) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (59) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (51) return_statement -> . RETURN expression
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (16) if_statement -> . IF expression LBRACE statement_body RBRACE
    (17) if_statement -> . IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (18) for_in_statement -> . FOR id_list IN ID LBRACE statement_body RBRACE
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    RBRACE          reduce using rule 61 (statement_body -> statement_list .)
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 17
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    statement                      shift and go to state 23
    assignment                     shift and go to state 4
    assignment_update              shift and go to state 5
    function_declaration           shift and go to state 6
    return_statement               shift and go to state 7
    function_call                  shift and go to state 8
    if_statement                   shift and go to state 9
    for_in_statement               shift and go to state 10
    type_attr                      shift and go to state 12

state 110

    (62) statement_body -> return_statement .
    (7) statement -> return_statement .

  ! reduce/reduce conflict for RBRACE resolved using rule 7 (statement -> return_statement .)
    ID              reduce using rule 7 (statement -> return_statement .)
    CONST           reduce using rule 7 (statement -> return_statement .)
    DEF             reduce using rule 7 (statement -> return_statement .)
    RETURN          reduce using rule 7 (statement -> return_statement .)
    IF              reduce using rule 7 (statement -> return_statement .)
    FOR             reduce using rule 7 (statement -> return_statement .)
    INTattr         reduce using rule 7 (statement -> return_statement .)
    FLOATattr       reduce using rule 7 (statement -> return_statement .)
    STRINGattr      reduce using rule 7 (statement -> return_statement .)
    BOOLattr        reduce using rule 7 (statement -> return_statement .)
    NULL            reduce using rule 7 (statement -> return_statement .)
    RBRACE          reduce using rule 7 (statement -> return_statement .)

  ! RBRACE          [ reduce using rule 62 (statement_body -> return_statement .) ]


state 111

    (18) for_in_statement -> FOR id_list IN ID . LBRACE statement_body RBRACE

    LBRACE          shift and go to state 124


state 112

    (20) id_list -> ID COMMA id_list .

    IN              reduce using rule 20 (id_list -> ID COMMA id_list .)


state 113

    (71) parameters -> ID COMMA parameters .

    RPAREN          reduce using rule 71 (parameters -> ID COMMA parameters .)


state 114

    (73) parameters -> value COMMA parameters .

    RPAREN          reduce using rule 73 (parameters -> value COMMA parameters .)


state 115

    (24) assignment -> CONST type_attr ID ASSIGN expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIV expression
    (35) expression -> expression . EXP expression
    (36) expression -> expression . EQUALS expression
    (37) expression -> expression . GREATER expression
    (38) expression -> expression . LESS expression
    (39) expression -> expression . GEQUAL expression
    (40) expression -> expression . LEQUAL expression
    (41) expression -> expression . NEQUAL expression

    ID              reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    CONST           reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    DEF             reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    RETURN          reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    IF              reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    FOR             reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    INTattr         reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    FLOATattr       reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    STRINGattr      reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    BOOLattr        reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    NULL            reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    $end            reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    RBRACE          reduce using rule 24 (assignment -> CONST type_attr ID ASSIGN expression .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    MULT            shift and go to state 69
    DIV             shift and go to state 70
    EXP             shift and go to state 71
    EQUALS          shift and go to state 72
    GREATER         shift and go to state 73
    LESS            shift and go to state 74
    GEQUAL          shift and go to state 75
    LEQUAL          shift and go to state 76
    NEQUAL          shift and go to state 77


state 116

    (75) func_parameters -> ID COMMA . func_parameters
    (74) func_parameters -> . ID
    (75) func_parameters -> . ID COMMA func_parameters
    (76) func_parameters -> . type_attr ID
    (77) func_parameters -> . type_attr ID COMMA func_parameters
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    ID              shift and go to state 90
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    func_parameters                shift and go to state 125
    type_attr                      shift and go to state 93

state 117

    (57) function_declaration -> DEF ID LPAREN RPAREN LBRACE . statement_body RBRACE
    (61) statement_body -> . statement_list
    (62) statement_body -> . return_statement
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (51) return_statement -> . RETURN expression
    (4) statement -> . assignment
    (5) statement -> . assignment_update
    (6) statement -> . function_declaration
    (7) statement -> . return_statement
    (8) statement -> . function_call
    (9) statement -> . if_statement
    (10) statement -> . for_in_statement
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . type_attr ID ASSIGN expression
    (23) assignment -> . CONST ID ASSIGN expression
    (24) assignment -> . CONST type_attr ID ASSIGN expression
    (28) assignment_update -> . ID assignment_type expression
    (29) assignment_update -> . ID ADD
    (30) assignment_update -> . ID SUB
    (57) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (59) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (16) if_statement -> . IF expression LBRACE statement_body RBRACE
    (17) if_statement -> . IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (18) for_in_statement -> . FOR id_list IN ID LBRACE statement_body RBRACE
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    RETURN          shift and go to state 15
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    IF              shift and go to state 16
    FOR             shift and go to state 17
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    statement_body                 shift and go to state 126
    statement_list                 shift and go to state 109
    return_statement               shift and go to state 110
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    assignment_update              shift and go to state 5
    function_declaration           shift and go to state 6
    function_call                  shift and go to state 8
    if_statement                   shift and go to state 9
    for_in_statement               shift and go to state 10
    type_attr                      shift and go to state 12

state 118

    (58) function_declaration -> DEF ID LPAREN func_parameters RPAREN . LBRACE statement_body RBRACE

    LBRACE          shift and go to state 127


state 119

    (76) func_parameters -> type_attr ID .
    (77) func_parameters -> type_attr ID . COMMA func_parameters

    RPAREN          reduce using rule 76 (func_parameters -> type_attr ID .)
    COMMA           shift and go to state 128


state 120

    (59) function_declaration -> DEF type_attr ID LPAREN RPAREN . LBRACE statement_body RBRACE

    LBRACE          shift and go to state 129


state 121

    (60) function_declaration -> DEF type_attr ID LPAREN func_parameters . RPAREN LBRACE statement_body RBRACE

    RPAREN          shift and go to state 130


state 122

    (15) array_elements -> expression COMMA array_elements .

    RBRACKET        reduce using rule 15 (array_elements -> expression COMMA array_elements .)


state 123

    (16) if_statement -> IF expression LBRACE statement_body RBRACE .
    (17) if_statement -> IF expression LBRACE statement_body RBRACE . ELSE LBRACE statement_body RBRACE

    ID              reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    CONST           reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    DEF             reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    RETURN          reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    IF              reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    FOR             reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    INTattr         reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    FLOATattr       reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    STRINGattr      reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    BOOLattr        reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    NULL            reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    $end            reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    RBRACE          reduce using rule 16 (if_statement -> IF expression LBRACE statement_body RBRACE .)
    ELSE            shift and go to state 131


state 124

    (18) for_in_statement -> FOR id_list IN ID LBRACE . statement_body RBRACE
    (61) statement_body -> . statement_list
    (62) statement_body -> . return_statement
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (51) return_statement -> . RETURN expression
    (4) statement -> . assignment
    (5) statement -> . assignment_update
    (6) statement -> . function_declaration
    (7) statement -> . return_statement
    (8) statement -> . function_call
    (9) statement -> . if_statement
    (10) statement -> . for_in_statement
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . type_attr ID ASSIGN expression
    (23) assignment -> . CONST ID ASSIGN expression
    (24) assignment -> . CONST type_attr ID ASSIGN expression
    (28) assignment_update -> . ID assignment_type expression
    (29) assignment_update -> . ID ADD
    (30) assignment_update -> . ID SUB
    (57) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (59) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (16) if_statement -> . IF expression LBRACE statement_body RBRACE
    (17) if_statement -> . IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (18) for_in_statement -> . FOR id_list IN ID LBRACE statement_body RBRACE
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    RETURN          shift and go to state 15
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    IF              shift and go to state 16
    FOR             shift and go to state 17
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    statement_body                 shift and go to state 132
    statement_list                 shift and go to state 109
    return_statement               shift and go to state 110
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    assignment_update              shift and go to state 5
    function_declaration           shift and go to state 6
    function_call                  shift and go to state 8
    if_statement                   shift and go to state 9
    for_in_statement               shift and go to state 10
    type_attr                      shift and go to state 12

state 125

    (75) func_parameters -> ID COMMA func_parameters .

    RPAREN          reduce using rule 75 (func_parameters -> ID COMMA func_parameters .)


state 126

    (57) function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body . RBRACE

    RBRACE          shift and go to state 133


state 127

    (58) function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE . statement_body RBRACE
    (61) statement_body -> . statement_list
    (62) statement_body -> . return_statement
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (51) return_statement -> . RETURN expression
    (4) statement -> . assignment
    (5) statement -> . assignment_update
    (6) statement -> . function_declaration
    (7) statement -> . return_statement
    (8) statement -> . function_call
    (9) statement -> . if_statement
    (10) statement -> . for_in_statement
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . type_attr ID ASSIGN expression
    (23) assignment -> . CONST ID ASSIGN expression
    (24) assignment -> . CONST type_attr ID ASSIGN expression
    (28) assignment_update -> . ID assignment_type expression
    (29) assignment_update -> . ID ADD
    (30) assignment_update -> . ID SUB
    (57) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (59) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (16) if_statement -> . IF expression LBRACE statement_body RBRACE
    (17) if_statement -> . IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (18) for_in_statement -> . FOR id_list IN ID LBRACE statement_body RBRACE
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    RETURN          shift and go to state 15
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    IF              shift and go to state 16
    FOR             shift and go to state 17
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    statement_body                 shift and go to state 134
    statement_list                 shift and go to state 109
    return_statement               shift and go to state 110
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    assignment_update              shift and go to state 5
    function_declaration           shift and go to state 6
    function_call                  shift and go to state 8
    if_statement                   shift and go to state 9
    for_in_statement               shift and go to state 10
    type_attr                      shift and go to state 12

state 128

    (77) func_parameters -> type_attr ID COMMA . func_parameters
    (74) func_parameters -> . ID
    (75) func_parameters -> . ID COMMA func_parameters
    (76) func_parameters -> . type_attr ID
    (77) func_parameters -> . type_attr ID COMMA func_parameters
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    ID              shift and go to state 90
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    type_attr                      shift and go to state 93
    func_parameters                shift and go to state 135

state 129

    (59) function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE . statement_body RBRACE
    (61) statement_body -> . statement_list
    (62) statement_body -> . return_statement
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (51) return_statement -> . RETURN expression
    (4) statement -> . assignment
    (5) statement -> . assignment_update
    (6) statement -> . function_declaration
    (7) statement -> . return_statement
    (8) statement -> . function_call
    (9) statement -> . if_statement
    (10) statement -> . for_in_statement
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . type_attr ID ASSIGN expression
    (23) assignment -> . CONST ID ASSIGN expression
    (24) assignment -> . CONST type_attr ID ASSIGN expression
    (28) assignment_update -> . ID assignment_type expression
    (29) assignment_update -> . ID ADD
    (30) assignment_update -> . ID SUB
    (57) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (59) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (16) if_statement -> . IF expression LBRACE statement_body RBRACE
    (17) if_statement -> . IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (18) for_in_statement -> . FOR id_list IN ID LBRACE statement_body RBRACE
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    RETURN          shift and go to state 15
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    IF              shift and go to state 16
    FOR             shift and go to state 17
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    type_attr                      shift and go to state 12
    statement_body                 shift and go to state 136
    statement_list                 shift and go to state 109
    return_statement               shift and go to state 110
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    assignment_update              shift and go to state 5
    function_declaration           shift and go to state 6
    function_call                  shift and go to state 8
    if_statement                   shift and go to state 9
    for_in_statement               shift and go to state 10

state 130

    (60) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN . LBRACE statement_body RBRACE

    LBRACE          shift and go to state 137


state 131

    (17) if_statement -> IF expression LBRACE statement_body RBRACE ELSE . LBRACE statement_body RBRACE

    LBRACE          shift and go to state 138


state 132

    (18) for_in_statement -> FOR id_list IN ID LBRACE statement_body . RBRACE

    RBRACE          shift and go to state 139


state 133

    (57) function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .

    ID              reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    CONST           reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    DEF             reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    RETURN          reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    IF              reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    FOR             reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    INTattr         reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    FLOATattr       reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    STRINGattr      reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    BOOLattr        reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    NULL            reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    $end            reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    RBRACE          reduce using rule 57 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_body RBRACE .)


state 134

    (58) function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body . RBRACE

    RBRACE          shift and go to state 140


state 135

    (77) func_parameters -> type_attr ID COMMA func_parameters .

    RPAREN          reduce using rule 77 (func_parameters -> type_attr ID COMMA func_parameters .)


state 136

    (59) function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body . RBRACE

    RBRACE          shift and go to state 141


state 137

    (60) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE . statement_body RBRACE
    (61) statement_body -> . statement_list
    (62) statement_body -> . return_statement
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (51) return_statement -> . RETURN expression
    (4) statement -> . assignment
    (5) statement -> . assignment_update
    (6) statement -> . function_declaration
    (7) statement -> . return_statement
    (8) statement -> . function_call
    (9) statement -> . if_statement
    (10) statement -> . for_in_statement
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . type_attr ID ASSIGN expression
    (23) assignment -> . CONST ID ASSIGN expression
    (24) assignment -> . CONST type_attr ID ASSIGN expression
    (28) assignment_update -> . ID assignment_type expression
    (29) assignment_update -> . ID ADD
    (30) assignment_update -> . ID SUB
    (57) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (59) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (16) if_statement -> . IF expression LBRACE statement_body RBRACE
    (17) if_statement -> . IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (18) for_in_statement -> . FOR id_list IN ID LBRACE statement_body RBRACE
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    RETURN          shift and go to state 15
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    IF              shift and go to state 16
    FOR             shift and go to state 17
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    type_attr                      shift and go to state 12
    statement_body                 shift and go to state 142
    statement_list                 shift and go to state 109
    return_statement               shift and go to state 110
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    assignment_update              shift and go to state 5
    function_declaration           shift and go to state 6
    function_call                  shift and go to state 8
    if_statement                   shift and go to state 9
    for_in_statement               shift and go to state 10

state 138

    (17) if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE . statement_body RBRACE
    (61) statement_body -> . statement_list
    (62) statement_body -> . return_statement
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (51) return_statement -> . RETURN expression
    (4) statement -> . assignment
    (5) statement -> . assignment_update
    (6) statement -> . function_declaration
    (7) statement -> . return_statement
    (8) statement -> . function_call
    (9) statement -> . if_statement
    (10) statement -> . for_in_statement
    (21) assignment -> . ID ASSIGN expression
    (22) assignment -> . type_attr ID ASSIGN expression
    (23) assignment -> . CONST ID ASSIGN expression
    (24) assignment -> . CONST type_attr ID ASSIGN expression
    (28) assignment_update -> . ID assignment_type expression
    (29) assignment_update -> . ID ADD
    (30) assignment_update -> . ID SUB
    (57) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_body RBRACE
    (58) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (59) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE
    (60) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE
    (11) function_call -> . ID LPAREN RPAREN
    (12) function_call -> . ID LPAREN parameters RPAREN
    (16) if_statement -> . IF expression LBRACE statement_body RBRACE
    (17) if_statement -> . IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE
    (18) for_in_statement -> . FOR id_list IN ID LBRACE statement_body RBRACE
    (52) type_attr -> . INTattr
    (53) type_attr -> . FLOATattr
    (54) type_attr -> . STRINGattr
    (55) type_attr -> . BOOLattr
    (56) type_attr -> . NULL

    RETURN          shift and go to state 15
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    IF              shift and go to state 16
    FOR             shift and go to state 17
    INTattr         shift and go to state 18
    FLOATattr       shift and go to state 19
    STRINGattr      shift and go to state 20
    BOOLattr        shift and go to state 21
    NULL            shift and go to state 22

    statement_body                 shift and go to state 143
    statement_list                 shift and go to state 109
    return_statement               shift and go to state 110
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    assignment_update              shift and go to state 5
    function_declaration           shift and go to state 6
    function_call                  shift and go to state 8
    if_statement                   shift and go to state 9
    for_in_statement               shift and go to state 10
    type_attr                      shift and go to state 12

state 139

    (18) for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .

    ID              reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    CONST           reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    DEF             reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    RETURN          reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    IF              reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    FOR             reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    INTattr         reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    FLOATattr       reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    STRINGattr      reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    BOOLattr        reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    NULL            reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    $end            reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)
    RBRACE          reduce using rule 18 (for_in_statement -> FOR id_list IN ID LBRACE statement_body RBRACE .)


state 140

    (58) function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .

    ID              reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    CONST           reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    DEF             reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    RETURN          reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    IF              reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    FOR             reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    INTattr         reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    FLOATattr       reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    STRINGattr      reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    BOOLattr        reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    NULL            reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    $end            reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    RBRACE          reduce using rule 58 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)


state 141

    (59) function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .

    ID              reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    CONST           reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    DEF             reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    RETURN          reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    IF              reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    FOR             reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    INTattr         reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    FLOATattr       reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    STRINGattr      reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    BOOLattr        reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    NULL            reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    $end            reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)
    RBRACE          reduce using rule 59 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_body RBRACE .)


state 142

    (60) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body . RBRACE

    RBRACE          shift and go to state 144


state 143

    (17) if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body . RBRACE

    RBRACE          shift and go to state 145


state 144

    (60) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .

    ID              reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    CONST           reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    DEF             reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    RETURN          reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    IF              reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    FOR             reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    INTattr         reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    FLOATattr       reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    STRINGattr      reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    BOOLattr        reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    NULL            reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    $end            reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)
    RBRACE          reduce using rule 60 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_body RBRACE .)


state 145

    (17) if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .

    ID              reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    CONST           reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    DEF             reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    RETURN          reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    IF              reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    FOR             reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    INTattr         reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    FLOATattr       reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    STRINGattr      reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    BOOLattr        reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    NULL            reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    $end            reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)
    RBRACE          reduce using rule 17 (if_statement -> IF expression LBRACE statement_body RBRACE ELSE LBRACE statement_body RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NUMBER in state 24 resolved as shift
WARNING: shift/reduce conflict for STRING in state 24 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 24 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 24 resolved as shift
WARNING: shift/reduce conflict for NULL in state 24 resolved as shift
WARNING: shift/reduce conflict for ID in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 24 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MULT in state 99 resolved as shift
WARNING: shift/reduce conflict for DIV in state 99 resolved as shift
WARNING: shift/reduce conflict for EXP in state 99 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 99 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 99 resolved as shift
WARNING: shift/reduce conflict for LESS in state 99 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 99 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 99 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MULT in state 100 resolved as shift
WARNING: shift/reduce conflict for DIV in state 100 resolved as shift
WARNING: shift/reduce conflict for EXP in state 100 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 100 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 100 resolved as shift
WARNING: shift/reduce conflict for LESS in state 100 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MULT in state 101 resolved as shift
WARNING: shift/reduce conflict for DIV in state 101 resolved as shift
WARNING: shift/reduce conflict for EXP in state 101 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 101 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 101 resolved as shift
WARNING: shift/reduce conflict for LESS in state 101 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 101 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 101 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MULT in state 102 resolved as shift
WARNING: shift/reduce conflict for DIV in state 102 resolved as shift
WARNING: shift/reduce conflict for EXP in state 102 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 102 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 102 resolved as shift
WARNING: shift/reduce conflict for LESS in state 102 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 102 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 102 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MULT in state 103 resolved as shift
WARNING: shift/reduce conflict for DIV in state 103 resolved as shift
WARNING: shift/reduce conflict for EXP in state 103 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 103 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 103 resolved as shift
WARNING: shift/reduce conflict for LESS in state 103 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 103 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 103 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MULT in state 104 resolved as shift
WARNING: shift/reduce conflict for DIV in state 104 resolved as shift
WARNING: shift/reduce conflict for EXP in state 104 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 104 resolved as shift
WARNING: shift/reduce conflict for LESS in state 104 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MULT in state 105 resolved as shift
WARNING: shift/reduce conflict for DIV in state 105 resolved as shift
WARNING: shift/reduce conflict for EXP in state 105 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 105 resolved as shift
WARNING: shift/reduce conflict for LESS in state 105 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 105 resolved as shift
WARNING: reduce/reduce conflict in state 52 resolved using rule (value -> ID)
WARNING: rejected rule (parameters -> ID) in state 52
WARNING: reduce/reduce conflict in state 110 resolved using rule (statement -> return_statement)
WARNING: rejected rule (statement_body -> return_statement) in state 110
WARNING: Rule (parameters -> ID) is never reduced
WARNING: Rule (statement_body -> return_statement) is never reduced
