Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CLASS
    CONTINUE
    IMPORT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> assignment
Rule 5     statement -> function_declaration
Rule 6     statement -> return_statement
Rule 7     statement -> function_call
Rule 8     statement -> if_statement
Rule 9     statement -> for_in_statement
Rule 10    statement -> typing
Rule 11    array_declaration -> LBRACKET array_elements RBRACKET
Rule 12    array_elements -> expression
Rule 13    array_elements -> expression COMMA array_elements
Rule 14    if_statement -> IF expression LBRACE statement_list RBRACE
Rule 15    if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 16    if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 17    if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 18    if_statement -> WHILE expression LBRACE statement_list RBRACE
Rule 19    if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 20    if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 21    if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 22    for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE
Rule 23    id_list -> ID
Rule 24    id_list -> ID COMMA id_list
Rule 25    assignment_type -> ASSIGN
Rule 26    assignment_type -> PLUSEQUAL
Rule 27    assignment_type -> MINUSEQUAL
Rule 28    assignment -> ID assignment_type expression
Rule 29    assignment -> ID ADD
Rule 30    assignment -> ID SUB
Rule 31    assignment -> type_attr ID ASSIGN expression
Rule 32    assignment -> CONST ID ASSIGN expression
Rule 33    assignment -> CONST type_attr ID ASSIGN expression
Rule 34    expression -> expression PLUS expression
Rule 35    expression -> expression MINUS expression
Rule 36    expression -> expression MULT expression
Rule 37    expression -> expression DIV expression
Rule 38    expression -> expression EXP expression
Rule 39    expression -> expression EQUALS expression
Rule 40    expression -> expression GREATER expression
Rule 41    expression -> expression LESS expression
Rule 42    expression -> expression GEQUAL expression
Rule 43    expression -> expression LEQUAL expression
Rule 44    expression -> expression NEQUAL expression
Rule 45    expression -> LPAREN expression RPAREN
Rule 46    expression -> NUMBER
Rule 47    expression -> STRING
Rule 48    expression -> FLOAT
Rule 49    expression -> BOOL
Rule 50    expression -> NULL
Rule 51    expression -> id
Rule 52    expression -> function_call
Rule 53    expression -> array_declaration
Rule 54    expression -> MINUS expression
Rule 55    return_statement -> RETURN expression
Rule 56    type_attr -> INTattr
Rule 57    type_attr -> FLOATattr
Rule 58    type_attr -> STRINGattr
Rule 59    type_attr -> BOOLattr
Rule 60    type_attr -> NULL
Rule 61    function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
Rule 62    function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
Rule 63    function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
Rule 64    function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
Rule 65    function_call -> ID LPAREN RPAREN
Rule 66    function_call -> ID LPAREN parameters RPAREN
Rule 67    id -> ID
Rule 68    parameters -> expression
Rule 69    parameters -> expression COMMA parameters
Rule 70    func_parameters -> ID
Rule 71    func_parameters -> ID COMMA func_parameters
Rule 72    func_parameters -> type_attr ID
Rule 73    func_parameters -> type_attr ID COMMA func_parameters
Rule 74    typing -> TYPE ID
Rule 75    typing -> UNTYPE ID

Terminals, with rules where they appear

ADD                  : 29
ASSIGN               : 25 31 32 33
BOOL                 : 49
BOOLattr             : 59
BREAK                : 
CLASS                : 
COMMA                : 13 24 69 71 73
CONST                : 32 33
CONTINUE             : 
DEF                  : 61 62 63 64
DIV                  : 37
ELSE                 : 15 17 19 21
EQUALS               : 39
EXP                  : 38
FLOAT                : 48
FLOATattr            : 57
FOR                  : 22
GEQUAL               : 42
GREATER              : 40
ID                   : 22 23 24 28 29 30 31 32 33 61 62 63 64 65 66 67 70 71 72 73 74 75
IF                   : 14 15 16 17
IMPORT               : 
IN                   : 22
INTattr              : 56
LBRACE               : 14 15 15 16 17 17 18 19 19 20 21 21 22 61 62 63 64
LBRACKET             : 11
LEQUAL               : 43
LESS                 : 41
LPAREN               : 16 17 20 21 45 61 62 63 64 65 66
MINUS                : 35 54
MINUSEQUAL           : 27
MULT                 : 36
NEQUAL               : 44
NULL                 : 50 60
NUMBER               : 46
PLUS                 : 34
PLUSEQUAL            : 26
RBRACE               : 14 15 15 16 17 17 18 19 19 20 21 21 22 61 62 63 64
RBRACKET             : 11
RETURN               : 55
RPAREN               : 16 17 20 21 45 61 62 63 64 65 66
STRING               : 47
STRINGattr           : 58
SUB                  : 30
TYPE                 : 74
UNTYPE               : 75
WHILE                : 18 19 20 21
error                : 

Nonterminals, with rules where they appear

array_declaration    : 53
array_elements       : 11 13
assignment           : 4
assignment_type      : 28
expression           : 12 13 14 15 16 17 18 19 20 21 28 31 32 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 54 55 68 69
for_in_statement     : 9
func_parameters      : 62 64 71 73
function_call        : 7 52
function_declaration : 5
id                   : 51
id_list              : 22 24
if_statement         : 8
parameters           : 66 69
program              : 0
return_statement     : 6
statement            : 2 3
statement_list       : 1 3 14 15 15 16 17 17 18 19 19 20 21 21 22 61 62 63 64
type_attr            : 31 33 63 64 72 73
typing               : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    $end            reduce using rule 1 (program -> statement_list .)
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 3

    (2) statement_list -> statement .

    ID              reduce using rule 2 (statement_list -> statement .)
    CONST           reduce using rule 2 (statement_list -> statement .)
    DEF             reduce using rule 2 (statement_list -> statement .)
    RETURN          reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    WHILE           reduce using rule 2 (statement_list -> statement .)
    FOR             reduce using rule 2 (statement_list -> statement .)
    TYPE            reduce using rule 2 (statement_list -> statement .)
    UNTYPE          reduce using rule 2 (statement_list -> statement .)
    INTattr         reduce using rule 2 (statement_list -> statement .)
    FLOATattr       reduce using rule 2 (statement_list -> statement .)
    STRINGattr      reduce using rule 2 (statement_list -> statement .)
    BOOLattr        reduce using rule 2 (statement_list -> statement .)
    NULL            reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> assignment .

    ID              reduce using rule 4 (statement -> assignment .)
    CONST           reduce using rule 4 (statement -> assignment .)
    DEF             reduce using rule 4 (statement -> assignment .)
    RETURN          reduce using rule 4 (statement -> assignment .)
    IF              reduce using rule 4 (statement -> assignment .)
    WHILE           reduce using rule 4 (statement -> assignment .)
    FOR             reduce using rule 4 (statement -> assignment .)
    TYPE            reduce using rule 4 (statement -> assignment .)
    UNTYPE          reduce using rule 4 (statement -> assignment .)
    INTattr         reduce using rule 4 (statement -> assignment .)
    FLOATattr       reduce using rule 4 (statement -> assignment .)
    STRINGattr      reduce using rule 4 (statement -> assignment .)
    BOOLattr        reduce using rule 4 (statement -> assignment .)
    NULL            reduce using rule 4 (statement -> assignment .)
    $end            reduce using rule 4 (statement -> assignment .)
    RBRACE          reduce using rule 4 (statement -> assignment .)


state 5

    (5) statement -> function_declaration .

    ID              reduce using rule 5 (statement -> function_declaration .)
    CONST           reduce using rule 5 (statement -> function_declaration .)
    DEF             reduce using rule 5 (statement -> function_declaration .)
    RETURN          reduce using rule 5 (statement -> function_declaration .)
    IF              reduce using rule 5 (statement -> function_declaration .)
    WHILE           reduce using rule 5 (statement -> function_declaration .)
    FOR             reduce using rule 5 (statement -> function_declaration .)
    TYPE            reduce using rule 5 (statement -> function_declaration .)
    UNTYPE          reduce using rule 5 (statement -> function_declaration .)
    INTattr         reduce using rule 5 (statement -> function_declaration .)
    FLOATattr       reduce using rule 5 (statement -> function_declaration .)
    STRINGattr      reduce using rule 5 (statement -> function_declaration .)
    BOOLattr        reduce using rule 5 (statement -> function_declaration .)
    NULL            reduce using rule 5 (statement -> function_declaration .)
    $end            reduce using rule 5 (statement -> function_declaration .)
    RBRACE          reduce using rule 5 (statement -> function_declaration .)


state 6

    (6) statement -> return_statement .

    ID              reduce using rule 6 (statement -> return_statement .)
    CONST           reduce using rule 6 (statement -> return_statement .)
    DEF             reduce using rule 6 (statement -> return_statement .)
    RETURN          reduce using rule 6 (statement -> return_statement .)
    IF              reduce using rule 6 (statement -> return_statement .)
    WHILE           reduce using rule 6 (statement -> return_statement .)
    FOR             reduce using rule 6 (statement -> return_statement .)
    TYPE            reduce using rule 6 (statement -> return_statement .)
    UNTYPE          reduce using rule 6 (statement -> return_statement .)
    INTattr         reduce using rule 6 (statement -> return_statement .)
    FLOATattr       reduce using rule 6 (statement -> return_statement .)
    STRINGattr      reduce using rule 6 (statement -> return_statement .)
    BOOLattr        reduce using rule 6 (statement -> return_statement .)
    NULL            reduce using rule 6 (statement -> return_statement .)
    $end            reduce using rule 6 (statement -> return_statement .)
    RBRACE          reduce using rule 6 (statement -> return_statement .)


state 7

    (7) statement -> function_call .

    ID              reduce using rule 7 (statement -> function_call .)
    CONST           reduce using rule 7 (statement -> function_call .)
    DEF             reduce using rule 7 (statement -> function_call .)
    RETURN          reduce using rule 7 (statement -> function_call .)
    IF              reduce using rule 7 (statement -> function_call .)
    WHILE           reduce using rule 7 (statement -> function_call .)
    FOR             reduce using rule 7 (statement -> function_call .)
    TYPE            reduce using rule 7 (statement -> function_call .)
    UNTYPE          reduce using rule 7 (statement -> function_call .)
    INTattr         reduce using rule 7 (statement -> function_call .)
    FLOATattr       reduce using rule 7 (statement -> function_call .)
    STRINGattr      reduce using rule 7 (statement -> function_call .)
    BOOLattr        reduce using rule 7 (statement -> function_call .)
    NULL            reduce using rule 7 (statement -> function_call .)
    $end            reduce using rule 7 (statement -> function_call .)
    RBRACE          reduce using rule 7 (statement -> function_call .)


state 8

    (8) statement -> if_statement .

    ID              reduce using rule 8 (statement -> if_statement .)
    CONST           reduce using rule 8 (statement -> if_statement .)
    DEF             reduce using rule 8 (statement -> if_statement .)
    RETURN          reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    WHILE           reduce using rule 8 (statement -> if_statement .)
    FOR             reduce using rule 8 (statement -> if_statement .)
    TYPE            reduce using rule 8 (statement -> if_statement .)
    UNTYPE          reduce using rule 8 (statement -> if_statement .)
    INTattr         reduce using rule 8 (statement -> if_statement .)
    FLOATattr       reduce using rule 8 (statement -> if_statement .)
    STRINGattr      reduce using rule 8 (statement -> if_statement .)
    BOOLattr        reduce using rule 8 (statement -> if_statement .)
    NULL            reduce using rule 8 (statement -> if_statement .)
    $end            reduce using rule 8 (statement -> if_statement .)
    RBRACE          reduce using rule 8 (statement -> if_statement .)


state 9

    (9) statement -> for_in_statement .

    ID              reduce using rule 9 (statement -> for_in_statement .)
    CONST           reduce using rule 9 (statement -> for_in_statement .)
    DEF             reduce using rule 9 (statement -> for_in_statement .)
    RETURN          reduce using rule 9 (statement -> for_in_statement .)
    IF              reduce using rule 9 (statement -> for_in_statement .)
    WHILE           reduce using rule 9 (statement -> for_in_statement .)
    FOR             reduce using rule 9 (statement -> for_in_statement .)
    TYPE            reduce using rule 9 (statement -> for_in_statement .)
    UNTYPE          reduce using rule 9 (statement -> for_in_statement .)
    INTattr         reduce using rule 9 (statement -> for_in_statement .)
    FLOATattr       reduce using rule 9 (statement -> for_in_statement .)
    STRINGattr      reduce using rule 9 (statement -> for_in_statement .)
    BOOLattr        reduce using rule 9 (statement -> for_in_statement .)
    NULL            reduce using rule 9 (statement -> for_in_statement .)
    $end            reduce using rule 9 (statement -> for_in_statement .)
    RBRACE          reduce using rule 9 (statement -> for_in_statement .)


state 10

    (10) statement -> typing .

    ID              reduce using rule 10 (statement -> typing .)
    CONST           reduce using rule 10 (statement -> typing .)
    DEF             reduce using rule 10 (statement -> typing .)
    RETURN          reduce using rule 10 (statement -> typing .)
    IF              reduce using rule 10 (statement -> typing .)
    WHILE           reduce using rule 10 (statement -> typing .)
    FOR             reduce using rule 10 (statement -> typing .)
    TYPE            reduce using rule 10 (statement -> typing .)
    UNTYPE          reduce using rule 10 (statement -> typing .)
    INTattr         reduce using rule 10 (statement -> typing .)
    FLOATattr       reduce using rule 10 (statement -> typing .)
    STRINGattr      reduce using rule 10 (statement -> typing .)
    BOOLattr        reduce using rule 10 (statement -> typing .)
    NULL            reduce using rule 10 (statement -> typing .)
    $end            reduce using rule 10 (statement -> typing .)
    RBRACE          reduce using rule 10 (statement -> typing .)


state 11

    (28) assignment -> ID . assignment_type expression
    (29) assignment -> ID . ADD
    (30) assignment -> ID . SUB
    (65) function_call -> ID . LPAREN RPAREN
    (66) function_call -> ID . LPAREN parameters RPAREN
    (25) assignment_type -> . ASSIGN
    (26) assignment_type -> . PLUSEQUAL
    (27) assignment_type -> . MINUSEQUAL

    ADD             shift and go to state 28
    SUB             shift and go to state 29
    LPAREN          shift and go to state 30
    ASSIGN          shift and go to state 31
    PLUSEQUAL       shift and go to state 32
    MINUSEQUAL      shift and go to state 33

    assignment_type                shift and go to state 27

state 12

    (31) assignment -> type_attr . ID ASSIGN expression

    ID              shift and go to state 34


state 13

    (32) assignment -> CONST . ID ASSIGN expression
    (33) assignment -> CONST . type_attr ID ASSIGN expression
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 35
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    type_attr                      shift and go to state 36

state 14

    (61) function_declaration -> DEF . ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> DEF . ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> DEF . type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> DEF . type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 37
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    type_attr                      shift and go to state 38

state 15

    (55) return_statement -> RETURN . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 39
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 16

    (14) if_statement -> IF . expression LBRACE statement_list RBRACE
    (15) if_statement -> IF . expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 52
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 17

    (18) if_statement -> WHILE . expression LBRACE statement_list RBRACE
    (19) if_statement -> WHILE . expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> WHILE . LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> WHILE . LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 55
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 54
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 18

    (22) for_in_statement -> FOR . id_list IN ID LBRACE statement_list RBRACE
    (23) id_list -> . ID
    (24) id_list -> . ID COMMA id_list

    ID              shift and go to state 57

    id_list                        shift and go to state 56

state 19

    (74) typing -> TYPE . ID

    ID              shift and go to state 58


state 20

    (75) typing -> UNTYPE . ID

    ID              shift and go to state 59


state 21

    (56) type_attr -> INTattr .

    ID              reduce using rule 56 (type_attr -> INTattr .)


state 22

    (57) type_attr -> FLOATattr .

    ID              reduce using rule 57 (type_attr -> FLOATattr .)


state 23

    (58) type_attr -> STRINGattr .

    ID              reduce using rule 58 (type_attr -> STRINGattr .)


state 24

    (59) type_attr -> BOOLattr .

    ID              reduce using rule 59 (type_attr -> BOOLattr .)


state 25

    (60) type_attr -> NULL .

    ID              reduce using rule 60 (type_attr -> NULL .)


state 26

    (3) statement_list -> statement_list statement .

    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    CONST           reduce using rule 3 (statement_list -> statement_list statement .)
    DEF             reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 3 (statement_list -> statement_list statement .)
    FOR             reduce using rule 3 (statement_list -> statement_list statement .)
    TYPE            reduce using rule 3 (statement_list -> statement_list statement .)
    UNTYPE          reduce using rule 3 (statement_list -> statement_list statement .)
    INTattr         reduce using rule 3 (statement_list -> statement_list statement .)
    FLOATattr       reduce using rule 3 (statement_list -> statement_list statement .)
    STRINGattr      reduce using rule 3 (statement_list -> statement_list statement .)
    BOOLattr        reduce using rule 3 (statement_list -> statement_list statement .)
    NULL            reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)


state 27

    (28) assignment -> ID assignment_type . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 60
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 28

    (29) assignment -> ID ADD .

    ID              reduce using rule 29 (assignment -> ID ADD .)
    CONST           reduce using rule 29 (assignment -> ID ADD .)
    DEF             reduce using rule 29 (assignment -> ID ADD .)
    RETURN          reduce using rule 29 (assignment -> ID ADD .)
    IF              reduce using rule 29 (assignment -> ID ADD .)
    WHILE           reduce using rule 29 (assignment -> ID ADD .)
    FOR             reduce using rule 29 (assignment -> ID ADD .)
    TYPE            reduce using rule 29 (assignment -> ID ADD .)
    UNTYPE          reduce using rule 29 (assignment -> ID ADD .)
    INTattr         reduce using rule 29 (assignment -> ID ADD .)
    FLOATattr       reduce using rule 29 (assignment -> ID ADD .)
    STRINGattr      reduce using rule 29 (assignment -> ID ADD .)
    BOOLattr        reduce using rule 29 (assignment -> ID ADD .)
    NULL            reduce using rule 29 (assignment -> ID ADD .)
    $end            reduce using rule 29 (assignment -> ID ADD .)
    RBRACE          reduce using rule 29 (assignment -> ID ADD .)


state 29

    (30) assignment -> ID SUB .

    ID              reduce using rule 30 (assignment -> ID SUB .)
    CONST           reduce using rule 30 (assignment -> ID SUB .)
    DEF             reduce using rule 30 (assignment -> ID SUB .)
    RETURN          reduce using rule 30 (assignment -> ID SUB .)
    IF              reduce using rule 30 (assignment -> ID SUB .)
    WHILE           reduce using rule 30 (assignment -> ID SUB .)
    FOR             reduce using rule 30 (assignment -> ID SUB .)
    TYPE            reduce using rule 30 (assignment -> ID SUB .)
    UNTYPE          reduce using rule 30 (assignment -> ID SUB .)
    INTattr         reduce using rule 30 (assignment -> ID SUB .)
    FLOATattr       reduce using rule 30 (assignment -> ID SUB .)
    STRINGattr      reduce using rule 30 (assignment -> ID SUB .)
    BOOLattr        reduce using rule 30 (assignment -> ID SUB .)
    NULL            reduce using rule 30 (assignment -> ID SUB .)
    $end            reduce using rule 30 (assignment -> ID SUB .)
    RBRACE          reduce using rule 30 (assignment -> ID SUB .)


state 30

    (65) function_call -> ID LPAREN . RPAREN
    (66) function_call -> ID LPAREN . parameters RPAREN
    (68) parameters -> . expression
    (69) parameters -> . expression COMMA parameters
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    RPAREN          shift and go to state 61
    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    parameters                     shift and go to state 62
    expression                     shift and go to state 63
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 31

    (25) assignment_type -> ASSIGN .

    LPAREN          reduce using rule 25 (assignment_type -> ASSIGN .)
    NUMBER          reduce using rule 25 (assignment_type -> ASSIGN .)
    STRING          reduce using rule 25 (assignment_type -> ASSIGN .)
    FLOAT           reduce using rule 25 (assignment_type -> ASSIGN .)
    BOOL            reduce using rule 25 (assignment_type -> ASSIGN .)
    NULL            reduce using rule 25 (assignment_type -> ASSIGN .)
    MINUS           reduce using rule 25 (assignment_type -> ASSIGN .)
    ID              reduce using rule 25 (assignment_type -> ASSIGN .)
    LBRACKET        reduce using rule 25 (assignment_type -> ASSIGN .)


state 32

    (26) assignment_type -> PLUSEQUAL .

    LPAREN          reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    NUMBER          reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    STRING          reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    FLOAT           reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    BOOL            reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    NULL            reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    MINUS           reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    ID              reduce using rule 26 (assignment_type -> PLUSEQUAL .)
    LBRACKET        reduce using rule 26 (assignment_type -> PLUSEQUAL .)


state 33

    (27) assignment_type -> MINUSEQUAL .

    LPAREN          reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    NUMBER          reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    STRING          reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    FLOAT           reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    BOOL            reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    NULL            reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    MINUS           reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    ID              reduce using rule 27 (assignment_type -> MINUSEQUAL .)
    LBRACKET        reduce using rule 27 (assignment_type -> MINUSEQUAL .)


state 34

    (31) assignment -> type_attr ID . ASSIGN expression

    ASSIGN          shift and go to state 64


state 35

    (32) assignment -> CONST ID . ASSIGN expression

    ASSIGN          shift and go to state 65


state 36

    (33) assignment -> CONST type_attr . ID ASSIGN expression

    ID              shift and go to state 66


state 37

    (61) function_declaration -> DEF ID . LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> DEF ID . LPAREN func_parameters RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 67


state 38

    (63) function_declaration -> DEF type_attr . ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> DEF type_attr . ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 68


state 39

    (55) return_statement -> RETURN expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    ID              reduce using rule 55 (return_statement -> RETURN expression .)
    CONST           reduce using rule 55 (return_statement -> RETURN expression .)
    DEF             reduce using rule 55 (return_statement -> RETURN expression .)
    RETURN          reduce using rule 55 (return_statement -> RETURN expression .)
    IF              reduce using rule 55 (return_statement -> RETURN expression .)
    WHILE           reduce using rule 55 (return_statement -> RETURN expression .)
    FOR             reduce using rule 55 (return_statement -> RETURN expression .)
    TYPE            reduce using rule 55 (return_statement -> RETURN expression .)
    UNTYPE          reduce using rule 55 (return_statement -> RETURN expression .)
    INTattr         reduce using rule 55 (return_statement -> RETURN expression .)
    FLOATattr       reduce using rule 55 (return_statement -> RETURN expression .)
    STRINGattr      reduce using rule 55 (return_statement -> RETURN expression .)
    BOOLattr        reduce using rule 55 (return_statement -> RETURN expression .)
    NULL            reduce using rule 55 (return_statement -> RETURN expression .)
    $end            reduce using rule 55 (return_statement -> RETURN expression .)
    RBRACE          reduce using rule 55 (return_statement -> RETURN expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 40

    (54) expression -> MINUS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 80
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 41

    (45) expression -> LPAREN . expression RPAREN
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 81
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 42

    (46) expression -> NUMBER .

    PLUS            reduce using rule 46 (expression -> NUMBER .)
    MINUS           reduce using rule 46 (expression -> NUMBER .)
    MULT            reduce using rule 46 (expression -> NUMBER .)
    DIV             reduce using rule 46 (expression -> NUMBER .)
    EXP             reduce using rule 46 (expression -> NUMBER .)
    EQUALS          reduce using rule 46 (expression -> NUMBER .)
    GREATER         reduce using rule 46 (expression -> NUMBER .)
    LESS            reduce using rule 46 (expression -> NUMBER .)
    GEQUAL          reduce using rule 46 (expression -> NUMBER .)
    LEQUAL          reduce using rule 46 (expression -> NUMBER .)
    NEQUAL          reduce using rule 46 (expression -> NUMBER .)
    ID              reduce using rule 46 (expression -> NUMBER .)
    CONST           reduce using rule 46 (expression -> NUMBER .)
    DEF             reduce using rule 46 (expression -> NUMBER .)
    RETURN          reduce using rule 46 (expression -> NUMBER .)
    IF              reduce using rule 46 (expression -> NUMBER .)
    WHILE           reduce using rule 46 (expression -> NUMBER .)
    FOR             reduce using rule 46 (expression -> NUMBER .)
    TYPE            reduce using rule 46 (expression -> NUMBER .)
    UNTYPE          reduce using rule 46 (expression -> NUMBER .)
    INTattr         reduce using rule 46 (expression -> NUMBER .)
    FLOATattr       reduce using rule 46 (expression -> NUMBER .)
    STRINGattr      reduce using rule 46 (expression -> NUMBER .)
    BOOLattr        reduce using rule 46 (expression -> NUMBER .)
    NULL            reduce using rule 46 (expression -> NUMBER .)
    $end            reduce using rule 46 (expression -> NUMBER .)
    RBRACE          reduce using rule 46 (expression -> NUMBER .)
    LBRACE          reduce using rule 46 (expression -> NUMBER .)
    COMMA           reduce using rule 46 (expression -> NUMBER .)
    RPAREN          reduce using rule 46 (expression -> NUMBER .)
    RBRACKET        reduce using rule 46 (expression -> NUMBER .)


state 43

    (47) expression -> STRING .

    PLUS            reduce using rule 47 (expression -> STRING .)
    MINUS           reduce using rule 47 (expression -> STRING .)
    MULT            reduce using rule 47 (expression -> STRING .)
    DIV             reduce using rule 47 (expression -> STRING .)
    EXP             reduce using rule 47 (expression -> STRING .)
    EQUALS          reduce using rule 47 (expression -> STRING .)
    GREATER         reduce using rule 47 (expression -> STRING .)
    LESS            reduce using rule 47 (expression -> STRING .)
    GEQUAL          reduce using rule 47 (expression -> STRING .)
    LEQUAL          reduce using rule 47 (expression -> STRING .)
    NEQUAL          reduce using rule 47 (expression -> STRING .)
    ID              reduce using rule 47 (expression -> STRING .)
    CONST           reduce using rule 47 (expression -> STRING .)
    DEF             reduce using rule 47 (expression -> STRING .)
    RETURN          reduce using rule 47 (expression -> STRING .)
    IF              reduce using rule 47 (expression -> STRING .)
    WHILE           reduce using rule 47 (expression -> STRING .)
    FOR             reduce using rule 47 (expression -> STRING .)
    TYPE            reduce using rule 47 (expression -> STRING .)
    UNTYPE          reduce using rule 47 (expression -> STRING .)
    INTattr         reduce using rule 47 (expression -> STRING .)
    FLOATattr       reduce using rule 47 (expression -> STRING .)
    STRINGattr      reduce using rule 47 (expression -> STRING .)
    BOOLattr        reduce using rule 47 (expression -> STRING .)
    NULL            reduce using rule 47 (expression -> STRING .)
    $end            reduce using rule 47 (expression -> STRING .)
    RBRACE          reduce using rule 47 (expression -> STRING .)
    LBRACE          reduce using rule 47 (expression -> STRING .)
    COMMA           reduce using rule 47 (expression -> STRING .)
    RPAREN          reduce using rule 47 (expression -> STRING .)
    RBRACKET        reduce using rule 47 (expression -> STRING .)


state 44

    (48) expression -> FLOAT .

    PLUS            reduce using rule 48 (expression -> FLOAT .)
    MINUS           reduce using rule 48 (expression -> FLOAT .)
    MULT            reduce using rule 48 (expression -> FLOAT .)
    DIV             reduce using rule 48 (expression -> FLOAT .)
    EXP             reduce using rule 48 (expression -> FLOAT .)
    EQUALS          reduce using rule 48 (expression -> FLOAT .)
    GREATER         reduce using rule 48 (expression -> FLOAT .)
    LESS            reduce using rule 48 (expression -> FLOAT .)
    GEQUAL          reduce using rule 48 (expression -> FLOAT .)
    LEQUAL          reduce using rule 48 (expression -> FLOAT .)
    NEQUAL          reduce using rule 48 (expression -> FLOAT .)
    ID              reduce using rule 48 (expression -> FLOAT .)
    CONST           reduce using rule 48 (expression -> FLOAT .)
    DEF             reduce using rule 48 (expression -> FLOAT .)
    RETURN          reduce using rule 48 (expression -> FLOAT .)
    IF              reduce using rule 48 (expression -> FLOAT .)
    WHILE           reduce using rule 48 (expression -> FLOAT .)
    FOR             reduce using rule 48 (expression -> FLOAT .)
    TYPE            reduce using rule 48 (expression -> FLOAT .)
    UNTYPE          reduce using rule 48 (expression -> FLOAT .)
    INTattr         reduce using rule 48 (expression -> FLOAT .)
    FLOATattr       reduce using rule 48 (expression -> FLOAT .)
    STRINGattr      reduce using rule 48 (expression -> FLOAT .)
    BOOLattr        reduce using rule 48 (expression -> FLOAT .)
    NULL            reduce using rule 48 (expression -> FLOAT .)
    $end            reduce using rule 48 (expression -> FLOAT .)
    RBRACE          reduce using rule 48 (expression -> FLOAT .)
    LBRACE          reduce using rule 48 (expression -> FLOAT .)
    COMMA           reduce using rule 48 (expression -> FLOAT .)
    RPAREN          reduce using rule 48 (expression -> FLOAT .)
    RBRACKET        reduce using rule 48 (expression -> FLOAT .)


state 45

    (49) expression -> BOOL .

    PLUS            reduce using rule 49 (expression -> BOOL .)
    MINUS           reduce using rule 49 (expression -> BOOL .)
    MULT            reduce using rule 49 (expression -> BOOL .)
    DIV             reduce using rule 49 (expression -> BOOL .)
    EXP             reduce using rule 49 (expression -> BOOL .)
    EQUALS          reduce using rule 49 (expression -> BOOL .)
    GREATER         reduce using rule 49 (expression -> BOOL .)
    LESS            reduce using rule 49 (expression -> BOOL .)
    GEQUAL          reduce using rule 49 (expression -> BOOL .)
    LEQUAL          reduce using rule 49 (expression -> BOOL .)
    NEQUAL          reduce using rule 49 (expression -> BOOL .)
    ID              reduce using rule 49 (expression -> BOOL .)
    CONST           reduce using rule 49 (expression -> BOOL .)
    DEF             reduce using rule 49 (expression -> BOOL .)
    RETURN          reduce using rule 49 (expression -> BOOL .)
    IF              reduce using rule 49 (expression -> BOOL .)
    WHILE           reduce using rule 49 (expression -> BOOL .)
    FOR             reduce using rule 49 (expression -> BOOL .)
    TYPE            reduce using rule 49 (expression -> BOOL .)
    UNTYPE          reduce using rule 49 (expression -> BOOL .)
    INTattr         reduce using rule 49 (expression -> BOOL .)
    FLOATattr       reduce using rule 49 (expression -> BOOL .)
    STRINGattr      reduce using rule 49 (expression -> BOOL .)
    BOOLattr        reduce using rule 49 (expression -> BOOL .)
    NULL            reduce using rule 49 (expression -> BOOL .)
    $end            reduce using rule 49 (expression -> BOOL .)
    RBRACE          reduce using rule 49 (expression -> BOOL .)
    LBRACE          reduce using rule 49 (expression -> BOOL .)
    COMMA           reduce using rule 49 (expression -> BOOL .)
    RPAREN          reduce using rule 49 (expression -> BOOL .)
    RBRACKET        reduce using rule 49 (expression -> BOOL .)


state 46

    (50) expression -> NULL .

    PLUS            reduce using rule 50 (expression -> NULL .)
    MINUS           reduce using rule 50 (expression -> NULL .)
    MULT            reduce using rule 50 (expression -> NULL .)
    DIV             reduce using rule 50 (expression -> NULL .)
    EXP             reduce using rule 50 (expression -> NULL .)
    EQUALS          reduce using rule 50 (expression -> NULL .)
    GREATER         reduce using rule 50 (expression -> NULL .)
    LESS            reduce using rule 50 (expression -> NULL .)
    GEQUAL          reduce using rule 50 (expression -> NULL .)
    LEQUAL          reduce using rule 50 (expression -> NULL .)
    NEQUAL          reduce using rule 50 (expression -> NULL .)
    ID              reduce using rule 50 (expression -> NULL .)
    CONST           reduce using rule 50 (expression -> NULL .)
    DEF             reduce using rule 50 (expression -> NULL .)
    RETURN          reduce using rule 50 (expression -> NULL .)
    IF              reduce using rule 50 (expression -> NULL .)
    WHILE           reduce using rule 50 (expression -> NULL .)
    FOR             reduce using rule 50 (expression -> NULL .)
    TYPE            reduce using rule 50 (expression -> NULL .)
    UNTYPE          reduce using rule 50 (expression -> NULL .)
    INTattr         reduce using rule 50 (expression -> NULL .)
    FLOATattr       reduce using rule 50 (expression -> NULL .)
    STRINGattr      reduce using rule 50 (expression -> NULL .)
    BOOLattr        reduce using rule 50 (expression -> NULL .)
    NULL            reduce using rule 50 (expression -> NULL .)
    $end            reduce using rule 50 (expression -> NULL .)
    RBRACE          reduce using rule 50 (expression -> NULL .)
    LBRACE          reduce using rule 50 (expression -> NULL .)
    COMMA           reduce using rule 50 (expression -> NULL .)
    RPAREN          reduce using rule 50 (expression -> NULL .)
    RBRACKET        reduce using rule 50 (expression -> NULL .)


state 47

    (51) expression -> id .

    PLUS            reduce using rule 51 (expression -> id .)
    MINUS           reduce using rule 51 (expression -> id .)
    MULT            reduce using rule 51 (expression -> id .)
    DIV             reduce using rule 51 (expression -> id .)
    EXP             reduce using rule 51 (expression -> id .)
    EQUALS          reduce using rule 51 (expression -> id .)
    GREATER         reduce using rule 51 (expression -> id .)
    LESS            reduce using rule 51 (expression -> id .)
    GEQUAL          reduce using rule 51 (expression -> id .)
    LEQUAL          reduce using rule 51 (expression -> id .)
    NEQUAL          reduce using rule 51 (expression -> id .)
    ID              reduce using rule 51 (expression -> id .)
    CONST           reduce using rule 51 (expression -> id .)
    DEF             reduce using rule 51 (expression -> id .)
    RETURN          reduce using rule 51 (expression -> id .)
    IF              reduce using rule 51 (expression -> id .)
    WHILE           reduce using rule 51 (expression -> id .)
    FOR             reduce using rule 51 (expression -> id .)
    TYPE            reduce using rule 51 (expression -> id .)
    UNTYPE          reduce using rule 51 (expression -> id .)
    INTattr         reduce using rule 51 (expression -> id .)
    FLOATattr       reduce using rule 51 (expression -> id .)
    STRINGattr      reduce using rule 51 (expression -> id .)
    BOOLattr        reduce using rule 51 (expression -> id .)
    NULL            reduce using rule 51 (expression -> id .)
    $end            reduce using rule 51 (expression -> id .)
    RBRACE          reduce using rule 51 (expression -> id .)
    LBRACE          reduce using rule 51 (expression -> id .)
    COMMA           reduce using rule 51 (expression -> id .)
    RPAREN          reduce using rule 51 (expression -> id .)
    RBRACKET        reduce using rule 51 (expression -> id .)


state 48

    (52) expression -> function_call .

    PLUS            reduce using rule 52 (expression -> function_call .)
    MINUS           reduce using rule 52 (expression -> function_call .)
    MULT            reduce using rule 52 (expression -> function_call .)
    DIV             reduce using rule 52 (expression -> function_call .)
    EXP             reduce using rule 52 (expression -> function_call .)
    EQUALS          reduce using rule 52 (expression -> function_call .)
    GREATER         reduce using rule 52 (expression -> function_call .)
    LESS            reduce using rule 52 (expression -> function_call .)
    GEQUAL          reduce using rule 52 (expression -> function_call .)
    LEQUAL          reduce using rule 52 (expression -> function_call .)
    NEQUAL          reduce using rule 52 (expression -> function_call .)
    ID              reduce using rule 52 (expression -> function_call .)
    CONST           reduce using rule 52 (expression -> function_call .)
    DEF             reduce using rule 52 (expression -> function_call .)
    RETURN          reduce using rule 52 (expression -> function_call .)
    IF              reduce using rule 52 (expression -> function_call .)
    WHILE           reduce using rule 52 (expression -> function_call .)
    FOR             reduce using rule 52 (expression -> function_call .)
    TYPE            reduce using rule 52 (expression -> function_call .)
    UNTYPE          reduce using rule 52 (expression -> function_call .)
    INTattr         reduce using rule 52 (expression -> function_call .)
    FLOATattr       reduce using rule 52 (expression -> function_call .)
    STRINGattr      reduce using rule 52 (expression -> function_call .)
    BOOLattr        reduce using rule 52 (expression -> function_call .)
    NULL            reduce using rule 52 (expression -> function_call .)
    $end            reduce using rule 52 (expression -> function_call .)
    RBRACE          reduce using rule 52 (expression -> function_call .)
    LBRACE          reduce using rule 52 (expression -> function_call .)
    COMMA           reduce using rule 52 (expression -> function_call .)
    RPAREN          reduce using rule 52 (expression -> function_call .)
    RBRACKET        reduce using rule 52 (expression -> function_call .)


state 49

    (53) expression -> array_declaration .

    PLUS            reduce using rule 53 (expression -> array_declaration .)
    MINUS           reduce using rule 53 (expression -> array_declaration .)
    MULT            reduce using rule 53 (expression -> array_declaration .)
    DIV             reduce using rule 53 (expression -> array_declaration .)
    EXP             reduce using rule 53 (expression -> array_declaration .)
    EQUALS          reduce using rule 53 (expression -> array_declaration .)
    GREATER         reduce using rule 53 (expression -> array_declaration .)
    LESS            reduce using rule 53 (expression -> array_declaration .)
    GEQUAL          reduce using rule 53 (expression -> array_declaration .)
    LEQUAL          reduce using rule 53 (expression -> array_declaration .)
    NEQUAL          reduce using rule 53 (expression -> array_declaration .)
    ID              reduce using rule 53 (expression -> array_declaration .)
    CONST           reduce using rule 53 (expression -> array_declaration .)
    DEF             reduce using rule 53 (expression -> array_declaration .)
    RETURN          reduce using rule 53 (expression -> array_declaration .)
    IF              reduce using rule 53 (expression -> array_declaration .)
    WHILE           reduce using rule 53 (expression -> array_declaration .)
    FOR             reduce using rule 53 (expression -> array_declaration .)
    TYPE            reduce using rule 53 (expression -> array_declaration .)
    UNTYPE          reduce using rule 53 (expression -> array_declaration .)
    INTattr         reduce using rule 53 (expression -> array_declaration .)
    FLOATattr       reduce using rule 53 (expression -> array_declaration .)
    STRINGattr      reduce using rule 53 (expression -> array_declaration .)
    BOOLattr        reduce using rule 53 (expression -> array_declaration .)
    NULL            reduce using rule 53 (expression -> array_declaration .)
    $end            reduce using rule 53 (expression -> array_declaration .)
    RBRACE          reduce using rule 53 (expression -> array_declaration .)
    LBRACE          reduce using rule 53 (expression -> array_declaration .)
    COMMA           reduce using rule 53 (expression -> array_declaration .)
    RPAREN          reduce using rule 53 (expression -> array_declaration .)
    RBRACKET        reduce using rule 53 (expression -> array_declaration .)


state 50

    (67) id -> ID .
    (65) function_call -> ID . LPAREN RPAREN
    (66) function_call -> ID . LPAREN parameters RPAREN

    PLUS            reduce using rule 67 (id -> ID .)
    MINUS           reduce using rule 67 (id -> ID .)
    MULT            reduce using rule 67 (id -> ID .)
    DIV             reduce using rule 67 (id -> ID .)
    EXP             reduce using rule 67 (id -> ID .)
    EQUALS          reduce using rule 67 (id -> ID .)
    GREATER         reduce using rule 67 (id -> ID .)
    LESS            reduce using rule 67 (id -> ID .)
    GEQUAL          reduce using rule 67 (id -> ID .)
    LEQUAL          reduce using rule 67 (id -> ID .)
    NEQUAL          reduce using rule 67 (id -> ID .)
    ID              reduce using rule 67 (id -> ID .)
    CONST           reduce using rule 67 (id -> ID .)
    DEF             reduce using rule 67 (id -> ID .)
    RETURN          reduce using rule 67 (id -> ID .)
    IF              reduce using rule 67 (id -> ID .)
    WHILE           reduce using rule 67 (id -> ID .)
    FOR             reduce using rule 67 (id -> ID .)
    TYPE            reduce using rule 67 (id -> ID .)
    UNTYPE          reduce using rule 67 (id -> ID .)
    INTattr         reduce using rule 67 (id -> ID .)
    FLOATattr       reduce using rule 67 (id -> ID .)
    STRINGattr      reduce using rule 67 (id -> ID .)
    BOOLattr        reduce using rule 67 (id -> ID .)
    NULL            reduce using rule 67 (id -> ID .)
    $end            reduce using rule 67 (id -> ID .)
    RBRACE          reduce using rule 67 (id -> ID .)
    LBRACE          reduce using rule 67 (id -> ID .)
    COMMA           reduce using rule 67 (id -> ID .)
    RPAREN          reduce using rule 67 (id -> ID .)
    RBRACKET        reduce using rule 67 (id -> ID .)
    LPAREN          shift and go to state 30


state 51

    (11) array_declaration -> LBRACKET . array_elements RBRACKET
    (12) array_elements -> . expression
    (13) array_elements -> . expression COMMA array_elements
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    array_elements                 shift and go to state 82
    expression                     shift and go to state 83
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 52

    (14) if_statement -> IF expression . LBRACE statement_list RBRACE
    (15) if_statement -> IF expression . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    LBRACE          shift and go to state 84
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 53

    (16) if_statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (45) expression -> LPAREN . expression RPAREN
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 85
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 54

    (18) if_statement -> WHILE expression . LBRACE statement_list RBRACE
    (19) if_statement -> WHILE expression . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    LBRACE          shift and go to state 86
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 55

    (20) if_statement -> WHILE LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> WHILE LPAREN . expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (45) expression -> LPAREN . expression RPAREN
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 87
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 56

    (22) for_in_statement -> FOR id_list . IN ID LBRACE statement_list RBRACE

    IN              shift and go to state 88


state 57

    (23) id_list -> ID .
    (24) id_list -> ID . COMMA id_list

    IN              reduce using rule 23 (id_list -> ID .)
    COMMA           shift and go to state 89


state 58

    (74) typing -> TYPE ID .

    ID              reduce using rule 74 (typing -> TYPE ID .)
    CONST           reduce using rule 74 (typing -> TYPE ID .)
    DEF             reduce using rule 74 (typing -> TYPE ID .)
    RETURN          reduce using rule 74 (typing -> TYPE ID .)
    IF              reduce using rule 74 (typing -> TYPE ID .)
    WHILE           reduce using rule 74 (typing -> TYPE ID .)
    FOR             reduce using rule 74 (typing -> TYPE ID .)
    TYPE            reduce using rule 74 (typing -> TYPE ID .)
    UNTYPE          reduce using rule 74 (typing -> TYPE ID .)
    INTattr         reduce using rule 74 (typing -> TYPE ID .)
    FLOATattr       reduce using rule 74 (typing -> TYPE ID .)
    STRINGattr      reduce using rule 74 (typing -> TYPE ID .)
    BOOLattr        reduce using rule 74 (typing -> TYPE ID .)
    NULL            reduce using rule 74 (typing -> TYPE ID .)
    $end            reduce using rule 74 (typing -> TYPE ID .)
    RBRACE          reduce using rule 74 (typing -> TYPE ID .)


state 59

    (75) typing -> UNTYPE ID .

    ID              reduce using rule 75 (typing -> UNTYPE ID .)
    CONST           reduce using rule 75 (typing -> UNTYPE ID .)
    DEF             reduce using rule 75 (typing -> UNTYPE ID .)
    RETURN          reduce using rule 75 (typing -> UNTYPE ID .)
    IF              reduce using rule 75 (typing -> UNTYPE ID .)
    WHILE           reduce using rule 75 (typing -> UNTYPE ID .)
    FOR             reduce using rule 75 (typing -> UNTYPE ID .)
    TYPE            reduce using rule 75 (typing -> UNTYPE ID .)
    UNTYPE          reduce using rule 75 (typing -> UNTYPE ID .)
    INTattr         reduce using rule 75 (typing -> UNTYPE ID .)
    FLOATattr       reduce using rule 75 (typing -> UNTYPE ID .)
    STRINGattr      reduce using rule 75 (typing -> UNTYPE ID .)
    BOOLattr        reduce using rule 75 (typing -> UNTYPE ID .)
    NULL            reduce using rule 75 (typing -> UNTYPE ID .)
    $end            reduce using rule 75 (typing -> UNTYPE ID .)
    RBRACE          reduce using rule 75 (typing -> UNTYPE ID .)


state 60

    (28) assignment -> ID assignment_type expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    ID              reduce using rule 28 (assignment -> ID assignment_type expression .)
    CONST           reduce using rule 28 (assignment -> ID assignment_type expression .)
    DEF             reduce using rule 28 (assignment -> ID assignment_type expression .)
    RETURN          reduce using rule 28 (assignment -> ID assignment_type expression .)
    IF              reduce using rule 28 (assignment -> ID assignment_type expression .)
    WHILE           reduce using rule 28 (assignment -> ID assignment_type expression .)
    FOR             reduce using rule 28 (assignment -> ID assignment_type expression .)
    TYPE            reduce using rule 28 (assignment -> ID assignment_type expression .)
    UNTYPE          reduce using rule 28 (assignment -> ID assignment_type expression .)
    INTattr         reduce using rule 28 (assignment -> ID assignment_type expression .)
    FLOATattr       reduce using rule 28 (assignment -> ID assignment_type expression .)
    STRINGattr      reduce using rule 28 (assignment -> ID assignment_type expression .)
    BOOLattr        reduce using rule 28 (assignment -> ID assignment_type expression .)
    NULL            reduce using rule 28 (assignment -> ID assignment_type expression .)
    $end            reduce using rule 28 (assignment -> ID assignment_type expression .)
    RBRACE          reduce using rule 28 (assignment -> ID assignment_type expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 61

    (65) function_call -> ID LPAREN RPAREN .

    ID              reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    CONST           reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    DEF             reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    IF              reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    WHILE           reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    FOR             reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    TYPE            reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    UNTYPE          reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    INTattr         reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    FLOATattr       reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    STRINGattr      reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    BOOLattr        reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    NULL            reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    $end            reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    MULT            reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    DIV             reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    EXP             reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    EQUALS          reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    GREATER         reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    LESS            reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    GEQUAL          reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    LEQUAL          reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    NEQUAL          reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    LBRACE          reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 65 (function_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 65 (function_call -> ID LPAREN RPAREN .)


state 62

    (66) function_call -> ID LPAREN parameters . RPAREN

    RPAREN          shift and go to state 90


state 63

    (68) parameters -> expression .
    (69) parameters -> expression . COMMA parameters
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    RPAREN          reduce using rule 68 (parameters -> expression .)
    COMMA           shift and go to state 91
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 64

    (31) assignment -> type_attr ID ASSIGN . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 92
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 65

    (32) assignment -> CONST ID ASSIGN . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 93
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 66

    (33) assignment -> CONST type_attr ID . ASSIGN expression

    ASSIGN          shift and go to state 94


state 67

    (61) function_declaration -> DEF ID LPAREN . RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> DEF ID LPAREN . func_parameters RPAREN LBRACE statement_list RBRACE
    (70) func_parameters -> . ID
    (71) func_parameters -> . ID COMMA func_parameters
    (72) func_parameters -> . type_attr ID
    (73) func_parameters -> . type_attr ID COMMA func_parameters
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RPAREN          shift and go to state 96
    ID              shift and go to state 95
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    func_parameters                shift and go to state 97
    type_attr                      shift and go to state 98

state 68

    (63) function_declaration -> DEF type_attr ID . LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> DEF type_attr ID . LPAREN func_parameters RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 99


state 69

    (34) expression -> expression PLUS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 100
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 70

    (35) expression -> expression MINUS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 101
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 71

    (36) expression -> expression MULT . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 102
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 72

    (37) expression -> expression DIV . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 103
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 73

    (38) expression -> expression EXP . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 104
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 74

    (39) expression -> expression EQUALS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 105
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 75

    (40) expression -> expression GREATER . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 106
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 76

    (41) expression -> expression LESS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 107
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 77

    (42) expression -> expression GEQUAL . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 108
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 78

    (43) expression -> expression LEQUAL . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 109
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 79

    (44) expression -> expression NEQUAL . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 110
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 80

    (54) expression -> MINUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 54 (expression -> MINUS expression .)
    MINUS           reduce using rule 54 (expression -> MINUS expression .)
    MULT            reduce using rule 54 (expression -> MINUS expression .)
    DIV             reduce using rule 54 (expression -> MINUS expression .)
    EXP             reduce using rule 54 (expression -> MINUS expression .)
    EQUALS          reduce using rule 54 (expression -> MINUS expression .)
    GREATER         reduce using rule 54 (expression -> MINUS expression .)
    LESS            reduce using rule 54 (expression -> MINUS expression .)
    GEQUAL          reduce using rule 54 (expression -> MINUS expression .)
    LEQUAL          reduce using rule 54 (expression -> MINUS expression .)
    NEQUAL          reduce using rule 54 (expression -> MINUS expression .)
    ID              reduce using rule 54 (expression -> MINUS expression .)
    CONST           reduce using rule 54 (expression -> MINUS expression .)
    DEF             reduce using rule 54 (expression -> MINUS expression .)
    RETURN          reduce using rule 54 (expression -> MINUS expression .)
    IF              reduce using rule 54 (expression -> MINUS expression .)
    WHILE           reduce using rule 54 (expression -> MINUS expression .)
    FOR             reduce using rule 54 (expression -> MINUS expression .)
    TYPE            reduce using rule 54 (expression -> MINUS expression .)
    UNTYPE          reduce using rule 54 (expression -> MINUS expression .)
    INTattr         reduce using rule 54 (expression -> MINUS expression .)
    FLOATattr       reduce using rule 54 (expression -> MINUS expression .)
    STRINGattr      reduce using rule 54 (expression -> MINUS expression .)
    BOOLattr        reduce using rule 54 (expression -> MINUS expression .)
    NULL            reduce using rule 54 (expression -> MINUS expression .)
    $end            reduce using rule 54 (expression -> MINUS expression .)
    RBRACE          reduce using rule 54 (expression -> MINUS expression .)
    LBRACE          reduce using rule 54 (expression -> MINUS expression .)
    COMMA           reduce using rule 54 (expression -> MINUS expression .)
    RPAREN          reduce using rule 54 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 54 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 70 ]
  ! MULT            [ shift and go to state 71 ]
  ! DIV             [ shift and go to state 72 ]
  ! EXP             [ shift and go to state 73 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! GREATER         [ shift and go to state 75 ]
  ! LESS            [ shift and go to state 76 ]
  ! GEQUAL          [ shift and go to state 77 ]
  ! LEQUAL          [ shift and go to state 78 ]
  ! NEQUAL          [ shift and go to state 79 ]


state 81

    (45) expression -> LPAREN expression . RPAREN
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    RPAREN          shift and go to state 111
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 82

    (11) array_declaration -> LBRACKET array_elements . RBRACKET

    RBRACKET        shift and go to state 112


state 83

    (12) array_elements -> expression .
    (13) array_elements -> expression . COMMA array_elements
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    RBRACKET        reduce using rule 12 (array_elements -> expression .)
    COMMA           shift and go to state 113
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 84

    (14) if_statement -> IF expression LBRACE . statement_list RBRACE
    (15) if_statement -> IF expression LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement_list                 shift and go to state 114
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 85

    (16) if_statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (45) expression -> LPAREN expression . RPAREN
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    RPAREN          shift and go to state 115
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 86

    (18) if_statement -> WHILE expression LBRACE . statement_list RBRACE
    (19) if_statement -> WHILE expression LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement_list                 shift and go to state 116
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 87

    (20) if_statement -> WHILE LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> WHILE LPAREN expression . RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (45) expression -> LPAREN expression . RPAREN
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    RPAREN          shift and go to state 117
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 88

    (22) for_in_statement -> FOR id_list IN . ID LBRACE statement_list RBRACE

    ID              shift and go to state 118


state 89

    (24) id_list -> ID COMMA . id_list
    (23) id_list -> . ID
    (24) id_list -> . ID COMMA id_list

    ID              shift and go to state 57

    id_list                        shift and go to state 119

state 90

    (66) function_call -> ID LPAREN parameters RPAREN .

    ID              reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    CONST           reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    DEF             reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    RETURN          reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    IF              reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    WHILE           reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    FOR             reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    TYPE            reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    UNTYPE          reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    INTattr         reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    FLOATattr       reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    STRINGattr      reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    BOOLattr        reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    NULL            reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    $end            reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    PLUS            reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    MINUS           reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    MULT            reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    DIV             reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    EXP             reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    EQUALS          reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    GREATER         reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    LESS            reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    GEQUAL          reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    LEQUAL          reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    NEQUAL          reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    RBRACE          reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    LBRACE          reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    COMMA           reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    RPAREN          reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)
    RBRACKET        reduce using rule 66 (function_call -> ID LPAREN parameters RPAREN .)


state 91

    (69) parameters -> expression COMMA . parameters
    (68) parameters -> . expression
    (69) parameters -> . expression COMMA parameters
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 63
    parameters                     shift and go to state 120
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 92

    (31) assignment -> type_attr ID ASSIGN expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    ID              reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    CONST           reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    DEF             reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    RETURN          reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    IF              reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    WHILE           reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    FOR             reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    TYPE            reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    UNTYPE          reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    INTattr         reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    FLOATattr       reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    STRINGattr      reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    BOOLattr        reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    NULL            reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    $end            reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    RBRACE          reduce using rule 31 (assignment -> type_attr ID ASSIGN expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 93

    (32) assignment -> CONST ID ASSIGN expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    ID              reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    CONST           reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    DEF             reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    RETURN          reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    IF              reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    WHILE           reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    FOR             reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    TYPE            reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    UNTYPE          reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    INTattr         reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    FLOATattr       reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    STRINGattr      reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    BOOLattr        reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    NULL            reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    $end            reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    RBRACE          reduce using rule 32 (assignment -> CONST ID ASSIGN expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 94

    (33) assignment -> CONST type_attr ID ASSIGN . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 121
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 95

    (70) func_parameters -> ID .
    (71) func_parameters -> ID . COMMA func_parameters

    RPAREN          reduce using rule 70 (func_parameters -> ID .)
    COMMA           shift and go to state 122


state 96

    (61) function_declaration -> DEF ID LPAREN RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 123


state 97

    (62) function_declaration -> DEF ID LPAREN func_parameters . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 124


state 98

    (72) func_parameters -> type_attr . ID
    (73) func_parameters -> type_attr . ID COMMA func_parameters

    ID              shift and go to state 125


state 99

    (63) function_declaration -> DEF type_attr ID LPAREN . RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> DEF type_attr ID LPAREN . func_parameters RPAREN LBRACE statement_list RBRACE
    (70) func_parameters -> . ID
    (71) func_parameters -> . ID COMMA func_parameters
    (72) func_parameters -> . type_attr ID
    (73) func_parameters -> . type_attr ID COMMA func_parameters
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RPAREN          shift and go to state 126
    ID              shift and go to state 95
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    type_attr                      shift and go to state 98
    func_parameters                shift and go to state 127

state 100

    (34) expression -> expression PLUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 34 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 34 (expression -> expression PLUS expression .)
    EXP             reduce using rule 34 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 34 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 34 (expression -> expression PLUS expression .)
    LESS            reduce using rule 34 (expression -> expression PLUS expression .)
    GEQUAL          reduce using rule 34 (expression -> expression PLUS expression .)
    LEQUAL          reduce using rule 34 (expression -> expression PLUS expression .)
    NEQUAL          reduce using rule 34 (expression -> expression PLUS expression .)
    ID              reduce using rule 34 (expression -> expression PLUS expression .)
    CONST           reduce using rule 34 (expression -> expression PLUS expression .)
    DEF             reduce using rule 34 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 34 (expression -> expression PLUS expression .)
    IF              reduce using rule 34 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 34 (expression -> expression PLUS expression .)
    FOR             reduce using rule 34 (expression -> expression PLUS expression .)
    TYPE            reduce using rule 34 (expression -> expression PLUS expression .)
    UNTYPE          reduce using rule 34 (expression -> expression PLUS expression .)
    INTattr         reduce using rule 34 (expression -> expression PLUS expression .)
    FLOATattr       reduce using rule 34 (expression -> expression PLUS expression .)
    STRINGattr      reduce using rule 34 (expression -> expression PLUS expression .)
    BOOLattr        reduce using rule 34 (expression -> expression PLUS expression .)
    NULL            reduce using rule 34 (expression -> expression PLUS expression .)
    $end            reduce using rule 34 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 34 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 34 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 34 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 34 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 34 (expression -> expression PLUS expression .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72

  ! MULT            [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 70 ]
  ! EXP             [ shift and go to state 73 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! GREATER         [ shift and go to state 75 ]
  ! LESS            [ shift and go to state 76 ]
  ! GEQUAL          [ shift and go to state 77 ]
  ! LEQUAL          [ shift and go to state 78 ]
  ! NEQUAL          [ shift and go to state 79 ]


state 101

    (35) expression -> expression MINUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 35 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 35 (expression -> expression MINUS expression .)
    EXP             reduce using rule 35 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 35 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 35 (expression -> expression MINUS expression .)
    LESS            reduce using rule 35 (expression -> expression MINUS expression .)
    GEQUAL          reduce using rule 35 (expression -> expression MINUS expression .)
    LEQUAL          reduce using rule 35 (expression -> expression MINUS expression .)
    NEQUAL          reduce using rule 35 (expression -> expression MINUS expression .)
    ID              reduce using rule 35 (expression -> expression MINUS expression .)
    CONST           reduce using rule 35 (expression -> expression MINUS expression .)
    DEF             reduce using rule 35 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 35 (expression -> expression MINUS expression .)
    IF              reduce using rule 35 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 35 (expression -> expression MINUS expression .)
    FOR             reduce using rule 35 (expression -> expression MINUS expression .)
    TYPE            reduce using rule 35 (expression -> expression MINUS expression .)
    UNTYPE          reduce using rule 35 (expression -> expression MINUS expression .)
    INTattr         reduce using rule 35 (expression -> expression MINUS expression .)
    FLOATattr       reduce using rule 35 (expression -> expression MINUS expression .)
    STRINGattr      reduce using rule 35 (expression -> expression MINUS expression .)
    BOOLattr        reduce using rule 35 (expression -> expression MINUS expression .)
    NULL            reduce using rule 35 (expression -> expression MINUS expression .)
    $end            reduce using rule 35 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 35 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 35 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 35 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 35 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 35 (expression -> expression MINUS expression .)
    MULT            shift and go to state 71
    DIV             shift and go to state 72

  ! MULT            [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 70 ]
  ! EXP             [ shift and go to state 73 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! GREATER         [ shift and go to state 75 ]
  ! LESS            [ shift and go to state 76 ]
  ! GEQUAL          [ shift and go to state 77 ]
  ! LEQUAL          [ shift and go to state 78 ]
  ! NEQUAL          [ shift and go to state 79 ]


state 102

    (36) expression -> expression MULT expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 36 (expression -> expression MULT expression .)
    MINUS           reduce using rule 36 (expression -> expression MULT expression .)
    MULT            reduce using rule 36 (expression -> expression MULT expression .)
    DIV             reduce using rule 36 (expression -> expression MULT expression .)
    EXP             reduce using rule 36 (expression -> expression MULT expression .)
    EQUALS          reduce using rule 36 (expression -> expression MULT expression .)
    GREATER         reduce using rule 36 (expression -> expression MULT expression .)
    LESS            reduce using rule 36 (expression -> expression MULT expression .)
    GEQUAL          reduce using rule 36 (expression -> expression MULT expression .)
    LEQUAL          reduce using rule 36 (expression -> expression MULT expression .)
    NEQUAL          reduce using rule 36 (expression -> expression MULT expression .)
    ID              reduce using rule 36 (expression -> expression MULT expression .)
    CONST           reduce using rule 36 (expression -> expression MULT expression .)
    DEF             reduce using rule 36 (expression -> expression MULT expression .)
    RETURN          reduce using rule 36 (expression -> expression MULT expression .)
    IF              reduce using rule 36 (expression -> expression MULT expression .)
    WHILE           reduce using rule 36 (expression -> expression MULT expression .)
    FOR             reduce using rule 36 (expression -> expression MULT expression .)
    TYPE            reduce using rule 36 (expression -> expression MULT expression .)
    UNTYPE          reduce using rule 36 (expression -> expression MULT expression .)
    INTattr         reduce using rule 36 (expression -> expression MULT expression .)
    FLOATattr       reduce using rule 36 (expression -> expression MULT expression .)
    STRINGattr      reduce using rule 36 (expression -> expression MULT expression .)
    BOOLattr        reduce using rule 36 (expression -> expression MULT expression .)
    NULL            reduce using rule 36 (expression -> expression MULT expression .)
    $end            reduce using rule 36 (expression -> expression MULT expression .)
    RBRACE          reduce using rule 36 (expression -> expression MULT expression .)
    LBRACE          reduce using rule 36 (expression -> expression MULT expression .)
    COMMA           reduce using rule 36 (expression -> expression MULT expression .)
    RPAREN          reduce using rule 36 (expression -> expression MULT expression .)
    RBRACKET        reduce using rule 36 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 70 ]
  ! MULT            [ shift and go to state 71 ]
  ! DIV             [ shift and go to state 72 ]
  ! EXP             [ shift and go to state 73 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! GREATER         [ shift and go to state 75 ]
  ! LESS            [ shift and go to state 76 ]
  ! GEQUAL          [ shift and go to state 77 ]
  ! LEQUAL          [ shift and go to state 78 ]
  ! NEQUAL          [ shift and go to state 79 ]


state 103

    (37) expression -> expression DIV expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 37 (expression -> expression DIV expression .)
    MINUS           reduce using rule 37 (expression -> expression DIV expression .)
    MULT            reduce using rule 37 (expression -> expression DIV expression .)
    DIV             reduce using rule 37 (expression -> expression DIV expression .)
    EXP             reduce using rule 37 (expression -> expression DIV expression .)
    EQUALS          reduce using rule 37 (expression -> expression DIV expression .)
    GREATER         reduce using rule 37 (expression -> expression DIV expression .)
    LESS            reduce using rule 37 (expression -> expression DIV expression .)
    GEQUAL          reduce using rule 37 (expression -> expression DIV expression .)
    LEQUAL          reduce using rule 37 (expression -> expression DIV expression .)
    NEQUAL          reduce using rule 37 (expression -> expression DIV expression .)
    ID              reduce using rule 37 (expression -> expression DIV expression .)
    CONST           reduce using rule 37 (expression -> expression DIV expression .)
    DEF             reduce using rule 37 (expression -> expression DIV expression .)
    RETURN          reduce using rule 37 (expression -> expression DIV expression .)
    IF              reduce using rule 37 (expression -> expression DIV expression .)
    WHILE           reduce using rule 37 (expression -> expression DIV expression .)
    FOR             reduce using rule 37 (expression -> expression DIV expression .)
    TYPE            reduce using rule 37 (expression -> expression DIV expression .)
    UNTYPE          reduce using rule 37 (expression -> expression DIV expression .)
    INTattr         reduce using rule 37 (expression -> expression DIV expression .)
    FLOATattr       reduce using rule 37 (expression -> expression DIV expression .)
    STRINGattr      reduce using rule 37 (expression -> expression DIV expression .)
    BOOLattr        reduce using rule 37 (expression -> expression DIV expression .)
    NULL            reduce using rule 37 (expression -> expression DIV expression .)
    $end            reduce using rule 37 (expression -> expression DIV expression .)
    RBRACE          reduce using rule 37 (expression -> expression DIV expression .)
    LBRACE          reduce using rule 37 (expression -> expression DIV expression .)
    COMMA           reduce using rule 37 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 37 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 37 (expression -> expression DIV expression .)

  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 70 ]
  ! MULT            [ shift and go to state 71 ]
  ! DIV             [ shift and go to state 72 ]
  ! EXP             [ shift and go to state 73 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! GREATER         [ shift and go to state 75 ]
  ! LESS            [ shift and go to state 76 ]
  ! GEQUAL          [ shift and go to state 77 ]
  ! LEQUAL          [ shift and go to state 78 ]
  ! NEQUAL          [ shift and go to state 79 ]


state 104

    (38) expression -> expression EXP expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 38 (expression -> expression EXP expression .)
    CONST           reduce using rule 38 (expression -> expression EXP expression .)
    DEF             reduce using rule 38 (expression -> expression EXP expression .)
    RETURN          reduce using rule 38 (expression -> expression EXP expression .)
    IF              reduce using rule 38 (expression -> expression EXP expression .)
    WHILE           reduce using rule 38 (expression -> expression EXP expression .)
    FOR             reduce using rule 38 (expression -> expression EXP expression .)
    TYPE            reduce using rule 38 (expression -> expression EXP expression .)
    UNTYPE          reduce using rule 38 (expression -> expression EXP expression .)
    INTattr         reduce using rule 38 (expression -> expression EXP expression .)
    FLOATattr       reduce using rule 38 (expression -> expression EXP expression .)
    STRINGattr      reduce using rule 38 (expression -> expression EXP expression .)
    BOOLattr        reduce using rule 38 (expression -> expression EXP expression .)
    NULL            reduce using rule 38 (expression -> expression EXP expression .)
    $end            reduce using rule 38 (expression -> expression EXP expression .)
    RBRACE          reduce using rule 38 (expression -> expression EXP expression .)
    LBRACE          reduce using rule 38 (expression -> expression EXP expression .)
    COMMA           reduce using rule 38 (expression -> expression EXP expression .)
    RPAREN          reduce using rule 38 (expression -> expression EXP expression .)
    RBRACKET        reduce using rule 38 (expression -> expression EXP expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79

  ! PLUS            [ reduce using rule 38 (expression -> expression EXP expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression EXP expression .) ]
  ! MULT            [ reduce using rule 38 (expression -> expression EXP expression .) ]
  ! DIV             [ reduce using rule 38 (expression -> expression EXP expression .) ]
  ! EXP             [ reduce using rule 38 (expression -> expression EXP expression .) ]
  ! EQUALS          [ reduce using rule 38 (expression -> expression EXP expression .) ]
  ! GREATER         [ reduce using rule 38 (expression -> expression EXP expression .) ]
  ! LESS            [ reduce using rule 38 (expression -> expression EXP expression .) ]
  ! GEQUAL          [ reduce using rule 38 (expression -> expression EXP expression .) ]
  ! LEQUAL          [ reduce using rule 38 (expression -> expression EXP expression .) ]
  ! NEQUAL          [ reduce using rule 38 (expression -> expression EXP expression .) ]


state 105

    (39) expression -> expression EQUALS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 39 (expression -> expression EQUALS expression .)
    CONST           reduce using rule 39 (expression -> expression EQUALS expression .)
    DEF             reduce using rule 39 (expression -> expression EQUALS expression .)
    RETURN          reduce using rule 39 (expression -> expression EQUALS expression .)
    IF              reduce using rule 39 (expression -> expression EQUALS expression .)
    WHILE           reduce using rule 39 (expression -> expression EQUALS expression .)
    FOR             reduce using rule 39 (expression -> expression EQUALS expression .)
    TYPE            reduce using rule 39 (expression -> expression EQUALS expression .)
    UNTYPE          reduce using rule 39 (expression -> expression EQUALS expression .)
    INTattr         reduce using rule 39 (expression -> expression EQUALS expression .)
    FLOATattr       reduce using rule 39 (expression -> expression EQUALS expression .)
    STRINGattr      reduce using rule 39 (expression -> expression EQUALS expression .)
    BOOLattr        reduce using rule 39 (expression -> expression EQUALS expression .)
    NULL            reduce using rule 39 (expression -> expression EQUALS expression .)
    $end            reduce using rule 39 (expression -> expression EQUALS expression .)
    RBRACE          reduce using rule 39 (expression -> expression EQUALS expression .)
    LBRACE          reduce using rule 39 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 39 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 39 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 39 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79

  ! PLUS            [ reduce using rule 39 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression EQUALS expression .) ]
  ! MULT            [ reduce using rule 39 (expression -> expression EQUALS expression .) ]
  ! DIV             [ reduce using rule 39 (expression -> expression EQUALS expression .) ]
  ! EXP             [ reduce using rule 39 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 39 (expression -> expression EQUALS expression .) ]
  ! GREATER         [ reduce using rule 39 (expression -> expression EQUALS expression .) ]
  ! LESS            [ reduce using rule 39 (expression -> expression EQUALS expression .) ]
  ! GEQUAL          [ reduce using rule 39 (expression -> expression EQUALS expression .) ]
  ! LEQUAL          [ reduce using rule 39 (expression -> expression EQUALS expression .) ]
  ! NEQUAL          [ reduce using rule 39 (expression -> expression EQUALS expression .) ]


state 106

    (40) expression -> expression GREATER expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 40 (expression -> expression GREATER expression .)
    CONST           reduce using rule 40 (expression -> expression GREATER expression .)
    DEF             reduce using rule 40 (expression -> expression GREATER expression .)
    RETURN          reduce using rule 40 (expression -> expression GREATER expression .)
    IF              reduce using rule 40 (expression -> expression GREATER expression .)
    WHILE           reduce using rule 40 (expression -> expression GREATER expression .)
    FOR             reduce using rule 40 (expression -> expression GREATER expression .)
    TYPE            reduce using rule 40 (expression -> expression GREATER expression .)
    UNTYPE          reduce using rule 40 (expression -> expression GREATER expression .)
    INTattr         reduce using rule 40 (expression -> expression GREATER expression .)
    FLOATattr       reduce using rule 40 (expression -> expression GREATER expression .)
    STRINGattr      reduce using rule 40 (expression -> expression GREATER expression .)
    BOOLattr        reduce using rule 40 (expression -> expression GREATER expression .)
    NULL            reduce using rule 40 (expression -> expression GREATER expression .)
    $end            reduce using rule 40 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 40 (expression -> expression GREATER expression .)
    LBRACE          reduce using rule 40 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 40 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 40 (expression -> expression GREATER expression .)
    RBRACKET        reduce using rule 40 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79

  ! PLUS            [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! MULT            [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! DIV             [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! EXP             [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! EQUALS          [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! GEQUAL          [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! LEQUAL          [ reduce using rule 40 (expression -> expression GREATER expression .) ]
  ! NEQUAL          [ reduce using rule 40 (expression -> expression GREATER expression .) ]


state 107

    (41) expression -> expression LESS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 41 (expression -> expression LESS expression .)
    CONST           reduce using rule 41 (expression -> expression LESS expression .)
    DEF             reduce using rule 41 (expression -> expression LESS expression .)
    RETURN          reduce using rule 41 (expression -> expression LESS expression .)
    IF              reduce using rule 41 (expression -> expression LESS expression .)
    WHILE           reduce using rule 41 (expression -> expression LESS expression .)
    FOR             reduce using rule 41 (expression -> expression LESS expression .)
    TYPE            reduce using rule 41 (expression -> expression LESS expression .)
    UNTYPE          reduce using rule 41 (expression -> expression LESS expression .)
    INTattr         reduce using rule 41 (expression -> expression LESS expression .)
    FLOATattr       reduce using rule 41 (expression -> expression LESS expression .)
    STRINGattr      reduce using rule 41 (expression -> expression LESS expression .)
    BOOLattr        reduce using rule 41 (expression -> expression LESS expression .)
    NULL            reduce using rule 41 (expression -> expression LESS expression .)
    $end            reduce using rule 41 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 41 (expression -> expression LESS expression .)
    LBRACE          reduce using rule 41 (expression -> expression LESS expression .)
    COMMA           reduce using rule 41 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 41 (expression -> expression LESS expression .)
    RBRACKET        reduce using rule 41 (expression -> expression LESS expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79

  ! PLUS            [ reduce using rule 41 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression LESS expression .) ]
  ! MULT            [ reduce using rule 41 (expression -> expression LESS expression .) ]
  ! DIV             [ reduce using rule 41 (expression -> expression LESS expression .) ]
  ! EXP             [ reduce using rule 41 (expression -> expression LESS expression .) ]
  ! EQUALS          [ reduce using rule 41 (expression -> expression LESS expression .) ]
  ! GREATER         [ reduce using rule 41 (expression -> expression LESS expression .) ]
  ! LESS            [ reduce using rule 41 (expression -> expression LESS expression .) ]
  ! GEQUAL          [ reduce using rule 41 (expression -> expression LESS expression .) ]
  ! LEQUAL          [ reduce using rule 41 (expression -> expression LESS expression .) ]
  ! NEQUAL          [ reduce using rule 41 (expression -> expression LESS expression .) ]


state 108

    (42) expression -> expression GEQUAL expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 42 (expression -> expression GEQUAL expression .)
    CONST           reduce using rule 42 (expression -> expression GEQUAL expression .)
    DEF             reduce using rule 42 (expression -> expression GEQUAL expression .)
    RETURN          reduce using rule 42 (expression -> expression GEQUAL expression .)
    IF              reduce using rule 42 (expression -> expression GEQUAL expression .)
    WHILE           reduce using rule 42 (expression -> expression GEQUAL expression .)
    FOR             reduce using rule 42 (expression -> expression GEQUAL expression .)
    TYPE            reduce using rule 42 (expression -> expression GEQUAL expression .)
    UNTYPE          reduce using rule 42 (expression -> expression GEQUAL expression .)
    INTattr         reduce using rule 42 (expression -> expression GEQUAL expression .)
    FLOATattr       reduce using rule 42 (expression -> expression GEQUAL expression .)
    STRINGattr      reduce using rule 42 (expression -> expression GEQUAL expression .)
    BOOLattr        reduce using rule 42 (expression -> expression GEQUAL expression .)
    NULL            reduce using rule 42 (expression -> expression GEQUAL expression .)
    $end            reduce using rule 42 (expression -> expression GEQUAL expression .)
    RBRACE          reduce using rule 42 (expression -> expression GEQUAL expression .)
    LBRACE          reduce using rule 42 (expression -> expression GEQUAL expression .)
    COMMA           reduce using rule 42 (expression -> expression GEQUAL expression .)
    RPAREN          reduce using rule 42 (expression -> expression GEQUAL expression .)
    RBRACKET        reduce using rule 42 (expression -> expression GEQUAL expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79

  ! PLUS            [ reduce using rule 42 (expression -> expression GEQUAL expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression GEQUAL expression .) ]
  ! MULT            [ reduce using rule 42 (expression -> expression GEQUAL expression .) ]
  ! DIV             [ reduce using rule 42 (expression -> expression GEQUAL expression .) ]
  ! EXP             [ reduce using rule 42 (expression -> expression GEQUAL expression .) ]
  ! EQUALS          [ reduce using rule 42 (expression -> expression GEQUAL expression .) ]
  ! GREATER         [ reduce using rule 42 (expression -> expression GEQUAL expression .) ]
  ! LESS            [ reduce using rule 42 (expression -> expression GEQUAL expression .) ]
  ! GEQUAL          [ reduce using rule 42 (expression -> expression GEQUAL expression .) ]
  ! LEQUAL          [ reduce using rule 42 (expression -> expression GEQUAL expression .) ]
  ! NEQUAL          [ reduce using rule 42 (expression -> expression GEQUAL expression .) ]


state 109

    (43) expression -> expression LEQUAL expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 43 (expression -> expression LEQUAL expression .)
    CONST           reduce using rule 43 (expression -> expression LEQUAL expression .)
    DEF             reduce using rule 43 (expression -> expression LEQUAL expression .)
    RETURN          reduce using rule 43 (expression -> expression LEQUAL expression .)
    IF              reduce using rule 43 (expression -> expression LEQUAL expression .)
    WHILE           reduce using rule 43 (expression -> expression LEQUAL expression .)
    FOR             reduce using rule 43 (expression -> expression LEQUAL expression .)
    TYPE            reduce using rule 43 (expression -> expression LEQUAL expression .)
    UNTYPE          reduce using rule 43 (expression -> expression LEQUAL expression .)
    INTattr         reduce using rule 43 (expression -> expression LEQUAL expression .)
    FLOATattr       reduce using rule 43 (expression -> expression LEQUAL expression .)
    STRINGattr      reduce using rule 43 (expression -> expression LEQUAL expression .)
    BOOLattr        reduce using rule 43 (expression -> expression LEQUAL expression .)
    NULL            reduce using rule 43 (expression -> expression LEQUAL expression .)
    $end            reduce using rule 43 (expression -> expression LEQUAL expression .)
    RBRACE          reduce using rule 43 (expression -> expression LEQUAL expression .)
    LBRACE          reduce using rule 43 (expression -> expression LEQUAL expression .)
    COMMA           reduce using rule 43 (expression -> expression LEQUAL expression .)
    RPAREN          reduce using rule 43 (expression -> expression LEQUAL expression .)
    RBRACKET        reduce using rule 43 (expression -> expression LEQUAL expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79

  ! PLUS            [ reduce using rule 43 (expression -> expression LEQUAL expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression LEQUAL expression .) ]
  ! MULT            [ reduce using rule 43 (expression -> expression LEQUAL expression .) ]
  ! DIV             [ reduce using rule 43 (expression -> expression LEQUAL expression .) ]
  ! EXP             [ reduce using rule 43 (expression -> expression LEQUAL expression .) ]
  ! EQUALS          [ reduce using rule 43 (expression -> expression LEQUAL expression .) ]
  ! GREATER         [ reduce using rule 43 (expression -> expression LEQUAL expression .) ]
  ! LESS            [ reduce using rule 43 (expression -> expression LEQUAL expression .) ]
  ! GEQUAL          [ reduce using rule 43 (expression -> expression LEQUAL expression .) ]
  ! LEQUAL          [ reduce using rule 43 (expression -> expression LEQUAL expression .) ]
  ! NEQUAL          [ reduce using rule 43 (expression -> expression LEQUAL expression .) ]


state 110

    (44) expression -> expression NEQUAL expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 44 (expression -> expression NEQUAL expression .)
    CONST           reduce using rule 44 (expression -> expression NEQUAL expression .)
    DEF             reduce using rule 44 (expression -> expression NEQUAL expression .)
    RETURN          reduce using rule 44 (expression -> expression NEQUAL expression .)
    IF              reduce using rule 44 (expression -> expression NEQUAL expression .)
    WHILE           reduce using rule 44 (expression -> expression NEQUAL expression .)
    FOR             reduce using rule 44 (expression -> expression NEQUAL expression .)
    TYPE            reduce using rule 44 (expression -> expression NEQUAL expression .)
    UNTYPE          reduce using rule 44 (expression -> expression NEQUAL expression .)
    INTattr         reduce using rule 44 (expression -> expression NEQUAL expression .)
    FLOATattr       reduce using rule 44 (expression -> expression NEQUAL expression .)
    STRINGattr      reduce using rule 44 (expression -> expression NEQUAL expression .)
    BOOLattr        reduce using rule 44 (expression -> expression NEQUAL expression .)
    NULL            reduce using rule 44 (expression -> expression NEQUAL expression .)
    $end            reduce using rule 44 (expression -> expression NEQUAL expression .)
    RBRACE          reduce using rule 44 (expression -> expression NEQUAL expression .)
    LBRACE          reduce using rule 44 (expression -> expression NEQUAL expression .)
    COMMA           reduce using rule 44 (expression -> expression NEQUAL expression .)
    RPAREN          reduce using rule 44 (expression -> expression NEQUAL expression .)
    RBRACKET        reduce using rule 44 (expression -> expression NEQUAL expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79

  ! PLUS            [ reduce using rule 44 (expression -> expression NEQUAL expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression NEQUAL expression .) ]
  ! MULT            [ reduce using rule 44 (expression -> expression NEQUAL expression .) ]
  ! DIV             [ reduce using rule 44 (expression -> expression NEQUAL expression .) ]
  ! EXP             [ reduce using rule 44 (expression -> expression NEQUAL expression .) ]
  ! EQUALS          [ reduce using rule 44 (expression -> expression NEQUAL expression .) ]
  ! GREATER         [ reduce using rule 44 (expression -> expression NEQUAL expression .) ]
  ! LESS            [ reduce using rule 44 (expression -> expression NEQUAL expression .) ]
  ! GEQUAL          [ reduce using rule 44 (expression -> expression NEQUAL expression .) ]
  ! LEQUAL          [ reduce using rule 44 (expression -> expression NEQUAL expression .) ]
  ! NEQUAL          [ reduce using rule 44 (expression -> expression NEQUAL expression .) ]


state 111

    (45) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GEQUAL          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LEQUAL          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    NEQUAL          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    CONST           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    DEF             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    TYPE            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    UNTYPE          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    INTattr         reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    FLOATattr       reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    STRINGattr      reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    BOOLattr        reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    NULL            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 45 (expression -> LPAREN expression RPAREN .)


state 112

    (11) array_declaration -> LBRACKET array_elements RBRACKET .

    PLUS            reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    MINUS           reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    MULT            reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    DIV             reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    EXP             reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    EQUALS          reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    GREATER         reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    LESS            reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    GEQUAL          reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    LEQUAL          reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    NEQUAL          reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    ID              reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    CONST           reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    DEF             reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    RETURN          reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    IF              reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    WHILE           reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    FOR             reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    TYPE            reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    UNTYPE          reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    INTattr         reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    FLOATattr       reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    STRINGattr      reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    BOOLattr        reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    NULL            reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    $end            reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    RBRACE          reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    LBRACE          reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    COMMA           reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    RPAREN          reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)
    RBRACKET        reduce using rule 11 (array_declaration -> LBRACKET array_elements RBRACKET .)


state 113

    (13) array_elements -> expression COMMA . array_elements
    (12) array_elements -> . expression
    (13) array_elements -> . expression COMMA array_elements
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression MULT expression
    (37) expression -> . expression DIV expression
    (38) expression -> . expression EXP expression
    (39) expression -> . expression EQUALS expression
    (40) expression -> . expression GREATER expression
    (41) expression -> . expression LESS expression
    (42) expression -> . expression GEQUAL expression
    (43) expression -> . expression LEQUAL expression
    (44) expression -> . expression NEQUAL expression
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . NUMBER
    (47) expression -> . STRING
    (48) expression -> . FLOAT
    (49) expression -> . BOOL
    (50) expression -> . NULL
    (51) expression -> . id
    (52) expression -> . function_call
    (53) expression -> . array_declaration
    (54) expression -> . MINUS expression
    (67) id -> . ID
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (11) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 41
    NUMBER          shift and go to state 42
    STRING          shift and go to state 43
    FLOAT           shift and go to state 44
    BOOL            shift and go to state 45
    NULL            shift and go to state 46
    MINUS           shift and go to state 40
    ID              shift and go to state 50
    LBRACKET        shift and go to state 51

    expression                     shift and go to state 83
    array_elements                 shift and go to state 128
    id                             shift and go to state 47
    function_call                  shift and go to state 48
    array_declaration              shift and go to state 49

state 114

    (14) if_statement -> IF expression LBRACE statement_list . RBRACE
    (15) if_statement -> IF expression LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 129
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 115

    (16) if_statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE
    (17) if_statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (45) expression -> LPAREN expression RPAREN .

  ! shift/reduce conflict for LBRACE resolved as shift
    LBRACE          shift and go to state 130
    PLUS            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GEQUAL          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LEQUAL          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    NEQUAL          reduce using rule 45 (expression -> LPAREN expression RPAREN .)

  ! LBRACE          [ reduce using rule 45 (expression -> LPAREN expression RPAREN .) ]


state 116

    (18) if_statement -> WHILE expression LBRACE statement_list . RBRACE
    (19) if_statement -> WHILE expression LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 131
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 117

    (20) if_statement -> WHILE LPAREN expression RPAREN . LBRACE statement_list RBRACE
    (21) if_statement -> WHILE LPAREN expression RPAREN . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (45) expression -> LPAREN expression RPAREN .

  ! shift/reduce conflict for LBRACE resolved as shift
    LBRACE          shift and go to state 132
    PLUS            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GEQUAL          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LEQUAL          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    NEQUAL          reduce using rule 45 (expression -> LPAREN expression RPAREN .)

  ! LBRACE          [ reduce using rule 45 (expression -> LPAREN expression RPAREN .) ]


state 118

    (22) for_in_statement -> FOR id_list IN ID . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 133


state 119

    (24) id_list -> ID COMMA id_list .

    IN              reduce using rule 24 (id_list -> ID COMMA id_list .)


state 120

    (69) parameters -> expression COMMA parameters .

    RPAREN          reduce using rule 69 (parameters -> expression COMMA parameters .)


state 121

    (33) assignment -> CONST type_attr ID ASSIGN expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . MULT expression
    (37) expression -> expression . DIV expression
    (38) expression -> expression . EXP expression
    (39) expression -> expression . EQUALS expression
    (40) expression -> expression . GREATER expression
    (41) expression -> expression . LESS expression
    (42) expression -> expression . GEQUAL expression
    (43) expression -> expression . LEQUAL expression
    (44) expression -> expression . NEQUAL expression

    ID              reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    CONST           reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    DEF             reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    RETURN          reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    IF              reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    WHILE           reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    FOR             reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    TYPE            reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    UNTYPE          reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    INTattr         reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    FLOATattr       reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    STRINGattr      reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    BOOLattr        reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    NULL            reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    $end            reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    RBRACE          reduce using rule 33 (assignment -> CONST type_attr ID ASSIGN expression .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    MULT            shift and go to state 71
    DIV             shift and go to state 72
    EXP             shift and go to state 73
    EQUALS          shift and go to state 74
    GREATER         shift and go to state 75
    LESS            shift and go to state 76
    GEQUAL          shift and go to state 77
    LEQUAL          shift and go to state 78
    NEQUAL          shift and go to state 79


state 122

    (71) func_parameters -> ID COMMA . func_parameters
    (70) func_parameters -> . ID
    (71) func_parameters -> . ID COMMA func_parameters
    (72) func_parameters -> . type_attr ID
    (73) func_parameters -> . type_attr ID COMMA func_parameters
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 95
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    func_parameters                shift and go to state 134
    type_attr                      shift and go to state 98

state 123

    (61) function_declaration -> DEF ID LPAREN RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement_list                 shift and go to state 135
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 124

    (62) function_declaration -> DEF ID LPAREN func_parameters RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 136


state 125

    (72) func_parameters -> type_attr ID .
    (73) func_parameters -> type_attr ID . COMMA func_parameters

    RPAREN          reduce using rule 72 (func_parameters -> type_attr ID .)
    COMMA           shift and go to state 137


state 126

    (63) function_declaration -> DEF type_attr ID LPAREN RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 138


state 127

    (64) function_declaration -> DEF type_attr ID LPAREN func_parameters . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 139


state 128

    (13) array_elements -> expression COMMA array_elements .

    RBRACKET        reduce using rule 13 (array_elements -> expression COMMA array_elements .)


state 129

    (14) if_statement -> IF expression LBRACE statement_list RBRACE .
    (15) if_statement -> IF expression LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE

    ID              reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    CONST           reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    DEF             reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    IF              reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    FOR             reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    NULL            reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    $end            reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 140


state 130

    (16) if_statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (17) if_statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement_list                 shift and go to state 141
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 131

    (18) if_statement -> WHILE expression LBRACE statement_list RBRACE .
    (19) if_statement -> WHILE expression LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE

    ID              reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    CONST           reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    DEF             reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    IF              reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    FOR             reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    NULL            reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    $end            reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 18 (if_statement -> WHILE expression LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 142


state 132

    (20) if_statement -> WHILE LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (21) if_statement -> WHILE LPAREN expression RPAREN LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement_list                 shift and go to state 143
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 133

    (22) for_in_statement -> FOR id_list IN ID LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement_list                 shift and go to state 144
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 134

    (71) func_parameters -> ID COMMA func_parameters .

    RPAREN          reduce using rule 71 (func_parameters -> ID COMMA func_parameters .)


state 135

    (61) function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 145
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 136

    (62) function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement_list                 shift and go to state 146
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 137

    (73) func_parameters -> type_attr ID COMMA . func_parameters
    (70) func_parameters -> . ID
    (71) func_parameters -> . ID COMMA func_parameters
    (72) func_parameters -> . type_attr ID
    (73) func_parameters -> . type_attr ID COMMA func_parameters
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 95
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    type_attr                      shift and go to state 98
    func_parameters                shift and go to state 147

state 138

    (63) function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    type_attr                      shift and go to state 12
    statement_list                 shift and go to state 148
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10

state 139

    (64) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 149


state 140

    (15) if_statement -> IF expression LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 150


state 141

    (16) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (17) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 151
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 142

    (19) if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 152


state 143

    (20) if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (21) if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 153
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 144

    (22) for_in_statement -> FOR id_list IN ID LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 154
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 145

    (61) function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .

    ID              reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    CONST           reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    DEF             reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    NULL            reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 61 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)


state 146

    (62) function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 155
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 147

    (73) func_parameters -> type_attr ID COMMA func_parameters .

    RPAREN          reduce using rule 73 (func_parameters -> type_attr ID COMMA func_parameters .)


state 148

    (63) function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 156
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    type_attr                      shift and go to state 12
    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10

state 149

    (64) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    type_attr                      shift and go to state 12
    statement_list                 shift and go to state 157
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10

state 150

    (15) if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement_list                 shift and go to state 158
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 151

    (16) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .
    (17) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE

    ID              reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    CONST           reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    DEF             reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NULL            reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 16 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 159


state 152

    (19) if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement_list                 shift and go to state 160
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 153

    (20) if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .
    (21) if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE

    ID              reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    CONST           reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    DEF             reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NULL            reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 20 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 161


state 154

    (22) for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .

    ID              reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    CONST           reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    DEF             reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    IF              reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    FOR             reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    NULL            reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    $end            reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 22 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)


state 155

    (62) function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .

    ID              reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    CONST           reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    DEF             reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    NULL            reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 62 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)


state 156

    (63) function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .

    ID              reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    CONST           reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    DEF             reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    NULL            reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 63 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)


state 157

    (64) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 162
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    type_attr                      shift and go to state 12
    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10

state 158

    (15) if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 163
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 159

    (17) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 164


state 160

    (19) if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 165
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 161

    (21) if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 166


state 162

    (64) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .

    ID              reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    CONST           reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    DEF             reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    NULL            reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 64 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)


state 163

    (15) if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    ID              reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    CONST           reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    DEF             reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    NULL            reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 15 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)


state 164

    (17) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement_list                 shift and go to state 167
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 165

    (19) if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    ID              reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    CONST           reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    DEF             reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    NULL            reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 19 (if_statement -> WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)


state 166

    (21) if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement_list                 shift and go to state 168
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 167

    (17) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 169
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 168

    (21) if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (10) statement -> . typing
    (28) assignment -> . ID assignment_type expression
    (29) assignment -> . ID ADD
    (30) assignment -> . ID SUB
    (31) assignment -> . type_attr ID ASSIGN expression
    (32) assignment -> . CONST ID ASSIGN expression
    (33) assignment -> . CONST type_attr ID ASSIGN expression
    (61) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (62) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (63) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (64) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (55) return_statement -> . RETURN expression
    (65) function_call -> . ID LPAREN RPAREN
    (66) function_call -> . ID LPAREN parameters RPAREN
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE
    (15) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (16) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) if_statement -> . WHILE expression LBRACE statement_list RBRACE
    (19) if_statement -> . WHILE expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (20) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (21) if_statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (22) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (74) typing -> . TYPE ID
    (75) typing -> . UNTYPE ID
    (56) type_attr -> . INTattr
    (57) type_attr -> . FLOATattr
    (58) type_attr -> . STRINGattr
    (59) type_attr -> . BOOLattr
    (60) type_attr -> . NULL

    RBRACE          shift and go to state 170
    ID              shift and go to state 11
    CONST           shift and go to state 13
    DEF             shift and go to state 14
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TYPE            shift and go to state 19
    UNTYPE          shift and go to state 20
    INTattr         shift and go to state 21
    FLOATattr       shift and go to state 22
    STRINGattr      shift and go to state 23
    BOOLattr        shift and go to state 24
    NULL            shift and go to state 25

    statement                      shift and go to state 26
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    typing                         shift and go to state 10
    type_attr                      shift and go to state 12

state 169

    (17) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    ID              reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    CONST           reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    DEF             reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    NULL            reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 17 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)


state 170

    (21) if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    ID              reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    CONST           reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    DEF             reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    TYPE            reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    UNTYPE          reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    NULL            reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 21 (if_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MULT in state 104 resolved as shift
WARNING: shift/reduce conflict for DIV in state 104 resolved as shift
WARNING: shift/reduce conflict for EXP in state 104 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 104 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 104 resolved as shift
WARNING: shift/reduce conflict for LESS in state 104 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MULT in state 105 resolved as shift
WARNING: shift/reduce conflict for DIV in state 105 resolved as shift
WARNING: shift/reduce conflict for EXP in state 105 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 105 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 105 resolved as shift
WARNING: shift/reduce conflict for LESS in state 105 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MULT in state 106 resolved as shift
WARNING: shift/reduce conflict for DIV in state 106 resolved as shift
WARNING: shift/reduce conflict for EXP in state 106 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 106 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 106 resolved as shift
WARNING: shift/reduce conflict for LESS in state 106 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 106 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 106 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MULT in state 107 resolved as shift
WARNING: shift/reduce conflict for DIV in state 107 resolved as shift
WARNING: shift/reduce conflict for EXP in state 107 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 107 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 107 resolved as shift
WARNING: shift/reduce conflict for LESS in state 107 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 107 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 107 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MULT in state 108 resolved as shift
WARNING: shift/reduce conflict for DIV in state 108 resolved as shift
WARNING: shift/reduce conflict for EXP in state 108 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 108 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 108 resolved as shift
WARNING: shift/reduce conflict for LESS in state 108 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 108 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 108 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MULT in state 109 resolved as shift
WARNING: shift/reduce conflict for DIV in state 109 resolved as shift
WARNING: shift/reduce conflict for EXP in state 109 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 109 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 109 resolved as shift
WARNING: shift/reduce conflict for LESS in state 109 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MULT in state 110 resolved as shift
WARNING: shift/reduce conflict for DIV in state 110 resolved as shift
WARNING: shift/reduce conflict for EXP in state 110 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 110 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 110 resolved as shift
WARNING: shift/reduce conflict for LESS in state 110 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 110 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 110 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 110 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 115 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 117 resolved as shift
