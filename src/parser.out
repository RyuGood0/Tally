Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CLASS
    CONTINUE
    IMPORT
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> assignment
Rule 5     statement -> function_declaration
Rule 6     statement -> return_statement
Rule 7     statement -> function_call
Rule 8     statement -> if_statement
Rule 9     statement -> for_in_statement
Rule 10    array_declaration -> LBRACKET array_elements RBRACKET
Rule 11    array_elements -> expression
Rule 12    array_elements -> expression COMMA array_elements
Rule 13    if_statement -> IF expression LBRACE statement_list RBRACE
Rule 14    if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 15    for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE
Rule 16    id_list -> ID
Rule 17    id_list -> ID COMMA id_list
Rule 18    assignment_type -> ASSIGN
Rule 19    assignment_type -> PLUSEQUAL
Rule 20    assignment_type -> MINUSEQUAL
Rule 21    assignment -> ID assignment_type expression
Rule 22    assignment -> ID ADD
Rule 23    assignment -> ID SUB
Rule 24    assignment -> type_attr ID ASSIGN expression
Rule 25    assignment -> CONST ID ASSIGN expression
Rule 26    assignment -> CONST type_attr ID ASSIGN expression
Rule 27    expression -> expression PLUS expression
Rule 28    expression -> expression MINUS expression
Rule 29    expression -> expression MULT expression
Rule 30    expression -> expression DIV expression
Rule 31    expression -> expression EXP expression
Rule 32    expression -> expression EQUALS expression
Rule 33    expression -> expression GREATER expression
Rule 34    expression -> expression LESS expression
Rule 35    expression -> expression GEQUAL expression
Rule 36    expression -> expression LEQUAL expression
Rule 37    expression -> expression NEQUAL expression
Rule 38    expression -> LPAREN expression RPAREN
Rule 39    expression -> NUMBER
Rule 40    expression -> STRING
Rule 41    expression -> FLOAT
Rule 42    expression -> BOOL
Rule 43    expression -> NULL
Rule 44    expression -> id
Rule 45    expression -> function_call
Rule 46    expression -> array_declaration
Rule 47    expression -> MINUS expression
Rule 48    return_statement -> RETURN expression
Rule 49    type_attr -> INTattr
Rule 50    type_attr -> FLOATattr
Rule 51    type_attr -> STRINGattr
Rule 52    type_attr -> BOOLattr
Rule 53    type_attr -> NULL
Rule 54    function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
Rule 55    function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
Rule 56    function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
Rule 57    function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
Rule 58    function_call -> ID LPAREN RPAREN
Rule 59    function_call -> ID LPAREN parameters RPAREN
Rule 60    id -> ID
Rule 61    parameters -> expression
Rule 62    parameters -> expression COMMA parameters
Rule 63    func_parameters -> ID
Rule 64    func_parameters -> ID COMMA func_parameters
Rule 65    func_parameters -> type_attr ID
Rule 66    func_parameters -> type_attr ID COMMA func_parameters

Terminals, with rules where they appear

ADD                  : 22
ASSIGN               : 18 24 25 26
BOOL                 : 42
BOOLattr             : 52
BREAK                : 
CLASS                : 
COMMA                : 12 17 62 64 66
CONST                : 25 26
CONTINUE             : 
DEF                  : 54 55 56 57
DIV                  : 30
ELSE                 : 14
EQUALS               : 32
EXP                  : 31
FLOAT                : 41
FLOATattr            : 50
FOR                  : 15
GEQUAL               : 35
GREATER              : 33
ID                   : 15 16 17 21 22 23 24 25 26 54 55 56 57 58 59 60 63 64 65 66
IF                   : 13 14
IMPORT               : 
IN                   : 15
INTattr              : 49
LBRACE               : 13 14 14 15 54 55 56 57
LBRACKET             : 10
LEQUAL               : 36
LESS                 : 34
LPAREN               : 38 54 55 56 57 58 59
MINUS                : 28 47
MINUSEQUAL           : 20
MULT                 : 29
NEQUAL               : 37
NULL                 : 43 53
NUMBER               : 39
PLUS                 : 27
PLUSEQUAL            : 19
RBRACE               : 13 14 14 15 54 55 56 57
RBRACKET             : 10
RETURN               : 48
RPAREN               : 38 54 55 56 57 58 59
STRING               : 40
STRINGattr           : 51
SUB                  : 23
WHILE                : 
error                : 

Nonterminals, with rules where they appear

array_declaration    : 46
array_elements       : 10 12
assignment           : 4
assignment_type      : 21
expression           : 11 12 13 14 21 24 25 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 47 48 61 62
for_in_statement     : 9
func_parameters      : 55 57 64 66
function_call        : 7 45
function_declaration : 5
id                   : 44
id_list              : 15 17
if_statement         : 8
parameters           : 59 62
program              : 0
return_statement     : 6
statement            : 2 3
statement_list       : 1 3 13 14 14 15 54 55 56 57
type_attr            : 24 26 56 57 65 66

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    $end            reduce using rule 1 (program -> statement_list .)
    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    statement                      shift and go to state 22
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 3

    (2) statement_list -> statement .

    ID              reduce using rule 2 (statement_list -> statement .)
    CONST           reduce using rule 2 (statement_list -> statement .)
    DEF             reduce using rule 2 (statement_list -> statement .)
    RETURN          reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    FOR             reduce using rule 2 (statement_list -> statement .)
    INTattr         reduce using rule 2 (statement_list -> statement .)
    FLOATattr       reduce using rule 2 (statement_list -> statement .)
    STRINGattr      reduce using rule 2 (statement_list -> statement .)
    BOOLattr        reduce using rule 2 (statement_list -> statement .)
    NULL            reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> assignment .

    ID              reduce using rule 4 (statement -> assignment .)
    CONST           reduce using rule 4 (statement -> assignment .)
    DEF             reduce using rule 4 (statement -> assignment .)
    RETURN          reduce using rule 4 (statement -> assignment .)
    IF              reduce using rule 4 (statement -> assignment .)
    FOR             reduce using rule 4 (statement -> assignment .)
    INTattr         reduce using rule 4 (statement -> assignment .)
    FLOATattr       reduce using rule 4 (statement -> assignment .)
    STRINGattr      reduce using rule 4 (statement -> assignment .)
    BOOLattr        reduce using rule 4 (statement -> assignment .)
    NULL            reduce using rule 4 (statement -> assignment .)
    $end            reduce using rule 4 (statement -> assignment .)
    RBRACE          reduce using rule 4 (statement -> assignment .)


state 5

    (5) statement -> function_declaration .

    ID              reduce using rule 5 (statement -> function_declaration .)
    CONST           reduce using rule 5 (statement -> function_declaration .)
    DEF             reduce using rule 5 (statement -> function_declaration .)
    RETURN          reduce using rule 5 (statement -> function_declaration .)
    IF              reduce using rule 5 (statement -> function_declaration .)
    FOR             reduce using rule 5 (statement -> function_declaration .)
    INTattr         reduce using rule 5 (statement -> function_declaration .)
    FLOATattr       reduce using rule 5 (statement -> function_declaration .)
    STRINGattr      reduce using rule 5 (statement -> function_declaration .)
    BOOLattr        reduce using rule 5 (statement -> function_declaration .)
    NULL            reduce using rule 5 (statement -> function_declaration .)
    $end            reduce using rule 5 (statement -> function_declaration .)
    RBRACE          reduce using rule 5 (statement -> function_declaration .)


state 6

    (6) statement -> return_statement .

    ID              reduce using rule 6 (statement -> return_statement .)
    CONST           reduce using rule 6 (statement -> return_statement .)
    DEF             reduce using rule 6 (statement -> return_statement .)
    RETURN          reduce using rule 6 (statement -> return_statement .)
    IF              reduce using rule 6 (statement -> return_statement .)
    FOR             reduce using rule 6 (statement -> return_statement .)
    INTattr         reduce using rule 6 (statement -> return_statement .)
    FLOATattr       reduce using rule 6 (statement -> return_statement .)
    STRINGattr      reduce using rule 6 (statement -> return_statement .)
    BOOLattr        reduce using rule 6 (statement -> return_statement .)
    NULL            reduce using rule 6 (statement -> return_statement .)
    $end            reduce using rule 6 (statement -> return_statement .)
    RBRACE          reduce using rule 6 (statement -> return_statement .)


state 7

    (7) statement -> function_call .

    ID              reduce using rule 7 (statement -> function_call .)
    CONST           reduce using rule 7 (statement -> function_call .)
    DEF             reduce using rule 7 (statement -> function_call .)
    RETURN          reduce using rule 7 (statement -> function_call .)
    IF              reduce using rule 7 (statement -> function_call .)
    FOR             reduce using rule 7 (statement -> function_call .)
    INTattr         reduce using rule 7 (statement -> function_call .)
    FLOATattr       reduce using rule 7 (statement -> function_call .)
    STRINGattr      reduce using rule 7 (statement -> function_call .)
    BOOLattr        reduce using rule 7 (statement -> function_call .)
    NULL            reduce using rule 7 (statement -> function_call .)
    $end            reduce using rule 7 (statement -> function_call .)
    RBRACE          reduce using rule 7 (statement -> function_call .)


state 8

    (8) statement -> if_statement .

    ID              reduce using rule 8 (statement -> if_statement .)
    CONST           reduce using rule 8 (statement -> if_statement .)
    DEF             reduce using rule 8 (statement -> if_statement .)
    RETURN          reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    FOR             reduce using rule 8 (statement -> if_statement .)
    INTattr         reduce using rule 8 (statement -> if_statement .)
    FLOATattr       reduce using rule 8 (statement -> if_statement .)
    STRINGattr      reduce using rule 8 (statement -> if_statement .)
    BOOLattr        reduce using rule 8 (statement -> if_statement .)
    NULL            reduce using rule 8 (statement -> if_statement .)
    $end            reduce using rule 8 (statement -> if_statement .)
    RBRACE          reduce using rule 8 (statement -> if_statement .)


state 9

    (9) statement -> for_in_statement .

    ID              reduce using rule 9 (statement -> for_in_statement .)
    CONST           reduce using rule 9 (statement -> for_in_statement .)
    DEF             reduce using rule 9 (statement -> for_in_statement .)
    RETURN          reduce using rule 9 (statement -> for_in_statement .)
    IF              reduce using rule 9 (statement -> for_in_statement .)
    FOR             reduce using rule 9 (statement -> for_in_statement .)
    INTattr         reduce using rule 9 (statement -> for_in_statement .)
    FLOATattr       reduce using rule 9 (statement -> for_in_statement .)
    STRINGattr      reduce using rule 9 (statement -> for_in_statement .)
    BOOLattr        reduce using rule 9 (statement -> for_in_statement .)
    NULL            reduce using rule 9 (statement -> for_in_statement .)
    $end            reduce using rule 9 (statement -> for_in_statement .)
    RBRACE          reduce using rule 9 (statement -> for_in_statement .)


state 10

    (21) assignment -> ID . assignment_type expression
    (22) assignment -> ID . ADD
    (23) assignment -> ID . SUB
    (58) function_call -> ID . LPAREN RPAREN
    (59) function_call -> ID . LPAREN parameters RPAREN
    (18) assignment_type -> . ASSIGN
    (19) assignment_type -> . PLUSEQUAL
    (20) assignment_type -> . MINUSEQUAL

    ADD             shift and go to state 24
    SUB             shift and go to state 25
    LPAREN          shift and go to state 26
    ASSIGN          shift and go to state 27
    PLUSEQUAL       shift and go to state 28
    MINUSEQUAL      shift and go to state 29

    assignment_type                shift and go to state 23

state 11

    (24) assignment -> type_attr . ID ASSIGN expression

    ID              shift and go to state 30


state 12

    (25) assignment -> CONST . ID ASSIGN expression
    (26) assignment -> CONST . type_attr ID ASSIGN expression
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 31
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    type_attr                      shift and go to state 32

state 13

    (54) function_declaration -> DEF . ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> DEF . ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> DEF . type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> DEF . type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 33
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    type_attr                      shift and go to state 34

state 14

    (48) return_statement -> RETURN . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 35
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 15

    (13) if_statement -> IF . expression LBRACE statement_list RBRACE
    (14) if_statement -> IF . expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 48
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 16

    (15) for_in_statement -> FOR . id_list IN ID LBRACE statement_list RBRACE
    (16) id_list -> . ID
    (17) id_list -> . ID COMMA id_list

    ID              shift and go to state 50

    id_list                        shift and go to state 49

state 17

    (49) type_attr -> INTattr .

    ID              reduce using rule 49 (type_attr -> INTattr .)


state 18

    (50) type_attr -> FLOATattr .

    ID              reduce using rule 50 (type_attr -> FLOATattr .)


state 19

    (51) type_attr -> STRINGattr .

    ID              reduce using rule 51 (type_attr -> STRINGattr .)


state 20

    (52) type_attr -> BOOLattr .

    ID              reduce using rule 52 (type_attr -> BOOLattr .)


state 21

    (53) type_attr -> NULL .

    ID              reduce using rule 53 (type_attr -> NULL .)


state 22

    (3) statement_list -> statement_list statement .

    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    CONST           reduce using rule 3 (statement_list -> statement_list statement .)
    DEF             reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    FOR             reduce using rule 3 (statement_list -> statement_list statement .)
    INTattr         reduce using rule 3 (statement_list -> statement_list statement .)
    FLOATattr       reduce using rule 3 (statement_list -> statement_list statement .)
    STRINGattr      reduce using rule 3 (statement_list -> statement_list statement .)
    BOOLattr        reduce using rule 3 (statement_list -> statement_list statement .)
    NULL            reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)


state 23

    (21) assignment -> ID assignment_type . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 51
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 24

    (22) assignment -> ID ADD .

    ID              reduce using rule 22 (assignment -> ID ADD .)
    CONST           reduce using rule 22 (assignment -> ID ADD .)
    DEF             reduce using rule 22 (assignment -> ID ADD .)
    RETURN          reduce using rule 22 (assignment -> ID ADD .)
    IF              reduce using rule 22 (assignment -> ID ADD .)
    FOR             reduce using rule 22 (assignment -> ID ADD .)
    INTattr         reduce using rule 22 (assignment -> ID ADD .)
    FLOATattr       reduce using rule 22 (assignment -> ID ADD .)
    STRINGattr      reduce using rule 22 (assignment -> ID ADD .)
    BOOLattr        reduce using rule 22 (assignment -> ID ADD .)
    NULL            reduce using rule 22 (assignment -> ID ADD .)
    $end            reduce using rule 22 (assignment -> ID ADD .)
    RBRACE          reduce using rule 22 (assignment -> ID ADD .)


state 25

    (23) assignment -> ID SUB .

    ID              reduce using rule 23 (assignment -> ID SUB .)
    CONST           reduce using rule 23 (assignment -> ID SUB .)
    DEF             reduce using rule 23 (assignment -> ID SUB .)
    RETURN          reduce using rule 23 (assignment -> ID SUB .)
    IF              reduce using rule 23 (assignment -> ID SUB .)
    FOR             reduce using rule 23 (assignment -> ID SUB .)
    INTattr         reduce using rule 23 (assignment -> ID SUB .)
    FLOATattr       reduce using rule 23 (assignment -> ID SUB .)
    STRINGattr      reduce using rule 23 (assignment -> ID SUB .)
    BOOLattr        reduce using rule 23 (assignment -> ID SUB .)
    NULL            reduce using rule 23 (assignment -> ID SUB .)
    $end            reduce using rule 23 (assignment -> ID SUB .)
    RBRACE          reduce using rule 23 (assignment -> ID SUB .)


state 26

    (58) function_call -> ID LPAREN . RPAREN
    (59) function_call -> ID LPAREN . parameters RPAREN
    (61) parameters -> . expression
    (62) parameters -> . expression COMMA parameters
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    RPAREN          shift and go to state 52
    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    parameters                     shift and go to state 53
    expression                     shift and go to state 54
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 27

    (18) assignment_type -> ASSIGN .

    LPAREN          reduce using rule 18 (assignment_type -> ASSIGN .)
    NUMBER          reduce using rule 18 (assignment_type -> ASSIGN .)
    STRING          reduce using rule 18 (assignment_type -> ASSIGN .)
    FLOAT           reduce using rule 18 (assignment_type -> ASSIGN .)
    BOOL            reduce using rule 18 (assignment_type -> ASSIGN .)
    NULL            reduce using rule 18 (assignment_type -> ASSIGN .)
    MINUS           reduce using rule 18 (assignment_type -> ASSIGN .)
    ID              reduce using rule 18 (assignment_type -> ASSIGN .)
    LBRACKET        reduce using rule 18 (assignment_type -> ASSIGN .)


state 28

    (19) assignment_type -> PLUSEQUAL .

    LPAREN          reduce using rule 19 (assignment_type -> PLUSEQUAL .)
    NUMBER          reduce using rule 19 (assignment_type -> PLUSEQUAL .)
    STRING          reduce using rule 19 (assignment_type -> PLUSEQUAL .)
    FLOAT           reduce using rule 19 (assignment_type -> PLUSEQUAL .)
    BOOL            reduce using rule 19 (assignment_type -> PLUSEQUAL .)
    NULL            reduce using rule 19 (assignment_type -> PLUSEQUAL .)
    MINUS           reduce using rule 19 (assignment_type -> PLUSEQUAL .)
    ID              reduce using rule 19 (assignment_type -> PLUSEQUAL .)
    LBRACKET        reduce using rule 19 (assignment_type -> PLUSEQUAL .)


state 29

    (20) assignment_type -> MINUSEQUAL .

    LPAREN          reduce using rule 20 (assignment_type -> MINUSEQUAL .)
    NUMBER          reduce using rule 20 (assignment_type -> MINUSEQUAL .)
    STRING          reduce using rule 20 (assignment_type -> MINUSEQUAL .)
    FLOAT           reduce using rule 20 (assignment_type -> MINUSEQUAL .)
    BOOL            reduce using rule 20 (assignment_type -> MINUSEQUAL .)
    NULL            reduce using rule 20 (assignment_type -> MINUSEQUAL .)
    MINUS           reduce using rule 20 (assignment_type -> MINUSEQUAL .)
    ID              reduce using rule 20 (assignment_type -> MINUSEQUAL .)
    LBRACKET        reduce using rule 20 (assignment_type -> MINUSEQUAL .)


state 30

    (24) assignment -> type_attr ID . ASSIGN expression

    ASSIGN          shift and go to state 55


state 31

    (25) assignment -> CONST ID . ASSIGN expression

    ASSIGN          shift and go to state 56


state 32

    (26) assignment -> CONST type_attr . ID ASSIGN expression

    ID              shift and go to state 57


state 33

    (54) function_declaration -> DEF ID . LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> DEF ID . LPAREN func_parameters RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 58


state 34

    (56) function_declaration -> DEF type_attr . ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> DEF type_attr . ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE

    ID              shift and go to state 59


state 35

    (48) return_statement -> RETURN expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    ID              reduce using rule 48 (return_statement -> RETURN expression .)
    CONST           reduce using rule 48 (return_statement -> RETURN expression .)
    DEF             reduce using rule 48 (return_statement -> RETURN expression .)
    RETURN          reduce using rule 48 (return_statement -> RETURN expression .)
    IF              reduce using rule 48 (return_statement -> RETURN expression .)
    FOR             reduce using rule 48 (return_statement -> RETURN expression .)
    INTattr         reduce using rule 48 (return_statement -> RETURN expression .)
    FLOATattr       reduce using rule 48 (return_statement -> RETURN expression .)
    STRINGattr      reduce using rule 48 (return_statement -> RETURN expression .)
    BOOLattr        reduce using rule 48 (return_statement -> RETURN expression .)
    NULL            reduce using rule 48 (return_statement -> RETURN expression .)
    $end            reduce using rule 48 (return_statement -> RETURN expression .)
    RBRACE          reduce using rule 48 (return_statement -> RETURN expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70


state 36

    (47) expression -> MINUS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 71
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 37

    (38) expression -> LPAREN . expression RPAREN
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 72
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 38

    (39) expression -> NUMBER .

    PLUS            reduce using rule 39 (expression -> NUMBER .)
    MINUS           reduce using rule 39 (expression -> NUMBER .)
    MULT            reduce using rule 39 (expression -> NUMBER .)
    DIV             reduce using rule 39 (expression -> NUMBER .)
    EXP             reduce using rule 39 (expression -> NUMBER .)
    EQUALS          reduce using rule 39 (expression -> NUMBER .)
    GREATER         reduce using rule 39 (expression -> NUMBER .)
    LESS            reduce using rule 39 (expression -> NUMBER .)
    GEQUAL          reduce using rule 39 (expression -> NUMBER .)
    LEQUAL          reduce using rule 39 (expression -> NUMBER .)
    NEQUAL          reduce using rule 39 (expression -> NUMBER .)
    ID              reduce using rule 39 (expression -> NUMBER .)
    CONST           reduce using rule 39 (expression -> NUMBER .)
    DEF             reduce using rule 39 (expression -> NUMBER .)
    RETURN          reduce using rule 39 (expression -> NUMBER .)
    IF              reduce using rule 39 (expression -> NUMBER .)
    FOR             reduce using rule 39 (expression -> NUMBER .)
    INTattr         reduce using rule 39 (expression -> NUMBER .)
    FLOATattr       reduce using rule 39 (expression -> NUMBER .)
    STRINGattr      reduce using rule 39 (expression -> NUMBER .)
    BOOLattr        reduce using rule 39 (expression -> NUMBER .)
    NULL            reduce using rule 39 (expression -> NUMBER .)
    $end            reduce using rule 39 (expression -> NUMBER .)
    RBRACE          reduce using rule 39 (expression -> NUMBER .)
    LBRACE          reduce using rule 39 (expression -> NUMBER .)
    COMMA           reduce using rule 39 (expression -> NUMBER .)
    RPAREN          reduce using rule 39 (expression -> NUMBER .)
    RBRACKET        reduce using rule 39 (expression -> NUMBER .)


state 39

    (40) expression -> STRING .

    PLUS            reduce using rule 40 (expression -> STRING .)
    MINUS           reduce using rule 40 (expression -> STRING .)
    MULT            reduce using rule 40 (expression -> STRING .)
    DIV             reduce using rule 40 (expression -> STRING .)
    EXP             reduce using rule 40 (expression -> STRING .)
    EQUALS          reduce using rule 40 (expression -> STRING .)
    GREATER         reduce using rule 40 (expression -> STRING .)
    LESS            reduce using rule 40 (expression -> STRING .)
    GEQUAL          reduce using rule 40 (expression -> STRING .)
    LEQUAL          reduce using rule 40 (expression -> STRING .)
    NEQUAL          reduce using rule 40 (expression -> STRING .)
    ID              reduce using rule 40 (expression -> STRING .)
    CONST           reduce using rule 40 (expression -> STRING .)
    DEF             reduce using rule 40 (expression -> STRING .)
    RETURN          reduce using rule 40 (expression -> STRING .)
    IF              reduce using rule 40 (expression -> STRING .)
    FOR             reduce using rule 40 (expression -> STRING .)
    INTattr         reduce using rule 40 (expression -> STRING .)
    FLOATattr       reduce using rule 40 (expression -> STRING .)
    STRINGattr      reduce using rule 40 (expression -> STRING .)
    BOOLattr        reduce using rule 40 (expression -> STRING .)
    NULL            reduce using rule 40 (expression -> STRING .)
    $end            reduce using rule 40 (expression -> STRING .)
    RBRACE          reduce using rule 40 (expression -> STRING .)
    LBRACE          reduce using rule 40 (expression -> STRING .)
    COMMA           reduce using rule 40 (expression -> STRING .)
    RPAREN          reduce using rule 40 (expression -> STRING .)
    RBRACKET        reduce using rule 40 (expression -> STRING .)


state 40

    (41) expression -> FLOAT .

    PLUS            reduce using rule 41 (expression -> FLOAT .)
    MINUS           reduce using rule 41 (expression -> FLOAT .)
    MULT            reduce using rule 41 (expression -> FLOAT .)
    DIV             reduce using rule 41 (expression -> FLOAT .)
    EXP             reduce using rule 41 (expression -> FLOAT .)
    EQUALS          reduce using rule 41 (expression -> FLOAT .)
    GREATER         reduce using rule 41 (expression -> FLOAT .)
    LESS            reduce using rule 41 (expression -> FLOAT .)
    GEQUAL          reduce using rule 41 (expression -> FLOAT .)
    LEQUAL          reduce using rule 41 (expression -> FLOAT .)
    NEQUAL          reduce using rule 41 (expression -> FLOAT .)
    ID              reduce using rule 41 (expression -> FLOAT .)
    CONST           reduce using rule 41 (expression -> FLOAT .)
    DEF             reduce using rule 41 (expression -> FLOAT .)
    RETURN          reduce using rule 41 (expression -> FLOAT .)
    IF              reduce using rule 41 (expression -> FLOAT .)
    FOR             reduce using rule 41 (expression -> FLOAT .)
    INTattr         reduce using rule 41 (expression -> FLOAT .)
    FLOATattr       reduce using rule 41 (expression -> FLOAT .)
    STRINGattr      reduce using rule 41 (expression -> FLOAT .)
    BOOLattr        reduce using rule 41 (expression -> FLOAT .)
    NULL            reduce using rule 41 (expression -> FLOAT .)
    $end            reduce using rule 41 (expression -> FLOAT .)
    RBRACE          reduce using rule 41 (expression -> FLOAT .)
    LBRACE          reduce using rule 41 (expression -> FLOAT .)
    COMMA           reduce using rule 41 (expression -> FLOAT .)
    RPAREN          reduce using rule 41 (expression -> FLOAT .)
    RBRACKET        reduce using rule 41 (expression -> FLOAT .)


state 41

    (42) expression -> BOOL .

    PLUS            reduce using rule 42 (expression -> BOOL .)
    MINUS           reduce using rule 42 (expression -> BOOL .)
    MULT            reduce using rule 42 (expression -> BOOL .)
    DIV             reduce using rule 42 (expression -> BOOL .)
    EXP             reduce using rule 42 (expression -> BOOL .)
    EQUALS          reduce using rule 42 (expression -> BOOL .)
    GREATER         reduce using rule 42 (expression -> BOOL .)
    LESS            reduce using rule 42 (expression -> BOOL .)
    GEQUAL          reduce using rule 42 (expression -> BOOL .)
    LEQUAL          reduce using rule 42 (expression -> BOOL .)
    NEQUAL          reduce using rule 42 (expression -> BOOL .)
    ID              reduce using rule 42 (expression -> BOOL .)
    CONST           reduce using rule 42 (expression -> BOOL .)
    DEF             reduce using rule 42 (expression -> BOOL .)
    RETURN          reduce using rule 42 (expression -> BOOL .)
    IF              reduce using rule 42 (expression -> BOOL .)
    FOR             reduce using rule 42 (expression -> BOOL .)
    INTattr         reduce using rule 42 (expression -> BOOL .)
    FLOATattr       reduce using rule 42 (expression -> BOOL .)
    STRINGattr      reduce using rule 42 (expression -> BOOL .)
    BOOLattr        reduce using rule 42 (expression -> BOOL .)
    NULL            reduce using rule 42 (expression -> BOOL .)
    $end            reduce using rule 42 (expression -> BOOL .)
    RBRACE          reduce using rule 42 (expression -> BOOL .)
    LBRACE          reduce using rule 42 (expression -> BOOL .)
    COMMA           reduce using rule 42 (expression -> BOOL .)
    RPAREN          reduce using rule 42 (expression -> BOOL .)
    RBRACKET        reduce using rule 42 (expression -> BOOL .)


state 42

    (43) expression -> NULL .

    PLUS            reduce using rule 43 (expression -> NULL .)
    MINUS           reduce using rule 43 (expression -> NULL .)
    MULT            reduce using rule 43 (expression -> NULL .)
    DIV             reduce using rule 43 (expression -> NULL .)
    EXP             reduce using rule 43 (expression -> NULL .)
    EQUALS          reduce using rule 43 (expression -> NULL .)
    GREATER         reduce using rule 43 (expression -> NULL .)
    LESS            reduce using rule 43 (expression -> NULL .)
    GEQUAL          reduce using rule 43 (expression -> NULL .)
    LEQUAL          reduce using rule 43 (expression -> NULL .)
    NEQUAL          reduce using rule 43 (expression -> NULL .)
    ID              reduce using rule 43 (expression -> NULL .)
    CONST           reduce using rule 43 (expression -> NULL .)
    DEF             reduce using rule 43 (expression -> NULL .)
    RETURN          reduce using rule 43 (expression -> NULL .)
    IF              reduce using rule 43 (expression -> NULL .)
    FOR             reduce using rule 43 (expression -> NULL .)
    INTattr         reduce using rule 43 (expression -> NULL .)
    FLOATattr       reduce using rule 43 (expression -> NULL .)
    STRINGattr      reduce using rule 43 (expression -> NULL .)
    BOOLattr        reduce using rule 43 (expression -> NULL .)
    NULL            reduce using rule 43 (expression -> NULL .)
    $end            reduce using rule 43 (expression -> NULL .)
    RBRACE          reduce using rule 43 (expression -> NULL .)
    LBRACE          reduce using rule 43 (expression -> NULL .)
    COMMA           reduce using rule 43 (expression -> NULL .)
    RPAREN          reduce using rule 43 (expression -> NULL .)
    RBRACKET        reduce using rule 43 (expression -> NULL .)


state 43

    (44) expression -> id .

    PLUS            reduce using rule 44 (expression -> id .)
    MINUS           reduce using rule 44 (expression -> id .)
    MULT            reduce using rule 44 (expression -> id .)
    DIV             reduce using rule 44 (expression -> id .)
    EXP             reduce using rule 44 (expression -> id .)
    EQUALS          reduce using rule 44 (expression -> id .)
    GREATER         reduce using rule 44 (expression -> id .)
    LESS            reduce using rule 44 (expression -> id .)
    GEQUAL          reduce using rule 44 (expression -> id .)
    LEQUAL          reduce using rule 44 (expression -> id .)
    NEQUAL          reduce using rule 44 (expression -> id .)
    ID              reduce using rule 44 (expression -> id .)
    CONST           reduce using rule 44 (expression -> id .)
    DEF             reduce using rule 44 (expression -> id .)
    RETURN          reduce using rule 44 (expression -> id .)
    IF              reduce using rule 44 (expression -> id .)
    FOR             reduce using rule 44 (expression -> id .)
    INTattr         reduce using rule 44 (expression -> id .)
    FLOATattr       reduce using rule 44 (expression -> id .)
    STRINGattr      reduce using rule 44 (expression -> id .)
    BOOLattr        reduce using rule 44 (expression -> id .)
    NULL            reduce using rule 44 (expression -> id .)
    $end            reduce using rule 44 (expression -> id .)
    RBRACE          reduce using rule 44 (expression -> id .)
    LBRACE          reduce using rule 44 (expression -> id .)
    COMMA           reduce using rule 44 (expression -> id .)
    RPAREN          reduce using rule 44 (expression -> id .)
    RBRACKET        reduce using rule 44 (expression -> id .)


state 44

    (45) expression -> function_call .

    PLUS            reduce using rule 45 (expression -> function_call .)
    MINUS           reduce using rule 45 (expression -> function_call .)
    MULT            reduce using rule 45 (expression -> function_call .)
    DIV             reduce using rule 45 (expression -> function_call .)
    EXP             reduce using rule 45 (expression -> function_call .)
    EQUALS          reduce using rule 45 (expression -> function_call .)
    GREATER         reduce using rule 45 (expression -> function_call .)
    LESS            reduce using rule 45 (expression -> function_call .)
    GEQUAL          reduce using rule 45 (expression -> function_call .)
    LEQUAL          reduce using rule 45 (expression -> function_call .)
    NEQUAL          reduce using rule 45 (expression -> function_call .)
    ID              reduce using rule 45 (expression -> function_call .)
    CONST           reduce using rule 45 (expression -> function_call .)
    DEF             reduce using rule 45 (expression -> function_call .)
    RETURN          reduce using rule 45 (expression -> function_call .)
    IF              reduce using rule 45 (expression -> function_call .)
    FOR             reduce using rule 45 (expression -> function_call .)
    INTattr         reduce using rule 45 (expression -> function_call .)
    FLOATattr       reduce using rule 45 (expression -> function_call .)
    STRINGattr      reduce using rule 45 (expression -> function_call .)
    BOOLattr        reduce using rule 45 (expression -> function_call .)
    NULL            reduce using rule 45 (expression -> function_call .)
    $end            reduce using rule 45 (expression -> function_call .)
    RBRACE          reduce using rule 45 (expression -> function_call .)
    LBRACE          reduce using rule 45 (expression -> function_call .)
    COMMA           reduce using rule 45 (expression -> function_call .)
    RPAREN          reduce using rule 45 (expression -> function_call .)
    RBRACKET        reduce using rule 45 (expression -> function_call .)


state 45

    (46) expression -> array_declaration .

    PLUS            reduce using rule 46 (expression -> array_declaration .)
    MINUS           reduce using rule 46 (expression -> array_declaration .)
    MULT            reduce using rule 46 (expression -> array_declaration .)
    DIV             reduce using rule 46 (expression -> array_declaration .)
    EXP             reduce using rule 46 (expression -> array_declaration .)
    EQUALS          reduce using rule 46 (expression -> array_declaration .)
    GREATER         reduce using rule 46 (expression -> array_declaration .)
    LESS            reduce using rule 46 (expression -> array_declaration .)
    GEQUAL          reduce using rule 46 (expression -> array_declaration .)
    LEQUAL          reduce using rule 46 (expression -> array_declaration .)
    NEQUAL          reduce using rule 46 (expression -> array_declaration .)
    ID              reduce using rule 46 (expression -> array_declaration .)
    CONST           reduce using rule 46 (expression -> array_declaration .)
    DEF             reduce using rule 46 (expression -> array_declaration .)
    RETURN          reduce using rule 46 (expression -> array_declaration .)
    IF              reduce using rule 46 (expression -> array_declaration .)
    FOR             reduce using rule 46 (expression -> array_declaration .)
    INTattr         reduce using rule 46 (expression -> array_declaration .)
    FLOATattr       reduce using rule 46 (expression -> array_declaration .)
    STRINGattr      reduce using rule 46 (expression -> array_declaration .)
    BOOLattr        reduce using rule 46 (expression -> array_declaration .)
    NULL            reduce using rule 46 (expression -> array_declaration .)
    $end            reduce using rule 46 (expression -> array_declaration .)
    RBRACE          reduce using rule 46 (expression -> array_declaration .)
    LBRACE          reduce using rule 46 (expression -> array_declaration .)
    COMMA           reduce using rule 46 (expression -> array_declaration .)
    RPAREN          reduce using rule 46 (expression -> array_declaration .)
    RBRACKET        reduce using rule 46 (expression -> array_declaration .)


state 46

    (60) id -> ID .
    (58) function_call -> ID . LPAREN RPAREN
    (59) function_call -> ID . LPAREN parameters RPAREN

    PLUS            reduce using rule 60 (id -> ID .)
    MINUS           reduce using rule 60 (id -> ID .)
    MULT            reduce using rule 60 (id -> ID .)
    DIV             reduce using rule 60 (id -> ID .)
    EXP             reduce using rule 60 (id -> ID .)
    EQUALS          reduce using rule 60 (id -> ID .)
    GREATER         reduce using rule 60 (id -> ID .)
    LESS            reduce using rule 60 (id -> ID .)
    GEQUAL          reduce using rule 60 (id -> ID .)
    LEQUAL          reduce using rule 60 (id -> ID .)
    NEQUAL          reduce using rule 60 (id -> ID .)
    ID              reduce using rule 60 (id -> ID .)
    CONST           reduce using rule 60 (id -> ID .)
    DEF             reduce using rule 60 (id -> ID .)
    RETURN          reduce using rule 60 (id -> ID .)
    IF              reduce using rule 60 (id -> ID .)
    FOR             reduce using rule 60 (id -> ID .)
    INTattr         reduce using rule 60 (id -> ID .)
    FLOATattr       reduce using rule 60 (id -> ID .)
    STRINGattr      reduce using rule 60 (id -> ID .)
    BOOLattr        reduce using rule 60 (id -> ID .)
    NULL            reduce using rule 60 (id -> ID .)
    $end            reduce using rule 60 (id -> ID .)
    RBRACE          reduce using rule 60 (id -> ID .)
    LBRACE          reduce using rule 60 (id -> ID .)
    COMMA           reduce using rule 60 (id -> ID .)
    RPAREN          reduce using rule 60 (id -> ID .)
    RBRACKET        reduce using rule 60 (id -> ID .)
    LPAREN          shift and go to state 26


state 47

    (10) array_declaration -> LBRACKET . array_elements RBRACKET
    (11) array_elements -> . expression
    (12) array_elements -> . expression COMMA array_elements
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    array_elements                 shift and go to state 73
    expression                     shift and go to state 74
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 48

    (13) if_statement -> IF expression . LBRACE statement_list RBRACE
    (14) if_statement -> IF expression . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    LBRACE          shift and go to state 75
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70


state 49

    (15) for_in_statement -> FOR id_list . IN ID LBRACE statement_list RBRACE

    IN              shift and go to state 76


state 50

    (16) id_list -> ID .
    (17) id_list -> ID . COMMA id_list

    IN              reduce using rule 16 (id_list -> ID .)
    COMMA           shift and go to state 77


state 51

    (21) assignment -> ID assignment_type expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    ID              reduce using rule 21 (assignment -> ID assignment_type expression .)
    CONST           reduce using rule 21 (assignment -> ID assignment_type expression .)
    DEF             reduce using rule 21 (assignment -> ID assignment_type expression .)
    RETURN          reduce using rule 21 (assignment -> ID assignment_type expression .)
    IF              reduce using rule 21 (assignment -> ID assignment_type expression .)
    FOR             reduce using rule 21 (assignment -> ID assignment_type expression .)
    INTattr         reduce using rule 21 (assignment -> ID assignment_type expression .)
    FLOATattr       reduce using rule 21 (assignment -> ID assignment_type expression .)
    STRINGattr      reduce using rule 21 (assignment -> ID assignment_type expression .)
    BOOLattr        reduce using rule 21 (assignment -> ID assignment_type expression .)
    NULL            reduce using rule 21 (assignment -> ID assignment_type expression .)
    $end            reduce using rule 21 (assignment -> ID assignment_type expression .)
    RBRACE          reduce using rule 21 (assignment -> ID assignment_type expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70


state 52

    (58) function_call -> ID LPAREN RPAREN .

    ID              reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    CONST           reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    DEF             reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    IF              reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    FOR             reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    INTattr         reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    FLOATattr       reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    STRINGattr      reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    BOOLattr        reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    NULL            reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    $end            reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    MULT            reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    DIV             reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    EXP             reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    EQUALS          reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    GREATER         reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    LESS            reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    GEQUAL          reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    LEQUAL          reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    NEQUAL          reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    LBRACE          reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 58 (function_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 58 (function_call -> ID LPAREN RPAREN .)


state 53

    (59) function_call -> ID LPAREN parameters . RPAREN

    RPAREN          shift and go to state 78


state 54

    (61) parameters -> expression .
    (62) parameters -> expression . COMMA parameters
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    RPAREN          reduce using rule 61 (parameters -> expression .)
    COMMA           shift and go to state 79
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70


state 55

    (24) assignment -> type_attr ID ASSIGN . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 80
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 56

    (25) assignment -> CONST ID ASSIGN . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 81
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 57

    (26) assignment -> CONST type_attr ID . ASSIGN expression

    ASSIGN          shift and go to state 82


state 58

    (54) function_declaration -> DEF ID LPAREN . RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> DEF ID LPAREN . func_parameters RPAREN LBRACE statement_list RBRACE
    (63) func_parameters -> . ID
    (64) func_parameters -> . ID COMMA func_parameters
    (65) func_parameters -> . type_attr ID
    (66) func_parameters -> . type_attr ID COMMA func_parameters
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    RPAREN          shift and go to state 84
    ID              shift and go to state 83
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    func_parameters                shift and go to state 85
    type_attr                      shift and go to state 86

state 59

    (56) function_declaration -> DEF type_attr ID . LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> DEF type_attr ID . LPAREN func_parameters RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 87


state 60

    (27) expression -> expression PLUS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 88
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 61

    (28) expression -> expression MINUS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 89
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 62

    (29) expression -> expression MULT . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 90
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 63

    (30) expression -> expression DIV . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 91
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 64

    (31) expression -> expression EXP . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 92
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 65

    (32) expression -> expression EQUALS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 93
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 66

    (33) expression -> expression GREATER . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 94
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 67

    (34) expression -> expression LESS . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 95
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 68

    (35) expression -> expression GEQUAL . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 96
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 69

    (36) expression -> expression LEQUAL . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 97
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 70

    (37) expression -> expression NEQUAL . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 98
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 71

    (47) expression -> MINUS expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 47 (expression -> MINUS expression .)
    MINUS           reduce using rule 47 (expression -> MINUS expression .)
    MULT            reduce using rule 47 (expression -> MINUS expression .)
    DIV             reduce using rule 47 (expression -> MINUS expression .)
    EXP             reduce using rule 47 (expression -> MINUS expression .)
    EQUALS          reduce using rule 47 (expression -> MINUS expression .)
    GREATER         reduce using rule 47 (expression -> MINUS expression .)
    LESS            reduce using rule 47 (expression -> MINUS expression .)
    GEQUAL          reduce using rule 47 (expression -> MINUS expression .)
    LEQUAL          reduce using rule 47 (expression -> MINUS expression .)
    NEQUAL          reduce using rule 47 (expression -> MINUS expression .)
    ID              reduce using rule 47 (expression -> MINUS expression .)
    CONST           reduce using rule 47 (expression -> MINUS expression .)
    DEF             reduce using rule 47 (expression -> MINUS expression .)
    RETURN          reduce using rule 47 (expression -> MINUS expression .)
    IF              reduce using rule 47 (expression -> MINUS expression .)
    FOR             reduce using rule 47 (expression -> MINUS expression .)
    INTattr         reduce using rule 47 (expression -> MINUS expression .)
    FLOATattr       reduce using rule 47 (expression -> MINUS expression .)
    STRINGattr      reduce using rule 47 (expression -> MINUS expression .)
    BOOLattr        reduce using rule 47 (expression -> MINUS expression .)
    NULL            reduce using rule 47 (expression -> MINUS expression .)
    $end            reduce using rule 47 (expression -> MINUS expression .)
    RBRACE          reduce using rule 47 (expression -> MINUS expression .)
    LBRACE          reduce using rule 47 (expression -> MINUS expression .)
    COMMA           reduce using rule 47 (expression -> MINUS expression .)
    RPAREN          reduce using rule 47 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 47 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! MULT            [ shift and go to state 62 ]
  ! DIV             [ shift and go to state 63 ]
  ! EXP             [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 65 ]
  ! GREATER         [ shift and go to state 66 ]
  ! LESS            [ shift and go to state 67 ]
  ! GEQUAL          [ shift and go to state 68 ]
  ! LEQUAL          [ shift and go to state 69 ]
  ! NEQUAL          [ shift and go to state 70 ]


state 72

    (38) expression -> LPAREN expression . RPAREN
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    RPAREN          shift and go to state 99
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70


state 73

    (10) array_declaration -> LBRACKET array_elements . RBRACKET

    RBRACKET        shift and go to state 100


state 74

    (11) array_elements -> expression .
    (12) array_elements -> expression . COMMA array_elements
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    RBRACKET        reduce using rule 11 (array_elements -> expression .)
    COMMA           shift and go to state 101
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70


state 75

    (13) if_statement -> IF expression LBRACE . statement_list RBRACE
    (14) if_statement -> IF expression LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    statement_list                 shift and go to state 102
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 76

    (15) for_in_statement -> FOR id_list IN . ID LBRACE statement_list RBRACE

    ID              shift and go to state 103


state 77

    (17) id_list -> ID COMMA . id_list
    (16) id_list -> . ID
    (17) id_list -> . ID COMMA id_list

    ID              shift and go to state 50

    id_list                        shift and go to state 104

state 78

    (59) function_call -> ID LPAREN parameters RPAREN .

    ID              reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    CONST           reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    DEF             reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    RETURN          reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    IF              reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    FOR             reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    INTattr         reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    FLOATattr       reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    STRINGattr      reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    BOOLattr        reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    NULL            reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    $end            reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    PLUS            reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    MINUS           reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    MULT            reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    DIV             reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    EXP             reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    EQUALS          reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    GREATER         reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    LESS            reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    GEQUAL          reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    LEQUAL          reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    NEQUAL          reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    RBRACE          reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    LBRACE          reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    COMMA           reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    RPAREN          reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)
    RBRACKET        reduce using rule 59 (function_call -> ID LPAREN parameters RPAREN .)


state 79

    (62) parameters -> expression COMMA . parameters
    (61) parameters -> . expression
    (62) parameters -> . expression COMMA parameters
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 54
    parameters                     shift and go to state 105
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 80

    (24) assignment -> type_attr ID ASSIGN expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    ID              reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    CONST           reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    DEF             reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    RETURN          reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    IF              reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    FOR             reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    INTattr         reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    FLOATattr       reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    STRINGattr      reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    BOOLattr        reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    NULL            reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    $end            reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    RBRACE          reduce using rule 24 (assignment -> type_attr ID ASSIGN expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70


state 81

    (25) assignment -> CONST ID ASSIGN expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    ID              reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    CONST           reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    DEF             reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    RETURN          reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    IF              reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    FOR             reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    INTattr         reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    FLOATattr       reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    STRINGattr      reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    BOOLattr        reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    NULL            reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    $end            reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    RBRACE          reduce using rule 25 (assignment -> CONST ID ASSIGN expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70


state 82

    (26) assignment -> CONST type_attr ID ASSIGN . expression
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 106
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 83

    (63) func_parameters -> ID .
    (64) func_parameters -> ID . COMMA func_parameters

    RPAREN          reduce using rule 63 (func_parameters -> ID .)
    COMMA           shift and go to state 107


state 84

    (54) function_declaration -> DEF ID LPAREN RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 108


state 85

    (55) function_declaration -> DEF ID LPAREN func_parameters . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 109


state 86

    (65) func_parameters -> type_attr . ID
    (66) func_parameters -> type_attr . ID COMMA func_parameters

    ID              shift and go to state 110


state 87

    (56) function_declaration -> DEF type_attr ID LPAREN . RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> DEF type_attr ID LPAREN . func_parameters RPAREN LBRACE statement_list RBRACE
    (63) func_parameters -> . ID
    (64) func_parameters -> . ID COMMA func_parameters
    (65) func_parameters -> . type_attr ID
    (66) func_parameters -> . type_attr ID COMMA func_parameters
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    RPAREN          shift and go to state 111
    ID              shift and go to state 83
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    type_attr                      shift and go to state 86
    func_parameters                shift and go to state 112

state 88

    (27) expression -> expression PLUS expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 27 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 27 (expression -> expression PLUS expression .)
    EXP             reduce using rule 27 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 27 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 27 (expression -> expression PLUS expression .)
    LESS            reduce using rule 27 (expression -> expression PLUS expression .)
    GEQUAL          reduce using rule 27 (expression -> expression PLUS expression .)
    LEQUAL          reduce using rule 27 (expression -> expression PLUS expression .)
    NEQUAL          reduce using rule 27 (expression -> expression PLUS expression .)
    ID              reduce using rule 27 (expression -> expression PLUS expression .)
    CONST           reduce using rule 27 (expression -> expression PLUS expression .)
    DEF             reduce using rule 27 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 27 (expression -> expression PLUS expression .)
    IF              reduce using rule 27 (expression -> expression PLUS expression .)
    FOR             reduce using rule 27 (expression -> expression PLUS expression .)
    INTattr         reduce using rule 27 (expression -> expression PLUS expression .)
    FLOATattr       reduce using rule 27 (expression -> expression PLUS expression .)
    STRINGattr      reduce using rule 27 (expression -> expression PLUS expression .)
    BOOLattr        reduce using rule 27 (expression -> expression PLUS expression .)
    NULL            reduce using rule 27 (expression -> expression PLUS expression .)
    $end            reduce using rule 27 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 27 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 27 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 27 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 27 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 27 (expression -> expression PLUS expression .)
    MULT            shift and go to state 62
    DIV             shift and go to state 63

  ! MULT            [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 27 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! EXP             [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 65 ]
  ! GREATER         [ shift and go to state 66 ]
  ! LESS            [ shift and go to state 67 ]
  ! GEQUAL          [ shift and go to state 68 ]
  ! LEQUAL          [ shift and go to state 69 ]
  ! NEQUAL          [ shift and go to state 70 ]


state 89

    (28) expression -> expression MINUS expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 28 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 28 (expression -> expression MINUS expression .)
    EXP             reduce using rule 28 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 28 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 28 (expression -> expression MINUS expression .)
    LESS            reduce using rule 28 (expression -> expression MINUS expression .)
    GEQUAL          reduce using rule 28 (expression -> expression MINUS expression .)
    LEQUAL          reduce using rule 28 (expression -> expression MINUS expression .)
    NEQUAL          reduce using rule 28 (expression -> expression MINUS expression .)
    ID              reduce using rule 28 (expression -> expression MINUS expression .)
    CONST           reduce using rule 28 (expression -> expression MINUS expression .)
    DEF             reduce using rule 28 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 28 (expression -> expression MINUS expression .)
    IF              reduce using rule 28 (expression -> expression MINUS expression .)
    FOR             reduce using rule 28 (expression -> expression MINUS expression .)
    INTattr         reduce using rule 28 (expression -> expression MINUS expression .)
    FLOATattr       reduce using rule 28 (expression -> expression MINUS expression .)
    STRINGattr      reduce using rule 28 (expression -> expression MINUS expression .)
    BOOLattr        reduce using rule 28 (expression -> expression MINUS expression .)
    NULL            reduce using rule 28 (expression -> expression MINUS expression .)
    $end            reduce using rule 28 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 28 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 28 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 28 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 28 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 28 (expression -> expression MINUS expression .)
    MULT            shift and go to state 62
    DIV             shift and go to state 63

  ! MULT            [ reduce using rule 28 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 28 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! EXP             [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 65 ]
  ! GREATER         [ shift and go to state 66 ]
  ! LESS            [ shift and go to state 67 ]
  ! GEQUAL          [ shift and go to state 68 ]
  ! LEQUAL          [ shift and go to state 69 ]
  ! NEQUAL          [ shift and go to state 70 ]


state 90

    (29) expression -> expression MULT expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 29 (expression -> expression MULT expression .)
    MINUS           reduce using rule 29 (expression -> expression MULT expression .)
    MULT            reduce using rule 29 (expression -> expression MULT expression .)
    DIV             reduce using rule 29 (expression -> expression MULT expression .)
    EXP             reduce using rule 29 (expression -> expression MULT expression .)
    EQUALS          reduce using rule 29 (expression -> expression MULT expression .)
    GREATER         reduce using rule 29 (expression -> expression MULT expression .)
    LESS            reduce using rule 29 (expression -> expression MULT expression .)
    GEQUAL          reduce using rule 29 (expression -> expression MULT expression .)
    LEQUAL          reduce using rule 29 (expression -> expression MULT expression .)
    NEQUAL          reduce using rule 29 (expression -> expression MULT expression .)
    ID              reduce using rule 29 (expression -> expression MULT expression .)
    CONST           reduce using rule 29 (expression -> expression MULT expression .)
    DEF             reduce using rule 29 (expression -> expression MULT expression .)
    RETURN          reduce using rule 29 (expression -> expression MULT expression .)
    IF              reduce using rule 29 (expression -> expression MULT expression .)
    FOR             reduce using rule 29 (expression -> expression MULT expression .)
    INTattr         reduce using rule 29 (expression -> expression MULT expression .)
    FLOATattr       reduce using rule 29 (expression -> expression MULT expression .)
    STRINGattr      reduce using rule 29 (expression -> expression MULT expression .)
    BOOLattr        reduce using rule 29 (expression -> expression MULT expression .)
    NULL            reduce using rule 29 (expression -> expression MULT expression .)
    $end            reduce using rule 29 (expression -> expression MULT expression .)
    RBRACE          reduce using rule 29 (expression -> expression MULT expression .)
    LBRACE          reduce using rule 29 (expression -> expression MULT expression .)
    COMMA           reduce using rule 29 (expression -> expression MULT expression .)
    RPAREN          reduce using rule 29 (expression -> expression MULT expression .)
    RBRACKET        reduce using rule 29 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! MULT            [ shift and go to state 62 ]
  ! DIV             [ shift and go to state 63 ]
  ! EXP             [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 65 ]
  ! GREATER         [ shift and go to state 66 ]
  ! LESS            [ shift and go to state 67 ]
  ! GEQUAL          [ shift and go to state 68 ]
  ! LEQUAL          [ shift and go to state 69 ]
  ! NEQUAL          [ shift and go to state 70 ]


state 91

    (30) expression -> expression DIV expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    PLUS            reduce using rule 30 (expression -> expression DIV expression .)
    MINUS           reduce using rule 30 (expression -> expression DIV expression .)
    MULT            reduce using rule 30 (expression -> expression DIV expression .)
    DIV             reduce using rule 30 (expression -> expression DIV expression .)
    EXP             reduce using rule 30 (expression -> expression DIV expression .)
    EQUALS          reduce using rule 30 (expression -> expression DIV expression .)
    GREATER         reduce using rule 30 (expression -> expression DIV expression .)
    LESS            reduce using rule 30 (expression -> expression DIV expression .)
    GEQUAL          reduce using rule 30 (expression -> expression DIV expression .)
    LEQUAL          reduce using rule 30 (expression -> expression DIV expression .)
    NEQUAL          reduce using rule 30 (expression -> expression DIV expression .)
    ID              reduce using rule 30 (expression -> expression DIV expression .)
    CONST           reduce using rule 30 (expression -> expression DIV expression .)
    DEF             reduce using rule 30 (expression -> expression DIV expression .)
    RETURN          reduce using rule 30 (expression -> expression DIV expression .)
    IF              reduce using rule 30 (expression -> expression DIV expression .)
    FOR             reduce using rule 30 (expression -> expression DIV expression .)
    INTattr         reduce using rule 30 (expression -> expression DIV expression .)
    FLOATattr       reduce using rule 30 (expression -> expression DIV expression .)
    STRINGattr      reduce using rule 30 (expression -> expression DIV expression .)
    BOOLattr        reduce using rule 30 (expression -> expression DIV expression .)
    NULL            reduce using rule 30 (expression -> expression DIV expression .)
    $end            reduce using rule 30 (expression -> expression DIV expression .)
    RBRACE          reduce using rule 30 (expression -> expression DIV expression .)
    LBRACE          reduce using rule 30 (expression -> expression DIV expression .)
    COMMA           reduce using rule 30 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 30 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 30 (expression -> expression DIV expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! MULT            [ shift and go to state 62 ]
  ! DIV             [ shift and go to state 63 ]
  ! EXP             [ shift and go to state 64 ]
  ! EQUALS          [ shift and go to state 65 ]
  ! GREATER         [ shift and go to state 66 ]
  ! LESS            [ shift and go to state 67 ]
  ! GEQUAL          [ shift and go to state 68 ]
  ! LEQUAL          [ shift and go to state 69 ]
  ! NEQUAL          [ shift and go to state 70 ]


state 92

    (31) expression -> expression EXP expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 31 (expression -> expression EXP expression .)
    CONST           reduce using rule 31 (expression -> expression EXP expression .)
    DEF             reduce using rule 31 (expression -> expression EXP expression .)
    RETURN          reduce using rule 31 (expression -> expression EXP expression .)
    IF              reduce using rule 31 (expression -> expression EXP expression .)
    FOR             reduce using rule 31 (expression -> expression EXP expression .)
    INTattr         reduce using rule 31 (expression -> expression EXP expression .)
    FLOATattr       reduce using rule 31 (expression -> expression EXP expression .)
    STRINGattr      reduce using rule 31 (expression -> expression EXP expression .)
    BOOLattr        reduce using rule 31 (expression -> expression EXP expression .)
    NULL            reduce using rule 31 (expression -> expression EXP expression .)
    $end            reduce using rule 31 (expression -> expression EXP expression .)
    RBRACE          reduce using rule 31 (expression -> expression EXP expression .)
    LBRACE          reduce using rule 31 (expression -> expression EXP expression .)
    COMMA           reduce using rule 31 (expression -> expression EXP expression .)
    RPAREN          reduce using rule 31 (expression -> expression EXP expression .)
    RBRACKET        reduce using rule 31 (expression -> expression EXP expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70

  ! PLUS            [ reduce using rule 31 (expression -> expression EXP expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression EXP expression .) ]
  ! MULT            [ reduce using rule 31 (expression -> expression EXP expression .) ]
  ! DIV             [ reduce using rule 31 (expression -> expression EXP expression .) ]
  ! EXP             [ reduce using rule 31 (expression -> expression EXP expression .) ]
  ! EQUALS          [ reduce using rule 31 (expression -> expression EXP expression .) ]
  ! GREATER         [ reduce using rule 31 (expression -> expression EXP expression .) ]
  ! LESS            [ reduce using rule 31 (expression -> expression EXP expression .) ]
  ! GEQUAL          [ reduce using rule 31 (expression -> expression EXP expression .) ]
  ! LEQUAL          [ reduce using rule 31 (expression -> expression EXP expression .) ]
  ! NEQUAL          [ reduce using rule 31 (expression -> expression EXP expression .) ]


state 93

    (32) expression -> expression EQUALS expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 32 (expression -> expression EQUALS expression .)
    CONST           reduce using rule 32 (expression -> expression EQUALS expression .)
    DEF             reduce using rule 32 (expression -> expression EQUALS expression .)
    RETURN          reduce using rule 32 (expression -> expression EQUALS expression .)
    IF              reduce using rule 32 (expression -> expression EQUALS expression .)
    FOR             reduce using rule 32 (expression -> expression EQUALS expression .)
    INTattr         reduce using rule 32 (expression -> expression EQUALS expression .)
    FLOATattr       reduce using rule 32 (expression -> expression EQUALS expression .)
    STRINGattr      reduce using rule 32 (expression -> expression EQUALS expression .)
    BOOLattr        reduce using rule 32 (expression -> expression EQUALS expression .)
    NULL            reduce using rule 32 (expression -> expression EQUALS expression .)
    $end            reduce using rule 32 (expression -> expression EQUALS expression .)
    RBRACE          reduce using rule 32 (expression -> expression EQUALS expression .)
    LBRACE          reduce using rule 32 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 32 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 32 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 32 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70

  ! PLUS            [ reduce using rule 32 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression EQUALS expression .) ]
  ! MULT            [ reduce using rule 32 (expression -> expression EQUALS expression .) ]
  ! DIV             [ reduce using rule 32 (expression -> expression EQUALS expression .) ]
  ! EXP             [ reduce using rule 32 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 32 (expression -> expression EQUALS expression .) ]
  ! GREATER         [ reduce using rule 32 (expression -> expression EQUALS expression .) ]
  ! LESS            [ reduce using rule 32 (expression -> expression EQUALS expression .) ]
  ! GEQUAL          [ reduce using rule 32 (expression -> expression EQUALS expression .) ]
  ! LEQUAL          [ reduce using rule 32 (expression -> expression EQUALS expression .) ]
  ! NEQUAL          [ reduce using rule 32 (expression -> expression EQUALS expression .) ]


state 94

    (33) expression -> expression GREATER expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 33 (expression -> expression GREATER expression .)
    CONST           reduce using rule 33 (expression -> expression GREATER expression .)
    DEF             reduce using rule 33 (expression -> expression GREATER expression .)
    RETURN          reduce using rule 33 (expression -> expression GREATER expression .)
    IF              reduce using rule 33 (expression -> expression GREATER expression .)
    FOR             reduce using rule 33 (expression -> expression GREATER expression .)
    INTattr         reduce using rule 33 (expression -> expression GREATER expression .)
    FLOATattr       reduce using rule 33 (expression -> expression GREATER expression .)
    STRINGattr      reduce using rule 33 (expression -> expression GREATER expression .)
    BOOLattr        reduce using rule 33 (expression -> expression GREATER expression .)
    NULL            reduce using rule 33 (expression -> expression GREATER expression .)
    $end            reduce using rule 33 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 33 (expression -> expression GREATER expression .)
    LBRACE          reduce using rule 33 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 33 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 33 (expression -> expression GREATER expression .)
    RBRACKET        reduce using rule 33 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70

  ! PLUS            [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! MULT            [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! DIV             [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! EXP             [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! EQUALS          [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! LESS            [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! GEQUAL          [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! LEQUAL          [ reduce using rule 33 (expression -> expression GREATER expression .) ]
  ! NEQUAL          [ reduce using rule 33 (expression -> expression GREATER expression .) ]


state 95

    (34) expression -> expression LESS expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 34 (expression -> expression LESS expression .)
    CONST           reduce using rule 34 (expression -> expression LESS expression .)
    DEF             reduce using rule 34 (expression -> expression LESS expression .)
    RETURN          reduce using rule 34 (expression -> expression LESS expression .)
    IF              reduce using rule 34 (expression -> expression LESS expression .)
    FOR             reduce using rule 34 (expression -> expression LESS expression .)
    INTattr         reduce using rule 34 (expression -> expression LESS expression .)
    FLOATattr       reduce using rule 34 (expression -> expression LESS expression .)
    STRINGattr      reduce using rule 34 (expression -> expression LESS expression .)
    BOOLattr        reduce using rule 34 (expression -> expression LESS expression .)
    NULL            reduce using rule 34 (expression -> expression LESS expression .)
    $end            reduce using rule 34 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 34 (expression -> expression LESS expression .)
    LBRACE          reduce using rule 34 (expression -> expression LESS expression .)
    COMMA           reduce using rule 34 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 34 (expression -> expression LESS expression .)
    RBRACKET        reduce using rule 34 (expression -> expression LESS expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70

  ! PLUS            [ reduce using rule 34 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression LESS expression .) ]
  ! MULT            [ reduce using rule 34 (expression -> expression LESS expression .) ]
  ! DIV             [ reduce using rule 34 (expression -> expression LESS expression .) ]
  ! EXP             [ reduce using rule 34 (expression -> expression LESS expression .) ]
  ! EQUALS          [ reduce using rule 34 (expression -> expression LESS expression .) ]
  ! GREATER         [ reduce using rule 34 (expression -> expression LESS expression .) ]
  ! LESS            [ reduce using rule 34 (expression -> expression LESS expression .) ]
  ! GEQUAL          [ reduce using rule 34 (expression -> expression LESS expression .) ]
  ! LEQUAL          [ reduce using rule 34 (expression -> expression LESS expression .) ]
  ! NEQUAL          [ reduce using rule 34 (expression -> expression LESS expression .) ]


state 96

    (35) expression -> expression GEQUAL expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 35 (expression -> expression GEQUAL expression .)
    CONST           reduce using rule 35 (expression -> expression GEQUAL expression .)
    DEF             reduce using rule 35 (expression -> expression GEQUAL expression .)
    RETURN          reduce using rule 35 (expression -> expression GEQUAL expression .)
    IF              reduce using rule 35 (expression -> expression GEQUAL expression .)
    FOR             reduce using rule 35 (expression -> expression GEQUAL expression .)
    INTattr         reduce using rule 35 (expression -> expression GEQUAL expression .)
    FLOATattr       reduce using rule 35 (expression -> expression GEQUAL expression .)
    STRINGattr      reduce using rule 35 (expression -> expression GEQUAL expression .)
    BOOLattr        reduce using rule 35 (expression -> expression GEQUAL expression .)
    NULL            reduce using rule 35 (expression -> expression GEQUAL expression .)
    $end            reduce using rule 35 (expression -> expression GEQUAL expression .)
    RBRACE          reduce using rule 35 (expression -> expression GEQUAL expression .)
    LBRACE          reduce using rule 35 (expression -> expression GEQUAL expression .)
    COMMA           reduce using rule 35 (expression -> expression GEQUAL expression .)
    RPAREN          reduce using rule 35 (expression -> expression GEQUAL expression .)
    RBRACKET        reduce using rule 35 (expression -> expression GEQUAL expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70

  ! PLUS            [ reduce using rule 35 (expression -> expression GEQUAL expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression GEQUAL expression .) ]
  ! MULT            [ reduce using rule 35 (expression -> expression GEQUAL expression .) ]
  ! DIV             [ reduce using rule 35 (expression -> expression GEQUAL expression .) ]
  ! EXP             [ reduce using rule 35 (expression -> expression GEQUAL expression .) ]
  ! EQUALS          [ reduce using rule 35 (expression -> expression GEQUAL expression .) ]
  ! GREATER         [ reduce using rule 35 (expression -> expression GEQUAL expression .) ]
  ! LESS            [ reduce using rule 35 (expression -> expression GEQUAL expression .) ]
  ! GEQUAL          [ reduce using rule 35 (expression -> expression GEQUAL expression .) ]
  ! LEQUAL          [ reduce using rule 35 (expression -> expression GEQUAL expression .) ]
  ! NEQUAL          [ reduce using rule 35 (expression -> expression GEQUAL expression .) ]


state 97

    (36) expression -> expression LEQUAL expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 36 (expression -> expression LEQUAL expression .)
    CONST           reduce using rule 36 (expression -> expression LEQUAL expression .)
    DEF             reduce using rule 36 (expression -> expression LEQUAL expression .)
    RETURN          reduce using rule 36 (expression -> expression LEQUAL expression .)
    IF              reduce using rule 36 (expression -> expression LEQUAL expression .)
    FOR             reduce using rule 36 (expression -> expression LEQUAL expression .)
    INTattr         reduce using rule 36 (expression -> expression LEQUAL expression .)
    FLOATattr       reduce using rule 36 (expression -> expression LEQUAL expression .)
    STRINGattr      reduce using rule 36 (expression -> expression LEQUAL expression .)
    BOOLattr        reduce using rule 36 (expression -> expression LEQUAL expression .)
    NULL            reduce using rule 36 (expression -> expression LEQUAL expression .)
    $end            reduce using rule 36 (expression -> expression LEQUAL expression .)
    RBRACE          reduce using rule 36 (expression -> expression LEQUAL expression .)
    LBRACE          reduce using rule 36 (expression -> expression LEQUAL expression .)
    COMMA           reduce using rule 36 (expression -> expression LEQUAL expression .)
    RPAREN          reduce using rule 36 (expression -> expression LEQUAL expression .)
    RBRACKET        reduce using rule 36 (expression -> expression LEQUAL expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70

  ! PLUS            [ reduce using rule 36 (expression -> expression LEQUAL expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression LEQUAL expression .) ]
  ! MULT            [ reduce using rule 36 (expression -> expression LEQUAL expression .) ]
  ! DIV             [ reduce using rule 36 (expression -> expression LEQUAL expression .) ]
  ! EXP             [ reduce using rule 36 (expression -> expression LEQUAL expression .) ]
  ! EQUALS          [ reduce using rule 36 (expression -> expression LEQUAL expression .) ]
  ! GREATER         [ reduce using rule 36 (expression -> expression LEQUAL expression .) ]
  ! LESS            [ reduce using rule 36 (expression -> expression LEQUAL expression .) ]
  ! GEQUAL          [ reduce using rule 36 (expression -> expression LEQUAL expression .) ]
  ! LEQUAL          [ reduce using rule 36 (expression -> expression LEQUAL expression .) ]
  ! NEQUAL          [ reduce using rule 36 (expression -> expression LEQUAL expression .) ]


state 98

    (37) expression -> expression NEQUAL expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GEQUAL resolved as shift
  ! shift/reduce conflict for LEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
    ID              reduce using rule 37 (expression -> expression NEQUAL expression .)
    CONST           reduce using rule 37 (expression -> expression NEQUAL expression .)
    DEF             reduce using rule 37 (expression -> expression NEQUAL expression .)
    RETURN          reduce using rule 37 (expression -> expression NEQUAL expression .)
    IF              reduce using rule 37 (expression -> expression NEQUAL expression .)
    FOR             reduce using rule 37 (expression -> expression NEQUAL expression .)
    INTattr         reduce using rule 37 (expression -> expression NEQUAL expression .)
    FLOATattr       reduce using rule 37 (expression -> expression NEQUAL expression .)
    STRINGattr      reduce using rule 37 (expression -> expression NEQUAL expression .)
    BOOLattr        reduce using rule 37 (expression -> expression NEQUAL expression .)
    NULL            reduce using rule 37 (expression -> expression NEQUAL expression .)
    $end            reduce using rule 37 (expression -> expression NEQUAL expression .)
    RBRACE          reduce using rule 37 (expression -> expression NEQUAL expression .)
    LBRACE          reduce using rule 37 (expression -> expression NEQUAL expression .)
    COMMA           reduce using rule 37 (expression -> expression NEQUAL expression .)
    RPAREN          reduce using rule 37 (expression -> expression NEQUAL expression .)
    RBRACKET        reduce using rule 37 (expression -> expression NEQUAL expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70

  ! PLUS            [ reduce using rule 37 (expression -> expression NEQUAL expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression NEQUAL expression .) ]
  ! MULT            [ reduce using rule 37 (expression -> expression NEQUAL expression .) ]
  ! DIV             [ reduce using rule 37 (expression -> expression NEQUAL expression .) ]
  ! EXP             [ reduce using rule 37 (expression -> expression NEQUAL expression .) ]
  ! EQUALS          [ reduce using rule 37 (expression -> expression NEQUAL expression .) ]
  ! GREATER         [ reduce using rule 37 (expression -> expression NEQUAL expression .) ]
  ! LESS            [ reduce using rule 37 (expression -> expression NEQUAL expression .) ]
  ! GEQUAL          [ reduce using rule 37 (expression -> expression NEQUAL expression .) ]
  ! LEQUAL          [ reduce using rule 37 (expression -> expression NEQUAL expression .) ]
  ! NEQUAL          [ reduce using rule 37 (expression -> expression NEQUAL expression .) ]


state 99

    (38) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    GEQUAL          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    LEQUAL          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    NEQUAL          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    CONST           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    DEF             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    INTattr         reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    FLOATattr       reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    STRINGattr      reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    BOOLattr        reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    NULL            reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 38 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 38 (expression -> LPAREN expression RPAREN .)


state 100

    (10) array_declaration -> LBRACKET array_elements RBRACKET .

    PLUS            reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    MINUS           reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    MULT            reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    DIV             reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    EXP             reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    EQUALS          reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    GREATER         reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    LESS            reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    GEQUAL          reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    LEQUAL          reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    NEQUAL          reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    ID              reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    CONST           reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    DEF             reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    RETURN          reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    IF              reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    FOR             reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    INTattr         reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    FLOATattr       reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    STRINGattr      reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    BOOLattr        reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    NULL            reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    $end            reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    RBRACE          reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    LBRACE          reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    COMMA           reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    RPAREN          reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)
    RBRACKET        reduce using rule 10 (array_declaration -> LBRACKET array_elements RBRACKET .)


state 101

    (12) array_elements -> expression COMMA . array_elements
    (11) array_elements -> . expression
    (12) array_elements -> . expression COMMA array_elements
    (27) expression -> . expression PLUS expression
    (28) expression -> . expression MINUS expression
    (29) expression -> . expression MULT expression
    (30) expression -> . expression DIV expression
    (31) expression -> . expression EXP expression
    (32) expression -> . expression EQUALS expression
    (33) expression -> . expression GREATER expression
    (34) expression -> . expression LESS expression
    (35) expression -> . expression GEQUAL expression
    (36) expression -> . expression LEQUAL expression
    (37) expression -> . expression NEQUAL expression
    (38) expression -> . LPAREN expression RPAREN
    (39) expression -> . NUMBER
    (40) expression -> . STRING
    (41) expression -> . FLOAT
    (42) expression -> . BOOL
    (43) expression -> . NULL
    (44) expression -> . id
    (45) expression -> . function_call
    (46) expression -> . array_declaration
    (47) expression -> . MINUS expression
    (60) id -> . ID
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (10) array_declaration -> . LBRACKET array_elements RBRACKET

    LPAREN          shift and go to state 37
    NUMBER          shift and go to state 38
    STRING          shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    NULL            shift and go to state 42
    MINUS           shift and go to state 36
    ID              shift and go to state 46
    LBRACKET        shift and go to state 47

    expression                     shift and go to state 74
    array_elements                 shift and go to state 113
    id                             shift and go to state 43
    function_call                  shift and go to state 44
    array_declaration              shift and go to state 45

state 102

    (13) if_statement -> IF expression LBRACE statement_list . RBRACE
    (14) if_statement -> IF expression LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    RBRACE          shift and go to state 114
    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    statement                      shift and go to state 22
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 103

    (15) for_in_statement -> FOR id_list IN ID . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 115


state 104

    (17) id_list -> ID COMMA id_list .

    IN              reduce using rule 17 (id_list -> ID COMMA id_list .)


state 105

    (62) parameters -> expression COMMA parameters .

    RPAREN          reduce using rule 62 (parameters -> expression COMMA parameters .)


state 106

    (26) assignment -> CONST type_attr ID ASSIGN expression .
    (27) expression -> expression . PLUS expression
    (28) expression -> expression . MINUS expression
    (29) expression -> expression . MULT expression
    (30) expression -> expression . DIV expression
    (31) expression -> expression . EXP expression
    (32) expression -> expression . EQUALS expression
    (33) expression -> expression . GREATER expression
    (34) expression -> expression . LESS expression
    (35) expression -> expression . GEQUAL expression
    (36) expression -> expression . LEQUAL expression
    (37) expression -> expression . NEQUAL expression

    ID              reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    CONST           reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    DEF             reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    RETURN          reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    IF              reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    FOR             reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    INTattr         reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    FLOATattr       reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    STRINGattr      reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    BOOLattr        reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    NULL            reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    $end            reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    RBRACE          reduce using rule 26 (assignment -> CONST type_attr ID ASSIGN expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    MULT            shift and go to state 62
    DIV             shift and go to state 63
    EXP             shift and go to state 64
    EQUALS          shift and go to state 65
    GREATER         shift and go to state 66
    LESS            shift and go to state 67
    GEQUAL          shift and go to state 68
    LEQUAL          shift and go to state 69
    NEQUAL          shift and go to state 70


state 107

    (64) func_parameters -> ID COMMA . func_parameters
    (63) func_parameters -> . ID
    (64) func_parameters -> . ID COMMA func_parameters
    (65) func_parameters -> . type_attr ID
    (66) func_parameters -> . type_attr ID COMMA func_parameters
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 83
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    func_parameters                shift and go to state 116
    type_attr                      shift and go to state 86

state 108

    (54) function_declaration -> DEF ID LPAREN RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    statement_list                 shift and go to state 117
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 109

    (55) function_declaration -> DEF ID LPAREN func_parameters RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 118


state 110

    (65) func_parameters -> type_attr ID .
    (66) func_parameters -> type_attr ID . COMMA func_parameters

    RPAREN          reduce using rule 65 (func_parameters -> type_attr ID .)
    COMMA           shift and go to state 119


state 111

    (56) function_declaration -> DEF type_attr ID LPAREN RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 120


state 112

    (57) function_declaration -> DEF type_attr ID LPAREN func_parameters . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 121


state 113

    (12) array_elements -> expression COMMA array_elements .

    RBRACKET        reduce using rule 12 (array_elements -> expression COMMA array_elements .)


state 114

    (13) if_statement -> IF expression LBRACE statement_list RBRACE .
    (14) if_statement -> IF expression LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE

    ID              reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    CONST           reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    DEF             reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    IF              reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    FOR             reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    NULL            reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    $end            reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 13 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 122


state 115

    (15) for_in_statement -> FOR id_list IN ID LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    statement_list                 shift and go to state 123
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 116

    (64) func_parameters -> ID COMMA func_parameters .

    RPAREN          reduce using rule 64 (func_parameters -> ID COMMA func_parameters .)


state 117

    (54) function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    RBRACE          shift and go to state 124
    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    statement                      shift and go to state 22
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 118

    (55) function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    statement_list                 shift and go to state 125
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 119

    (66) func_parameters -> type_attr ID COMMA . func_parameters
    (63) func_parameters -> . ID
    (64) func_parameters -> . ID COMMA func_parameters
    (65) func_parameters -> . type_attr ID
    (66) func_parameters -> . type_attr ID COMMA func_parameters
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 83
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    type_attr                      shift and go to state 86
    func_parameters                shift and go to state 126

state 120

    (56) function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    type_attr                      shift and go to state 11
    statement_list                 shift and go to state 127
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9

state 121

    (57) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 128


state 122

    (14) if_statement -> IF expression LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 129


state 123

    (15) for_in_statement -> FOR id_list IN ID LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    RBRACE          shift and go to state 130
    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    statement                      shift and go to state 22
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 124

    (54) function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .

    ID              reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    CONST           reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    DEF             reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    NULL            reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 54 (function_declaration -> DEF ID LPAREN RPAREN LBRACE statement_list RBRACE .)


state 125

    (55) function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    RBRACE          shift and go to state 131
    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    statement                      shift and go to state 22
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 126

    (66) func_parameters -> type_attr ID COMMA func_parameters .

    RPAREN          reduce using rule 66 (func_parameters -> type_attr ID COMMA func_parameters .)


state 127

    (56) function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    RBRACE          shift and go to state 132
    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    type_attr                      shift and go to state 11
    statement                      shift and go to state 22
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9

state 128

    (57) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    type_attr                      shift and go to state 11
    statement_list                 shift and go to state 133
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9

state 129

    (14) if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    statement_list                 shift and go to state 134
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 130

    (15) for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .

    ID              reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    CONST           reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    DEF             reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    IF              reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    FOR             reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    NULL            reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    $end            reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 15 (for_in_statement -> FOR id_list IN ID LBRACE statement_list RBRACE .)


state 131

    (55) function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .

    ID              reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    CONST           reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    DEF             reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    NULL            reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 55 (function_declaration -> DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)


state 132

    (56) function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .

    ID              reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    CONST           reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    DEF             reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    NULL            reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 56 (function_declaration -> DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE .)


state 133

    (57) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    RBRACE          shift and go to state 135
    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    type_attr                      shift and go to state 11
    statement                      shift and go to state 22
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9

state 134

    (14) if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . function_declaration
    (6) statement -> . return_statement
    (7) statement -> . function_call
    (8) statement -> . if_statement
    (9) statement -> . for_in_statement
    (21) assignment -> . ID assignment_type expression
    (22) assignment -> . ID ADD
    (23) assignment -> . ID SUB
    (24) assignment -> . type_attr ID ASSIGN expression
    (25) assignment -> . CONST ID ASSIGN expression
    (26) assignment -> . CONST type_attr ID ASSIGN expression
    (54) function_declaration -> . DEF ID LPAREN RPAREN LBRACE statement_list RBRACE
    (55) function_declaration -> . DEF ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (56) function_declaration -> . DEF type_attr ID LPAREN RPAREN LBRACE statement_list RBRACE
    (57) function_declaration -> . DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE
    (48) return_statement -> . RETURN expression
    (58) function_call -> . ID LPAREN RPAREN
    (59) function_call -> . ID LPAREN parameters RPAREN
    (13) if_statement -> . IF expression LBRACE statement_list RBRACE
    (14) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (15) for_in_statement -> . FOR id_list IN ID LBRACE statement_list RBRACE
    (49) type_attr -> . INTattr
    (50) type_attr -> . FLOATattr
    (51) type_attr -> . STRINGattr
    (52) type_attr -> . BOOLattr
    (53) type_attr -> . NULL

    RBRACE          shift and go to state 136
    ID              shift and go to state 10
    CONST           shift and go to state 12
    DEF             shift and go to state 13
    RETURN          shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    INTattr         shift and go to state 17
    FLOATattr       shift and go to state 18
    STRINGattr      shift and go to state 19
    BOOLattr        shift and go to state 20
    NULL            shift and go to state 21

    statement                      shift and go to state 22
    assignment                     shift and go to state 4
    function_declaration           shift and go to state 5
    return_statement               shift and go to state 6
    function_call                  shift and go to state 7
    if_statement                   shift and go to state 8
    for_in_statement               shift and go to state 9
    type_attr                      shift and go to state 11

state 135

    (57) function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .

    ID              reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    CONST           reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    DEF             reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    NULL            reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 57 (function_declaration -> DEF type_attr ID LPAREN func_parameters RPAREN LBRACE statement_list RBRACE .)


state 136

    (14) if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    ID              reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    CONST           reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    DEF             reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    INTattr         reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FLOATattr       reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    STRINGattr      reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    BOOLattr        reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    NULL            reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 14 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MULT in state 92 resolved as shift
WARNING: shift/reduce conflict for DIV in state 92 resolved as shift
WARNING: shift/reduce conflict for EXP in state 92 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 92 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 92 resolved as shift
WARNING: shift/reduce conflict for LESS in state 92 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MULT in state 93 resolved as shift
WARNING: shift/reduce conflict for DIV in state 93 resolved as shift
WARNING: shift/reduce conflict for EXP in state 93 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 93 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 93 resolved as shift
WARNING: shift/reduce conflict for LESS in state 93 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for MULT in state 94 resolved as shift
WARNING: shift/reduce conflict for DIV in state 94 resolved as shift
WARNING: shift/reduce conflict for EXP in state 94 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 94 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 94 resolved as shift
WARNING: shift/reduce conflict for LESS in state 94 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 94 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 94 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 94 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MULT in state 95 resolved as shift
WARNING: shift/reduce conflict for DIV in state 95 resolved as shift
WARNING: shift/reduce conflict for EXP in state 95 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 95 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 95 resolved as shift
WARNING: shift/reduce conflict for LESS in state 95 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 95 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 95 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MULT in state 96 resolved as shift
WARNING: shift/reduce conflict for DIV in state 96 resolved as shift
WARNING: shift/reduce conflict for EXP in state 96 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 96 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 96 resolved as shift
WARNING: shift/reduce conflict for LESS in state 96 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 96 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 96 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MULT in state 97 resolved as shift
WARNING: shift/reduce conflict for DIV in state 97 resolved as shift
WARNING: shift/reduce conflict for EXP in state 97 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 97 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 97 resolved as shift
WARNING: shift/reduce conflict for LESS in state 97 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 97 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 97 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MULT in state 98 resolved as shift
WARNING: shift/reduce conflict for DIV in state 98 resolved as shift
WARNING: shift/reduce conflict for EXP in state 98 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 98 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 98 resolved as shift
WARNING: shift/reduce conflict for LESS in state 98 resolved as shift
WARNING: shift/reduce conflict for GEQUAL in state 98 resolved as shift
WARNING: shift/reduce conflict for LEQUAL in state 98 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 98 resolved as shift
